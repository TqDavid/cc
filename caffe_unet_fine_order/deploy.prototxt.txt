name:"UNET"
layer {
  name: "data"
  type: "Python"
  top: "img"
  top: "mask"
  python_param{
    module: 'mydatalayer'
    layer: 'DataLayer'
	}
}
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "img"
  top: "conv1_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 3
    weight_filler{
      type:"gaussian"
      std:0.01
    }
  }
}
layer {
  name: "norm1_1"
  type: "BatchNorm"
  bottom: "conv1_1"
  top: "conv1_1"
  param {
      lr_mult: 1.0
      decay_mult: 0
  }
  param {
      lr_mult: 1.0
      decay_mult: 0
  }
  param {
      lr_mult: 1.0
      decay_mult: 0
  }
}

layer {
  name: "scale1_1"
  type: "Scale"
  bottom: "conv1_1"
  top: "conv1_1"
  param {
      lr_mult: 1.00001
      decay_mult: 0
  }
  param {
      lr_mult: 1.00001
      decay_mult: 0
  }
  scale_param {
      filler {
        type: "constant"
        value: 1
      }
      bias_term: true
      bias_filler {
        type: "constant"
        value: 0
    }
  }
}

layer{
  name:"relu1"
  type:"ReLU"
  bottom:"conv1_1"
  top:"conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 3
    weight_filler{
      type:"gaussian"
      std:0.01
    }
  }
}
layer {
  name: "norm1_2"
  type: "BatchNorm"
  bottom: "conv1_2"
  top: "conv1_2"
  param {
      lr_mult: 1.0
      decay_mult: 0
  }
  param {
      lr_mult: 1.0
      decay_mult: 0
  }
  param {
      lr_mult: 1.0
      decay_mult: 0
  }
}

layer {
  name: "scale1_2"
  type: "Scale"
  bottom: "conv1_2"
  top: "conv1_2"
  param {
      lr_mult: 1.00001
      decay_mult: 0
  }
  param {
      lr_mult: 1.00001
      decay_mult: 0
  }
  scale_param {
      filler {
        type: "constant"
        value: 1
      }
      bias_term: true
      bias_filler {
        type: "constant"
        value: 0
    }
  }
}
layer{
  name:"relu2"
  type:"ReLU"
  bottom:"conv1_2"
  top:"conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 3
    weight_filler{
      type:"gaussian"
      std:0.01
    }
  }
}
layer {
  name: "norm2_1"
  type: "BatchNorm"
  bottom: "conv2_1"
  top: "conv2_1"
  param {
      lr_mult: 1.0
      decay_mult: 0
  }
  param {
      lr_mult: 1.0
      decay_mult: 0
  }
  param {
      lr_mult: 1.0
      decay_mult: 0
  }
}

layer {
  name: "scale2_1"
  type: "Scale"
  bottom: "conv2_1"
  top: "conv2_1"
  param {
      lr_mult: 1.00001
      decay_mult: 0
  }
  param {
      lr_mult: 1.00001
      decay_mult: 0
  }
  scale_param {
      filler {
        type: "constant"
        value: 1
      }
      bias_term: true
      bias_filler {
        type: "constant"
        value: 0
    }
  }
}
layer{
  name:"relu3"
  type:"ReLU"
  bottom:"conv2_1"
  top:"conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 3
    weight_filler{
      type:"gaussian"
      std:0.01
    }
  }
}
layer {
  name: "norm2_2"
  type: "BatchNorm"
  bottom: "conv2_2"
  top: "conv2_2"
  param {
      lr_mult: 1.0
      decay_mult: 0
  }
  param {
      lr_mult: 1.0
      decay_mult: 0
  }
  param {
      lr_mult: 1.0
      decay_mult: 0
  }
}

layer {
  name: "scale2_2"
  type: "Scale"
  bottom: "conv2_2"
  top: "conv2_2"
  param {
      lr_mult: 1.00001
      decay_mult: 0
  }
  param {
      lr_mult: 1.00001
      decay_mult: 0
  }
  scale_param {
      filler {
        type: "constant"
        value: 1
      }
      bias_term: true
      bias_filler {
        type: "constant"
        value: 0
    }
  }
}
layer{
  name:"relu4"
  type:"ReLU"
  bottom:"conv2_2"
  top:"conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 0
    kernel_size: 3
    weight_filler{
      type:"gaussian"
      std:0.01
    }
  }
}

layer {
  name: "norm3_1"
  type: "BatchNorm"
  bottom: "conv3_1"
  top: "conv3_1"
  param {
      lr_mult: 1.0
      decay_mult: 0
  }
  param {
      lr_mult: 1.0
      decay_mult: 0
  }
  param {
      lr_mult: 1.0
      decay_mult: 0
  }
}

layer {
  name: "scale3_1"
  type: "Scale"
  bottom: "conv3_1"
  top: "conv3_1"
  param {
      lr_mult: 1.00001
      decay_mult: 0
  }
  param {
      lr_mult: 1.00001
      decay_mult: 0
  }
  scale_param {
      filler {
        type: "constant"
        value: 1
      }
      bias_term: true
      bias_filler {
        type: "constant"
        value: 0
    }
  }
}
layer{
  name:"relu5"
  type:"ReLU"
  bottom:"conv3_1"
  top:"conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 0
    kernel_size: 3
    weight_filler{
      type:"gaussian"
      std:0.01
    }
  }
}
layer{
  name:"relu6"
  type:"ReLU"
  bottom:"conv3_2"
  top:"conv3_2"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_2"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 3
    weight_filler{
      type:"gaussian"
      std:0.01
    }
  }
}
layer{
  name:"relu7"
  type:"ReLU"
  bottom:"conv4_1"
  top:"conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 3
    weight_filler{
      type:"gaussian"
      std:0.01
    }
  }
}
layer{
  name:"relu8"
  type:"ReLU"
  bottom:"conv4_2"
  top:"conv4_2"
}
layer {
  name: "drop4"
  type: "Dropout"
  bottom: "conv4_2"
  top: "conv4_2"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_2"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 1024
    pad: 0
    kernel_size: 3
    weight_filler{
      type:"gaussian"
      std:0.01
    }
  }
}
layer{
  name:"relu9"
  type:"ReLU"
  bottom:"conv5_1"
  top:"conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 1024
    pad: 0
    kernel_size: 3
    weight_filler{
      type:"gaussian"
      std:0.01
    }
  }
}
layer{
  name:"relu10"
  type:"ReLU"
  bottom:"conv5_2"
  top:"conv5_2"
}
layer {
  name: "drop5"
  type: "Dropout"
  bottom: "conv5_2"
  top: "conv5_2"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
    name: "upscore1"
    type: "Deconvolution"
    bottom: "conv5_2"
    top: "upscore1"
    param {
        lr_mult: 1
        decay_mult: 1
  }
  convolution_param {
    num_output: 512
    bias_term: false
    kernel_size: 2
    stride: 2
    weight_filler{
      type:"gaussian"
      std:0.01
    }
  }
}
layer{
  name:"relu11"
  type:"ReLU"
  bottom:"upscore1"
  top:"upscore1"
}
layer {
    name: 'crop1'
    type: 'Crop'
    bottom: 'conv4_2'
    bottom: 'upscore1'
    top: 'crop1'
    crop_param {
    axis: 2
    offset: 4
    offset: 4
  }
}
layer {
    name: "concat1"
    type: "Concat"
    bottom: "crop1"
    bottom: "upscore1"
    top: "concat1"
    concat_param {
    axis: 1
  }
}
layer {
  name: "conv6_1"
  type: "Convolution"
  bottom: "concat1"
  top: "conv6_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 3
    weight_filler{
      type:"gaussian"
      std:0.01
    }
  }
}
layer{
  name:"relu12"
  type:"ReLU"
  bottom:"conv6_1"
  top:"conv6_1"
}
layer {
  name: "conv6_2"
  type: "Convolution"
  bottom: "conv6_1"
  top: "conv6_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 3
    weight_filler{
      type:"gaussian"
      std:0.01
    }
  }
}
layer{
  name:"relu13"
  type:"ReLU"
  bottom:"conv6_2"
  top:"conv6_2"
}
layer {
    name: "upscore2"
    type: "Deconvolution"
    bottom: "conv6_2"
    top: "upscore2"
    param {
        lr_mult: 1
        decay_mult: 1
  }
  convolution_param {
    num_output: 256
    bias_term: false
    kernel_size: 2
    stride: 2
    weight_filler{
      type:"gaussian"
      std:0.01
    }
  }
}
layer{
  name:"relu14"
  type:"ReLU"
  bottom:"upscore2"
  top:"upscore2"
}
layer {
    name: 'crop2'
    type: 'Crop'
    bottom: 'conv3_2'
    bottom: 'upscore2'
    top: 'crop2'
    crop_param {
    axis: 2
    offset: 16
    offset: 16
  }
}
layer {
    name: "concat2"
    type: "Concat"
    bottom: "crop2"
    bottom: "upscore2"
    top: "concat2"
    concat_param {
    axis: 1
  }
}
layer {
  name: "conv7_1"
  type: "Convolution"
  bottom: "concat2"
  top: "conv7_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 0
    kernel_size: 3
    weight_filler{
      type:"gaussian"
      std:0.01
    }
  }
}
layer{
  name:"relu15"
  type:"ReLU"
  bottom:"conv7_1"
  top:"conv7_1"
}
layer {
  name: "conv7_2"
  type: "Convolution"
  bottom: "conv7_1"
  top: "conv7_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 0
    kernel_size: 3
    weight_filler{
      type:"gaussian"
      std:0.01
    }
  }
}
layer{
  name:"relu16"
  type:"ReLU"
  bottom:"conv7_2"
  top:"conv7_2"
}
layer {
    name: "upscore3"
    type: "Deconvolution"
    bottom: "conv7_2"
    top: "upscore3"
    param {
        lr_mult: 1
        decay_mult: 1
  }
  convolution_param {
    num_output: 128
    bias_term: false
    kernel_size: 2
    stride: 2
    weight_filler{
      type:"gaussian"
      std:0.01
    }
  }
}
layer{
  name:"relu17"
  type:"ReLU"
  bottom:"upscore3"
  top:"upscore3"
}
layer {
    name: 'crop3'
    type: 'Crop'
    bottom: 'conv2_2'
    bottom: 'upscore3'
    top: 'crop3'
    crop_param {
    axis: 2
    offset: 40
    offset: 40
  }
}
layer {
    name: "concat3"
    type: "Concat"
    bottom: "crop3"
    bottom: "upscore3"
    top: "concat3"
    concat_param {
    axis: 1
  }
}
layer {
  name: "conv8_1"
  type: "Convolution"
  bottom: "concat3"
  top: "conv8_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 3
    weight_filler{
      type:"gaussian"
      std:0.01
    }
  }
}
layer{
  name:"relu18"
  type:"ReLU"
  bottom:"conv8_1"
  top:"conv8_1"
}
layer {
  name: "conv8_2"
  type: "Convolution"
  bottom: "conv8_1"
  top: "conv8_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 0
    kernel_size: 3
    weight_filler{
      type:"gaussian"
      std:0.01
    }
  }
}
layer{
  name:"relu19"
  type:"ReLU"
  bottom:"conv8_2"
  top:"conv8_2"
}
layer {
    name: "upscore4"
    type: "Deconvolution"
    bottom: "conv8_2"
    top: "upscore4"
    param {
        lr_mult: 1
        decay_mult: 1
  }
  convolution_param {
    num_output: 64
    bias_term: false
    kernel_size: 2
    stride: 2
    weight_filler{
      type:"gaussian"
      std:0.01
    }
  }
}
layer{
  name:"relu20"
  type:"ReLU"
  bottom:"upscore4"
  top:"upscore4"
}
layer {
    name: 'crop4'
    type: 'Crop'
    bottom: 'conv1_2'
    bottom: 'upscore4'
    top: 'crop4'
    crop_param {
    axis: 2
    offset: 88
    offset: 88
  }
}
layer {
    name: "concat4"
    type: "Concat"
    bottom: "crop4"
    bottom: "upscore4"
    top: "concat4"
    concat_param {
    axis: 1
  }
}
layer {
  name: "conv9_1"
  type: "Convolution"
  bottom: "concat4"
  top: "conv9_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 3
    weight_filler{
      type:"gaussian"
      std:0.01
    }
  }
}
layer{
  name:"relu21"
  type:"ReLU"
  bottom:"conv9_1"
  top:"conv9_1"
}
layer {
  name: "conv9_2"
  type: "Convolution"
  bottom: "conv9_1"
  top: "conv9_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 3
    weight_filler{
      type:"gaussian"
      std:0.01
    }
  }
}
layer{
  name:"relu22"
  type:"ReLU"
  bottom:"conv9_2"
  top:"conv9_2"
}
layer {
  name: "score"
  type: "Convolution"
  bottom: "conv9_2"
  top: "score"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 2 #2
    pad: 0
    kernel_size: 1
    weight_filler{
      type:"gaussian"
      std:0.01
    }
  }
}
layer{
  name:"sigmoid1"
  type:"Sigmoid"
  bottom:"score"
  top:"score"
}
layer {
    name: 'crop5'
    type: 'Crop'
    bottom: 'mask'
    bottom: 'score'
    top: 'crop5'
    crop_param {
    axis: 2
    offset: 92
    offset: 92
  }
}





