I0726 09:55:27.527671 47614 caffe.cpp:217] Using GPUs 0
I0726 09:55:27.699230 47614 caffe.cpp:222] GPU 0: Graphics Device
I0726 09:55:31.353884 47614 solver.cpp:48] Initializing solver from parameters: 
test_iter: 1
test_interval: 10000000
base_lr: 0.1
display: 20
max_iter: 200000
lr_policy: "step"
gamma: 1
momentum: 0.9
weight_decay: 0.0005
stepsize: 10000000
snapshot: 1000
snapshot_prefix: "examples/segnet/segnet_train/segnet_basic/seg"
solver_mode: GPU
device_id: 0
net: "examples/segnet/segnet_train.prototxt"
train_state {
  level: 0
  stage: ""
}
test_initialization: false
I0726 09:55:31.354178 47614 solver.cpp:91] Creating training net from net file: examples/segnet/segnet_train.prototxt
I0726 09:55:31.356215 47614 net.cpp:58] Initializing net from parameters: 
name: "segnet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "data"
  type: "DenseImageData"
  top: "data"
  top: "label"
  dense_image_data_param {
    source: "data/mydata/train.txt"
    batch_size: 4
    shuffle: true
  }
}
layer {
  name: "norm"
  type: "LRN"
  bottom: "data"
  top: "norm"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "norm"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv1_bn"
  type: "BN"
  bottom: "conv1"
  top: "conv1"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  top: "pool1_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv2_bn"
  type: "BN"
  bottom: "conv2"
  top: "conv2"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  top: "pool2_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv3_bn"
  type: "BN"
  bottom: "conv3"
  top: "conv3"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  top: "pool3_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv4_bn"
  type: "BN"
  bottom: "conv4"
  top: "conv4"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4"
  top: "pool4"
  top: "pool4_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "upsample4"
  type: "Upsample"
  bottom: "pool4"
  bottom: "pool4_mask"
  top: "upsample4"
  upsample_param {
    scale: 2
    pad_out_h: true
  }
}
layer {
  name: "conv_decode4"
  type: "Convolution"
  bottom: "upsample4"
  top: "conv_decode4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv_decode4_bn"
  type: "BN"
  bottom: "conv_decode4"
  top: "conv_decode4"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "upsample3"
  type: "Upsample"
  bottom: "conv_decode4"
  bottom: "pool3_mask"
  top: "upsample3"
  upsample_param {
    scale: 2
  }
}
layer {
  name: "conv_decode3"
  type: "Convolution"
  bottom: "upsample3"
  top: "conv_decode3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv_decode3_bn"
  type: "BN"
  bottom: "conv_decode3"
  top: "conv_decode3"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "upsample2"
  type: "Upsample"
  bottom: "conv_decode3"
  bottom: "pool2_mask"
  top: "upsample2"
  upsample_param {
    scale: 2
  }
}
layer {
  name: "conv_decode2"
  type: "Convolution"
  bottom: "upsample2"
  top: "conv_decode2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv_decode2_bn"
  type: "BN"
  bottom: "conv_decode2"
  top: "conv_decode2"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "upsample1"
  type: "Upsample"
  bottom: "conv_decode2"
  bottom: "pool1_mask"
  top: "upsample1"
  upsample_param {
    scale: 2
  }
}
layer {
  name: "conv_decode1"
  type: "Convolution"
  bottom: "upsample1"
  top: "conv_decode1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv_decode1_bn"
  type: "BN"
  bottom: "conv_decode1"
  top: "conv_decode1"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "conv_classifier"
  type: "Convolution"
  bottom: "conv_decode1"
  top: "conv_classifier"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 2
    kernel_size: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "conv_classifier"
  bottom: "label"
  top: "loss"
  loss_param {
    ignore_label: 2
    weight_by_label_freqs: true
    class_weighting: 0.59744
    class_weighting: 3.06568
  }
  softmax_param {
    engine: CAFFE
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "conv_classifier"
  bottom: "label"
  top: "accuracy"
  top: "per_class_accuracy"
}
I0726 09:55:31.356575 47614 layer_factory.hpp:77] Creating layer data
I0726 09:55:31.356675 47614 net.cpp:100] Creating Layer data
I0726 09:55:31.356693 47614 net.cpp:408] data -> data
I0726 09:55:31.356736 47614 net.cpp:408] data -> label
I0726 09:55:31.356767 47614 dense_image_data_layer.cpp:49] Opening file data/mydata/train.txt
I0726 09:55:31.356845 47614 dense_image_data_layer.cpp:59] Shuffling data
I0726 09:55:31.357383 47614 dense_image_data_layer.cpp:64] A total of 4 examples.
I0726 09:55:33.780453 47614 dense_image_data_layer.cpp:117] output data size: 4,3,360,480
I0726 09:55:33.791561 47614 net.cpp:150] Setting up data
I0726 09:55:33.791646 47614 net.cpp:157] Top shape: 4 3 360 480 (2073600)
I0726 09:55:33.791671 47614 net.cpp:157] Top shape: 4 1 360 480 (691200)
I0726 09:55:33.791684 47614 net.cpp:165] Memory required for data: 11059200
I0726 09:55:33.791710 47614 layer_factory.hpp:77] Creating layer label_data_1_split
I0726 09:55:33.791757 47614 net.cpp:100] Creating Layer label_data_1_split
I0726 09:55:33.791779 47614 net.cpp:434] label_data_1_split <- label
I0726 09:55:33.791817 47614 net.cpp:408] label_data_1_split -> label_data_1_split_0
I0726 09:55:33.791847 47614 net.cpp:408] label_data_1_split -> label_data_1_split_1
I0726 09:55:33.791955 47614 net.cpp:150] Setting up label_data_1_split
I0726 09:55:33.791977 47614 net.cpp:157] Top shape: 4 1 360 480 (691200)
I0726 09:55:33.791993 47614 net.cpp:157] Top shape: 4 1 360 480 (691200)
I0726 09:55:33.792007 47614 net.cpp:165] Memory required for data: 16588800
I0726 09:55:33.792021 47614 layer_factory.hpp:77] Creating layer norm
I0726 09:55:33.792047 47614 net.cpp:100] Creating Layer norm
I0726 09:55:33.792062 47614 net.cpp:434] norm <- data
I0726 09:55:33.792081 47614 net.cpp:408] norm -> norm
I0726 09:55:33.792157 47614 net.cpp:150] Setting up norm
I0726 09:55:33.792178 47614 net.cpp:157] Top shape: 4 3 360 480 (2073600)
I0726 09:55:33.792191 47614 net.cpp:165] Memory required for data: 24883200
I0726 09:55:33.792207 47614 layer_factory.hpp:77] Creating layer conv1
I0726 09:55:33.792243 47614 net.cpp:100] Creating Layer conv1
I0726 09:55:33.792258 47614 net.cpp:434] conv1 <- norm
I0726 09:55:33.792277 47614 net.cpp:408] conv1 -> conv1
I0726 09:55:33.800156 47614 net.cpp:150] Setting up conv1
I0726 09:55:33.800204 47614 net.cpp:157] Top shape: 4 64 360 480 (44236800)
I0726 09:55:33.800220 47614 net.cpp:165] Memory required for data: 201830400
I0726 09:55:33.800261 47614 layer_factory.hpp:77] Creating layer conv1_bn
I0726 09:55:33.800303 47614 net.cpp:100] Creating Layer conv1_bn
I0726 09:55:33.800319 47614 net.cpp:434] conv1_bn <- conv1
I0726 09:55:33.800338 47614 net.cpp:395] conv1_bn -> conv1 (in-place)
I0726 09:55:33.801126 47614 net.cpp:150] Setting up conv1_bn
I0726 09:55:33.801148 47614 net.cpp:157] Top shape: 4 64 360 480 (44236800)
I0726 09:55:33.801162 47614 net.cpp:165] Memory required for data: 378777600
I0726 09:55:33.801184 47614 layer_factory.hpp:77] Creating layer relu1
I0726 09:55:33.801203 47614 net.cpp:100] Creating Layer relu1
I0726 09:55:33.801218 47614 net.cpp:434] relu1 <- conv1
I0726 09:55:33.801234 47614 net.cpp:395] relu1 -> conv1 (in-place)
I0726 09:55:33.801251 47614 net.cpp:150] Setting up relu1
I0726 09:55:33.801267 47614 net.cpp:157] Top shape: 4 64 360 480 (44236800)
I0726 09:55:33.801280 47614 net.cpp:165] Memory required for data: 555724800
I0726 09:55:33.801293 47614 layer_factory.hpp:77] Creating layer pool1
I0726 09:55:33.801316 47614 net.cpp:100] Creating Layer pool1
I0726 09:55:33.801328 47614 net.cpp:434] pool1 <- conv1
I0726 09:55:33.801345 47614 net.cpp:408] pool1 -> pool1
I0726 09:55:33.801367 47614 net.cpp:408] pool1 -> pool1_mask
I0726 09:55:33.801450 47614 net.cpp:150] Setting up pool1
I0726 09:55:33.801471 47614 net.cpp:157] Top shape: 4 64 180 240 (11059200)
I0726 09:55:33.801486 47614 net.cpp:157] Top shape: 4 64 180 240 (11059200)
I0726 09:55:33.801499 47614 net.cpp:165] Memory required for data: 644198400
I0726 09:55:33.801512 47614 layer_factory.hpp:77] Creating layer conv2
I0726 09:55:33.801556 47614 net.cpp:100] Creating Layer conv2
I0726 09:55:33.801584 47614 net.cpp:434] conv2 <- pool1
I0726 09:55:33.801626 47614 net.cpp:408] conv2 -> conv2
I0726 09:55:33.817065 47614 net.cpp:150] Setting up conv2
I0726 09:55:33.817126 47614 net.cpp:157] Top shape: 4 64 180 240 (11059200)
I0726 09:55:33.817147 47614 net.cpp:165] Memory required for data: 688435200
I0726 09:55:33.817191 47614 layer_factory.hpp:77] Creating layer conv2_bn
I0726 09:55:33.817237 47614 net.cpp:100] Creating Layer conv2_bn
I0726 09:55:33.817276 47614 net.cpp:434] conv2_bn <- conv2
I0726 09:55:33.817306 47614 net.cpp:395] conv2_bn -> conv2 (in-place)
I0726 09:55:33.817839 47614 net.cpp:150] Setting up conv2_bn
I0726 09:55:33.817867 47614 net.cpp:157] Top shape: 4 64 180 240 (11059200)
I0726 09:55:33.817879 47614 net.cpp:165] Memory required for data: 732672000
I0726 09:55:33.817898 47614 layer_factory.hpp:77] Creating layer relu2
I0726 09:55:33.817926 47614 net.cpp:100] Creating Layer relu2
I0726 09:55:33.817939 47614 net.cpp:434] relu2 <- conv2
I0726 09:55:33.817952 47614 net.cpp:395] relu2 -> conv2 (in-place)
I0726 09:55:33.817970 47614 net.cpp:150] Setting up relu2
I0726 09:55:33.817983 47614 net.cpp:157] Top shape: 4 64 180 240 (11059200)
I0726 09:55:33.817994 47614 net.cpp:165] Memory required for data: 776908800
I0726 09:55:33.818009 47614 layer_factory.hpp:77] Creating layer pool2
I0726 09:55:33.818027 47614 net.cpp:100] Creating Layer pool2
I0726 09:55:33.818038 47614 net.cpp:434] pool2 <- conv2
I0726 09:55:33.818053 47614 net.cpp:408] pool2 -> pool2
I0726 09:55:33.818070 47614 net.cpp:408] pool2 -> pool2_mask
I0726 09:55:33.818125 47614 net.cpp:150] Setting up pool2
I0726 09:55:33.818143 47614 net.cpp:157] Top shape: 4 64 90 120 (2764800)
I0726 09:55:33.818156 47614 net.cpp:157] Top shape: 4 64 90 120 (2764800)
I0726 09:55:33.818164 47614 net.cpp:165] Memory required for data: 799027200
I0726 09:55:33.818174 47614 layer_factory.hpp:77] Creating layer conv3
I0726 09:55:33.818194 47614 net.cpp:100] Creating Layer conv3
I0726 09:55:33.818204 47614 net.cpp:434] conv3 <- pool2
I0726 09:55:33.818218 47614 net.cpp:408] conv3 -> conv3
I0726 09:55:33.830788 47614 net.cpp:150] Setting up conv3
I0726 09:55:33.830858 47614 net.cpp:157] Top shape: 4 64 90 120 (2764800)
I0726 09:55:33.830876 47614 net.cpp:165] Memory required for data: 810086400
I0726 09:55:33.830910 47614 layer_factory.hpp:77] Creating layer conv3_bn
I0726 09:55:33.830938 47614 net.cpp:100] Creating Layer conv3_bn
I0726 09:55:33.830955 47614 net.cpp:434] conv3_bn <- conv3
I0726 09:55:33.830974 47614 net.cpp:395] conv3_bn -> conv3 (in-place)
I0726 09:55:33.831379 47614 net.cpp:150] Setting up conv3_bn
I0726 09:55:33.831403 47614 net.cpp:157] Top shape: 4 64 90 120 (2764800)
I0726 09:55:33.831418 47614 net.cpp:165] Memory required for data: 821145600
I0726 09:55:33.831439 47614 layer_factory.hpp:77] Creating layer relu3
I0726 09:55:33.831459 47614 net.cpp:100] Creating Layer relu3
I0726 09:55:33.831473 47614 net.cpp:434] relu3 <- conv3
I0726 09:55:33.831490 47614 net.cpp:395] relu3 -> conv3 (in-place)
I0726 09:55:33.831508 47614 net.cpp:150] Setting up relu3
I0726 09:55:33.831526 47614 net.cpp:157] Top shape: 4 64 90 120 (2764800)
I0726 09:55:33.831537 47614 net.cpp:165] Memory required for data: 832204800
I0726 09:55:33.831567 47614 layer_factory.hpp:77] Creating layer pool3
I0726 09:55:33.831602 47614 net.cpp:100] Creating Layer pool3
I0726 09:55:33.831617 47614 net.cpp:434] pool3 <- conv3
I0726 09:55:33.831635 47614 net.cpp:408] pool3 -> pool3
I0726 09:55:33.831656 47614 net.cpp:408] pool3 -> pool3_mask
I0726 09:55:33.831727 47614 net.cpp:150] Setting up pool3
I0726 09:55:33.831746 47614 net.cpp:157] Top shape: 4 64 45 60 (691200)
I0726 09:55:33.831763 47614 net.cpp:157] Top shape: 4 64 45 60 (691200)
I0726 09:55:33.831775 47614 net.cpp:165] Memory required for data: 837734400
I0726 09:55:33.831789 47614 layer_factory.hpp:77] Creating layer conv4
I0726 09:55:33.831813 47614 net.cpp:100] Creating Layer conv4
I0726 09:55:33.831828 47614 net.cpp:434] conv4 <- pool3
I0726 09:55:33.831847 47614 net.cpp:408] conv4 -> conv4
I0726 09:55:33.849308 47614 net.cpp:150] Setting up conv4
I0726 09:55:33.849366 47614 net.cpp:157] Top shape: 4 64 45 60 (691200)
I0726 09:55:33.849376 47614 net.cpp:165] Memory required for data: 840499200
I0726 09:55:33.849390 47614 layer_factory.hpp:77] Creating layer conv4_bn
I0726 09:55:33.849414 47614 net.cpp:100] Creating Layer conv4_bn
I0726 09:55:33.849424 47614 net.cpp:434] conv4_bn <- conv4
I0726 09:55:33.849436 47614 net.cpp:395] conv4_bn -> conv4 (in-place)
I0726 09:55:33.849712 47614 net.cpp:150] Setting up conv4_bn
I0726 09:55:33.849728 47614 net.cpp:157] Top shape: 4 64 45 60 (691200)
I0726 09:55:33.849736 47614 net.cpp:165] Memory required for data: 843264000
I0726 09:55:33.849746 47614 layer_factory.hpp:77] Creating layer relu4
I0726 09:55:33.849758 47614 net.cpp:100] Creating Layer relu4
I0726 09:55:33.849766 47614 net.cpp:434] relu4 <- conv4
I0726 09:55:33.849774 47614 net.cpp:395] relu4 -> conv4 (in-place)
I0726 09:55:33.849786 47614 net.cpp:150] Setting up relu4
I0726 09:55:33.849793 47614 net.cpp:157] Top shape: 4 64 45 60 (691200)
I0726 09:55:33.849800 47614 net.cpp:165] Memory required for data: 846028800
I0726 09:55:33.849810 47614 layer_factory.hpp:77] Creating layer pool4
I0726 09:55:33.849822 47614 net.cpp:100] Creating Layer pool4
I0726 09:55:33.849831 47614 net.cpp:434] pool4 <- conv4
I0726 09:55:33.849841 47614 net.cpp:408] pool4 -> pool4
I0726 09:55:33.849854 47614 net.cpp:408] pool4 -> pool4_mask
I0726 09:55:33.849900 47614 net.cpp:150] Setting up pool4
I0726 09:55:33.849911 47614 net.cpp:157] Top shape: 4 64 23 30 (176640)
I0726 09:55:33.849921 47614 net.cpp:157] Top shape: 4 64 23 30 (176640)
I0726 09:55:33.849931 47614 net.cpp:165] Memory required for data: 847441920
I0726 09:55:33.849937 47614 layer_factory.hpp:77] Creating layer upsample4
I0726 09:55:33.849959 47614 net.cpp:100] Creating Layer upsample4
I0726 09:55:33.849968 47614 net.cpp:434] upsample4 <- pool4
I0726 09:55:33.849977 47614 net.cpp:434] upsample4 <- pool4_mask
I0726 09:55:33.849988 47614 net.cpp:408] upsample4 -> upsample4
I0726 09:55:33.850001 47614 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 09:55:33.850028 47614 net.cpp:150] Setting up upsample4
I0726 09:55:33.850040 47614 net.cpp:157] Top shape: 4 64 45 60 (691200)
I0726 09:55:33.850046 47614 net.cpp:165] Memory required for data: 850206720
I0726 09:55:33.850055 47614 layer_factory.hpp:77] Creating layer conv_decode4
I0726 09:55:33.850069 47614 net.cpp:100] Creating Layer conv_decode4
I0726 09:55:33.850078 47614 net.cpp:434] conv_decode4 <- upsample4
I0726 09:55:33.850090 47614 net.cpp:408] conv_decode4 -> conv_decode4
I0726 09:55:33.857106 47614 net.cpp:150] Setting up conv_decode4
I0726 09:55:33.857126 47614 net.cpp:157] Top shape: 4 64 45 60 (691200)
I0726 09:55:33.857134 47614 net.cpp:165] Memory required for data: 852971520
I0726 09:55:33.857151 47614 layer_factory.hpp:77] Creating layer conv_decode4_bn
I0726 09:55:33.857162 47614 net.cpp:100] Creating Layer conv_decode4_bn
I0726 09:55:33.857169 47614 net.cpp:434] conv_decode4_bn <- conv_decode4
I0726 09:55:33.857179 47614 net.cpp:395] conv_decode4_bn -> conv_decode4 (in-place)
I0726 09:55:33.857384 47614 net.cpp:150] Setting up conv_decode4_bn
I0726 09:55:33.857398 47614 net.cpp:157] Top shape: 4 64 45 60 (691200)
I0726 09:55:33.857404 47614 net.cpp:165] Memory required for data: 855736320
I0726 09:55:33.857414 47614 layer_factory.hpp:77] Creating layer upsample3
I0726 09:55:33.857425 47614 net.cpp:100] Creating Layer upsample3
I0726 09:55:33.857432 47614 net.cpp:434] upsample3 <- conv_decode4
I0726 09:55:33.857447 47614 net.cpp:434] upsample3 <- pool3_mask
I0726 09:55:33.857457 47614 net.cpp:408] upsample3 -> upsample3
I0726 09:55:33.857470 47614 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 09:55:33.857493 47614 net.cpp:150] Setting up upsample3
I0726 09:55:33.857504 47614 net.cpp:157] Top shape: 4 64 90 120 (2764800)
I0726 09:55:33.857519 47614 net.cpp:165] Memory required for data: 866795520
I0726 09:55:33.857554 47614 layer_factory.hpp:77] Creating layer conv_decode3
I0726 09:55:33.857571 47614 net.cpp:100] Creating Layer conv_decode3
I0726 09:55:33.857580 47614 net.cpp:434] conv_decode3 <- upsample3
I0726 09:55:33.857592 47614 net.cpp:408] conv_decode3 -> conv_decode3
I0726 09:55:33.866250 47614 net.cpp:150] Setting up conv_decode3
I0726 09:55:33.866276 47614 net.cpp:157] Top shape: 4 64 90 120 (2764800)
I0726 09:55:33.866283 47614 net.cpp:165] Memory required for data: 877854720
I0726 09:55:33.866294 47614 layer_factory.hpp:77] Creating layer conv_decode3_bn
I0726 09:55:33.866309 47614 net.cpp:100] Creating Layer conv_decode3_bn
I0726 09:55:33.866317 47614 net.cpp:434] conv_decode3_bn <- conv_decode3
I0726 09:55:33.866328 47614 net.cpp:395] conv_decode3_bn -> conv_decode3 (in-place)
I0726 09:55:33.866564 47614 net.cpp:150] Setting up conv_decode3_bn
I0726 09:55:33.866577 47614 net.cpp:157] Top shape: 4 64 90 120 (2764800)
I0726 09:55:33.866585 47614 net.cpp:165] Memory required for data: 888913920
I0726 09:55:33.866596 47614 layer_factory.hpp:77] Creating layer upsample2
I0726 09:55:33.866611 47614 net.cpp:100] Creating Layer upsample2
I0726 09:55:33.866621 47614 net.cpp:434] upsample2 <- conv_decode3
I0726 09:55:33.866629 47614 net.cpp:434] upsample2 <- pool2_mask
I0726 09:55:33.866641 47614 net.cpp:408] upsample2 -> upsample2
I0726 09:55:33.866652 47614 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 09:55:33.866677 47614 net.cpp:150] Setting up upsample2
I0726 09:55:33.866688 47614 net.cpp:157] Top shape: 4 64 180 240 (11059200)
I0726 09:55:33.866694 47614 net.cpp:165] Memory required for data: 933150720
I0726 09:55:33.866701 47614 layer_factory.hpp:77] Creating layer conv_decode2
I0726 09:55:33.866717 47614 net.cpp:100] Creating Layer conv_decode2
I0726 09:55:33.866726 47614 net.cpp:434] conv_decode2 <- upsample2
I0726 09:55:33.866737 47614 net.cpp:408] conv_decode2 -> conv_decode2
I0726 09:55:33.873620 47614 net.cpp:150] Setting up conv_decode2
I0726 09:55:33.873637 47614 net.cpp:157] Top shape: 4 64 180 240 (11059200)
I0726 09:55:33.873644 47614 net.cpp:165] Memory required for data: 977387520
I0726 09:55:33.873653 47614 layer_factory.hpp:77] Creating layer conv_decode2_bn
I0726 09:55:33.873666 47614 net.cpp:100] Creating Layer conv_decode2_bn
I0726 09:55:33.873672 47614 net.cpp:434] conv_decode2_bn <- conv_decode2
I0726 09:55:33.873683 47614 net.cpp:395] conv_decode2_bn -> conv_decode2 (in-place)
I0726 09:55:33.873963 47614 net.cpp:150] Setting up conv_decode2_bn
I0726 09:55:33.873977 47614 net.cpp:157] Top shape: 4 64 180 240 (11059200)
I0726 09:55:33.873983 47614 net.cpp:165] Memory required for data: 1021624320
I0726 09:55:33.873998 47614 layer_factory.hpp:77] Creating layer upsample1
I0726 09:55:33.874009 47614 net.cpp:100] Creating Layer upsample1
I0726 09:55:33.874017 47614 net.cpp:434] upsample1 <- conv_decode2
I0726 09:55:33.874027 47614 net.cpp:434] upsample1 <- pool1_mask
I0726 09:55:33.874035 47614 net.cpp:408] upsample1 -> upsample1
I0726 09:55:33.874047 47614 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 09:55:33.874071 47614 net.cpp:150] Setting up upsample1
I0726 09:55:33.874083 47614 net.cpp:157] Top shape: 4 64 360 480 (44236800)
I0726 09:55:33.874089 47614 net.cpp:165] Memory required for data: 1198571520
I0726 09:55:33.874096 47614 layer_factory.hpp:77] Creating layer conv_decode1
I0726 09:55:33.874111 47614 net.cpp:100] Creating Layer conv_decode1
I0726 09:55:33.874120 47614 net.cpp:434] conv_decode1 <- upsample1
I0726 09:55:33.874131 47614 net.cpp:408] conv_decode1 -> conv_decode1
I0726 09:55:33.882886 47614 net.cpp:150] Setting up conv_decode1
I0726 09:55:33.882912 47614 net.cpp:157] Top shape: 4 64 360 480 (44236800)
I0726 09:55:33.882920 47614 net.cpp:165] Memory required for data: 1375518720
I0726 09:55:33.882939 47614 layer_factory.hpp:77] Creating layer conv_decode1_bn
I0726 09:55:33.882961 47614 net.cpp:100] Creating Layer conv_decode1_bn
I0726 09:55:33.882969 47614 net.cpp:434] conv_decode1_bn <- conv_decode1
I0726 09:55:33.882982 47614 net.cpp:395] conv_decode1_bn -> conv_decode1 (in-place)
I0726 09:55:33.885238 47614 net.cpp:150] Setting up conv_decode1_bn
I0726 09:55:33.885262 47614 net.cpp:157] Top shape: 4 64 360 480 (44236800)
I0726 09:55:33.885270 47614 net.cpp:165] Memory required for data: 1552465920
I0726 09:55:33.885282 47614 layer_factory.hpp:77] Creating layer conv_classifier
I0726 09:55:33.885298 47614 net.cpp:100] Creating Layer conv_classifier
I0726 09:55:33.885306 47614 net.cpp:434] conv_classifier <- conv_decode1
I0726 09:55:33.885318 47614 net.cpp:408] conv_classifier -> conv_classifier
I0726 09:55:33.885709 47614 net.cpp:150] Setting up conv_classifier
I0726 09:55:33.885726 47614 net.cpp:157] Top shape: 4 2 360 480 (1382400)
I0726 09:55:33.885733 47614 net.cpp:165] Memory required for data: 1557995520
I0726 09:55:33.885751 47614 layer_factory.hpp:77] Creating layer conv_classifier_conv_classifier_0_split
I0726 09:55:33.885766 47614 net.cpp:100] Creating Layer conv_classifier_conv_classifier_0_split
I0726 09:55:33.885774 47614 net.cpp:434] conv_classifier_conv_classifier_0_split <- conv_classifier
I0726 09:55:33.885784 47614 net.cpp:408] conv_classifier_conv_classifier_0_split -> conv_classifier_conv_classifier_0_split_0
I0726 09:55:33.885799 47614 net.cpp:408] conv_classifier_conv_classifier_0_split -> conv_classifier_conv_classifier_0_split_1
I0726 09:55:33.885844 47614 net.cpp:150] Setting up conv_classifier_conv_classifier_0_split
I0726 09:55:33.885857 47614 net.cpp:157] Top shape: 4 2 360 480 (1382400)
I0726 09:55:33.885865 47614 net.cpp:157] Top shape: 4 2 360 480 (1382400)
I0726 09:55:33.885872 47614 net.cpp:165] Memory required for data: 1569054720
I0726 09:55:33.885879 47614 layer_factory.hpp:77] Creating layer loss
I0726 09:55:33.885895 47614 net.cpp:100] Creating Layer loss
I0726 09:55:33.885903 47614 net.cpp:434] loss <- conv_classifier_conv_classifier_0_split_0
I0726 09:55:33.885912 47614 net.cpp:434] loss <- label_data_1_split_0
I0726 09:55:33.885923 47614 net.cpp:408] loss -> loss
I0726 09:55:33.885943 47614 layer_factory.hpp:77] Creating layer loss
I0726 09:55:33.891033 47614 net.cpp:150] Setting up loss
I0726 09:55:33.891062 47614 net.cpp:157] Top shape: (1)
I0726 09:55:33.891070 47614 net.cpp:160]     with loss weight 1
I0726 09:55:33.891106 47614 net.cpp:165] Memory required for data: 1569054724
I0726 09:55:33.891115 47614 layer_factory.hpp:77] Creating layer accuracy
I0726 09:55:33.891129 47614 net.cpp:100] Creating Layer accuracy
I0726 09:55:33.891137 47614 net.cpp:434] accuracy <- conv_classifier_conv_classifier_0_split_1
I0726 09:55:33.891146 47614 net.cpp:434] accuracy <- label_data_1_split_1
I0726 09:55:33.891157 47614 net.cpp:408] accuracy -> accuracy
I0726 09:55:33.891170 47614 net.cpp:408] accuracy -> per_class_accuracy
I0726 09:55:33.891216 47614 net.cpp:150] Setting up accuracy
I0726 09:55:33.891228 47614 net.cpp:157] Top shape: (1)
I0726 09:55:33.891235 47614 net.cpp:157] Top shape: 2 (2)
I0726 09:55:33.891243 47614 net.cpp:165] Memory required for data: 1569054736
I0726 09:55:33.891250 47614 net.cpp:228] accuracy does not need backward computation.
I0726 09:55:33.891264 47614 net.cpp:226] loss needs backward computation.
I0726 09:55:33.891273 47614 net.cpp:226] conv_classifier_conv_classifier_0_split needs backward computation.
I0726 09:55:33.891281 47614 net.cpp:226] conv_classifier needs backward computation.
I0726 09:55:33.891288 47614 net.cpp:226] conv_decode1_bn needs backward computation.
I0726 09:55:33.891296 47614 net.cpp:226] conv_decode1 needs backward computation.
I0726 09:55:33.891302 47614 net.cpp:226] upsample1 needs backward computation.
I0726 09:55:33.891312 47614 net.cpp:226] conv_decode2_bn needs backward computation.
I0726 09:55:33.891319 47614 net.cpp:226] conv_decode2 needs backward computation.
I0726 09:55:33.891335 47614 net.cpp:226] upsample2 needs backward computation.
I0726 09:55:33.891352 47614 net.cpp:226] conv_decode3_bn needs backward computation.
I0726 09:55:33.891360 47614 net.cpp:226] conv_decode3 needs backward computation.
I0726 09:55:33.891366 47614 net.cpp:226] upsample3 needs backward computation.
I0726 09:55:33.891374 47614 net.cpp:226] conv_decode4_bn needs backward computation.
I0726 09:55:33.891381 47614 net.cpp:226] conv_decode4 needs backward computation.
I0726 09:55:33.891389 47614 net.cpp:226] upsample4 needs backward computation.
I0726 09:55:33.891398 47614 net.cpp:226] pool4 needs backward computation.
I0726 09:55:33.891405 47614 net.cpp:226] relu4 needs backward computation.
I0726 09:55:33.891413 47614 net.cpp:226] conv4_bn needs backward computation.
I0726 09:55:33.891422 47614 net.cpp:226] conv4 needs backward computation.
I0726 09:55:33.891428 47614 net.cpp:226] pool3 needs backward computation.
I0726 09:55:33.891436 47614 net.cpp:226] relu3 needs backward computation.
I0726 09:55:33.891443 47614 net.cpp:226] conv3_bn needs backward computation.
I0726 09:55:33.891449 47614 net.cpp:226] conv3 needs backward computation.
I0726 09:55:33.891458 47614 net.cpp:226] pool2 needs backward computation.
I0726 09:55:33.891464 47614 net.cpp:226] relu2 needs backward computation.
I0726 09:55:33.891471 47614 net.cpp:226] conv2_bn needs backward computation.
I0726 09:55:33.891479 47614 net.cpp:226] conv2 needs backward computation.
I0726 09:55:33.891486 47614 net.cpp:226] pool1 needs backward computation.
I0726 09:55:33.891494 47614 net.cpp:226] relu1 needs backward computation.
I0726 09:55:33.891501 47614 net.cpp:226] conv1_bn needs backward computation.
I0726 09:55:33.891507 47614 net.cpp:226] conv1 needs backward computation.
I0726 09:55:33.891515 47614 net.cpp:228] norm does not need backward computation.
I0726 09:55:33.891525 47614 net.cpp:228] label_data_1_split does not need backward computation.
I0726 09:55:33.891535 47614 net.cpp:228] data does not need backward computation.
I0726 09:55:33.891541 47614 net.cpp:270] This network produces output accuracy
I0726 09:55:33.891549 47614 net.cpp:270] This network produces output loss
I0726 09:55:33.891556 47614 net.cpp:270] This network produces output per_class_accuracy
I0726 09:55:33.891592 47614 net.cpp:283] Network initialization done.
I0726 09:55:33.892670 47614 solver.cpp:181] Creating test net (#0) specified by net file: examples/segnet/segnet_train.prototxt
I0726 09:55:33.892992 47614 net.cpp:58] Initializing net from parameters: 
name: "segnet"
state {
  phase: TEST
}
layer {
  name: "data"
  type: "DenseImageData"
  top: "data"
  top: "label"
  dense_image_data_param {
    source: "data/mydata/train.txt"
    batch_size: 4
    shuffle: true
  }
}
layer {
  name: "norm"
  type: "LRN"
  bottom: "data"
  top: "norm"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "norm"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv1_bn"
  type: "BN"
  bottom: "conv1"
  top: "conv1"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  top: "pool1_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv2_bn"
  type: "BN"
  bottom: "conv2"
  top: "conv2"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  top: "pool2_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv3_bn"
  type: "BN"
  bottom: "conv3"
  top: "conv3"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  top: "pool3_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv4_bn"
  type: "BN"
  bottom: "conv4"
  top: "conv4"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4"
  top: "pool4"
  top: "pool4_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "upsample4"
  type: "Upsample"
  bottom: "pool4"
  bottom: "pool4_mask"
  top: "upsample4"
  upsample_param {
    scale: 2
    pad_out_h: true
  }
}
layer {
  name: "conv_decode4"
  type: "Convolution"
  bottom: "upsample4"
  top: "conv_decode4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv_decode4_bn"
  type: "BN"
  bottom: "conv_decode4"
  top: "conv_decode4"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "upsample3"
  type: "Upsample"
  bottom: "conv_decode4"
  bottom: "pool3_mask"
  top: "upsample3"
  upsample_param {
    scale: 2
  }
}
layer {
  name: "conv_decode3"
  type: "Convolution"
  bottom: "upsample3"
  top: "conv_decode3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv_decode3_bn"
  type: "BN"
  bottom: "conv_decode3"
  top: "conv_decode3"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "upsample2"
  type: "Upsample"
  bottom: "conv_decode3"
  bottom: "pool2_mask"
  top: "upsample2"
  upsample_param {
    scale: 2
  }
}
layer {
  name: "conv_decode2"
  type: "Convolution"
  bottom: "upsample2"
  top: "conv_decode2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv_decode2_bn"
  type: "BN"
  bottom: "conv_decode2"
  top: "conv_decode2"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "upsample1"
  type: "Upsample"
  bottom: "conv_decode2"
  bottom: "pool1_mask"
  top: "upsample1"
  upsample_param {
    scale: 2
  }
}
layer {
  name: "conv_decode1"
  type: "Convolution"
  bottom: "upsample1"
  top: "conv_decode1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv_decode1_bn"
  type: "BN"
  bottom: "conv_decode1"
  top: "conv_decode1"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "conv_classifier"
  type: "Convolution"
  bottom: "conv_decode1"
  top: "conv_classifier"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 2
    kernel_size: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "conv_classifier"
  bottom: "label"
  top: "loss"
  loss_param {
    ignore_label: 2
    weight_by_label_freqs: true
    class_weighting: 0.59744
    class_weighting: 3.06568
  }
  softmax_param {
    engine: CAFFE
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "conv_classifier"
  bottom: "label"
  top: "accuracy"
  top: "per_class_accuracy"
}
I0726 09:55:33.893184 47614 layer_factory.hpp:77] Creating layer data
I0726 09:55:33.893203 47614 net.cpp:100] Creating Layer data
I0726 09:55:33.893213 47614 net.cpp:408] data -> data
I0726 09:55:33.893224 47614 net.cpp:408] data -> label
I0726 09:55:33.893239 47614 dense_image_data_layer.cpp:49] Opening file data/mydata/train.txt
I0726 09:55:33.893273 47614 dense_image_data_layer.cpp:59] Shuffling data
I0726 09:55:33.893290 47614 dense_image_data_layer.cpp:64] A total of 4 examples.
I0726 09:55:33.899034 47614 dense_image_data_layer.cpp:117] output data size: 4,3,360,480
I0726 09:55:33.906651 47614 net.cpp:150] Setting up data
I0726 09:55:33.906677 47614 net.cpp:157] Top shape: 4 3 360 480 (2073600)
I0726 09:55:33.906693 47614 net.cpp:157] Top shape: 4 1 360 480 (691200)
I0726 09:55:33.906699 47614 net.cpp:165] Memory required for data: 11059200
I0726 09:55:33.906708 47614 layer_factory.hpp:77] Creating layer label_data_1_split
I0726 09:55:33.906719 47614 net.cpp:100] Creating Layer label_data_1_split
I0726 09:55:33.906728 47614 net.cpp:434] label_data_1_split <- label
I0726 09:55:33.906736 47614 net.cpp:408] label_data_1_split -> label_data_1_split_0
I0726 09:55:33.906749 47614 net.cpp:408] label_data_1_split -> label_data_1_split_1
I0726 09:55:33.906824 47614 net.cpp:150] Setting up label_data_1_split
I0726 09:55:33.906841 47614 net.cpp:157] Top shape: 4 1 360 480 (691200)
I0726 09:55:33.906848 47614 net.cpp:157] Top shape: 4 1 360 480 (691200)
I0726 09:55:33.906854 47614 net.cpp:165] Memory required for data: 16588800
I0726 09:55:33.906864 47614 layer_factory.hpp:77] Creating layer norm
I0726 09:55:33.906875 47614 net.cpp:100] Creating Layer norm
I0726 09:55:33.906883 47614 net.cpp:434] norm <- data
I0726 09:55:33.906895 47614 net.cpp:408] norm -> norm
I0726 09:55:33.906966 47614 net.cpp:150] Setting up norm
I0726 09:55:33.906981 47614 net.cpp:157] Top shape: 4 3 360 480 (2073600)
I0726 09:55:33.906987 47614 net.cpp:165] Memory required for data: 24883200
I0726 09:55:33.906996 47614 layer_factory.hpp:77] Creating layer conv1
I0726 09:55:33.907009 47614 net.cpp:100] Creating Layer conv1
I0726 09:55:33.907017 47614 net.cpp:434] conv1 <- norm
I0726 09:55:33.907028 47614 net.cpp:408] conv1 -> conv1
I0726 09:55:33.910073 47614 net.cpp:150] Setting up conv1
I0726 09:55:33.910099 47614 net.cpp:157] Top shape: 4 64 360 480 (44236800)
I0726 09:55:33.910121 47614 net.cpp:165] Memory required for data: 201830400
I0726 09:55:33.910145 47614 layer_factory.hpp:77] Creating layer conv1_bn
I0726 09:55:33.910161 47614 net.cpp:100] Creating Layer conv1_bn
I0726 09:55:33.910167 47614 net.cpp:434] conv1_bn <- conv1
I0726 09:55:33.910176 47614 net.cpp:395] conv1_bn -> conv1 (in-place)
I0726 09:55:33.910727 47614 net.cpp:150] Setting up conv1_bn
I0726 09:55:33.910745 47614 net.cpp:157] Top shape: 4 64 360 480 (44236800)
I0726 09:55:33.910753 47614 net.cpp:165] Memory required for data: 378777600
I0726 09:55:33.910765 47614 layer_factory.hpp:77] Creating layer relu1
I0726 09:55:33.910775 47614 net.cpp:100] Creating Layer relu1
I0726 09:55:33.910784 47614 net.cpp:434] relu1 <- conv1
I0726 09:55:33.910794 47614 net.cpp:395] relu1 -> conv1 (in-place)
I0726 09:55:33.910804 47614 net.cpp:150] Setting up relu1
I0726 09:55:33.910814 47614 net.cpp:157] Top shape: 4 64 360 480 (44236800)
I0726 09:55:33.910820 47614 net.cpp:165] Memory required for data: 555724800
I0726 09:55:33.910826 47614 layer_factory.hpp:77] Creating layer pool1
I0726 09:55:33.910838 47614 net.cpp:100] Creating Layer pool1
I0726 09:55:33.910847 47614 net.cpp:434] pool1 <- conv1
I0726 09:55:33.910856 47614 net.cpp:408] pool1 -> pool1
I0726 09:55:33.910868 47614 net.cpp:408] pool1 -> pool1_mask
I0726 09:55:33.910910 47614 net.cpp:150] Setting up pool1
I0726 09:55:33.910920 47614 net.cpp:157] Top shape: 4 64 180 240 (11059200)
I0726 09:55:33.910928 47614 net.cpp:157] Top shape: 4 64 180 240 (11059200)
I0726 09:55:33.910934 47614 net.cpp:165] Memory required for data: 644198400
I0726 09:55:33.910943 47614 layer_factory.hpp:77] Creating layer conv2
I0726 09:55:33.910954 47614 net.cpp:100] Creating Layer conv2
I0726 09:55:33.910962 47614 net.cpp:434] conv2 <- pool1
I0726 09:55:33.910972 47614 net.cpp:408] conv2 -> conv2
I0726 09:55:33.928233 47614 net.cpp:150] Setting up conv2
I0726 09:55:33.928292 47614 net.cpp:157] Top shape: 4 64 180 240 (11059200)
I0726 09:55:33.928306 47614 net.cpp:165] Memory required for data: 688435200
I0726 09:55:33.928331 47614 layer_factory.hpp:77] Creating layer conv2_bn
I0726 09:55:33.928355 47614 net.cpp:100] Creating Layer conv2_bn
I0726 09:55:33.928369 47614 net.cpp:434] conv2_bn <- conv2
I0726 09:55:33.928386 47614 net.cpp:395] conv2_bn -> conv2 (in-place)
I0726 09:55:33.928900 47614 net.cpp:150] Setting up conv2_bn
I0726 09:55:33.928925 47614 net.cpp:157] Top shape: 4 64 180 240 (11059200)
I0726 09:55:33.928938 47614 net.cpp:165] Memory required for data: 732672000
I0726 09:55:33.928956 47614 layer_factory.hpp:77] Creating layer relu2
I0726 09:55:33.928974 47614 net.cpp:100] Creating Layer relu2
I0726 09:55:33.928988 47614 net.cpp:434] relu2 <- conv2
I0726 09:55:33.929003 47614 net.cpp:395] relu2 -> conv2 (in-place)
I0726 09:55:33.929020 47614 net.cpp:150] Setting up relu2
I0726 09:55:33.929035 47614 net.cpp:157] Top shape: 4 64 180 240 (11059200)
I0726 09:55:33.929045 47614 net.cpp:165] Memory required for data: 776908800
I0726 09:55:33.929057 47614 layer_factory.hpp:77] Creating layer pool2
I0726 09:55:33.929075 47614 net.cpp:100] Creating Layer pool2
I0726 09:55:33.929088 47614 net.cpp:434] pool2 <- conv2
I0726 09:55:33.929103 47614 net.cpp:408] pool2 -> pool2
I0726 09:55:33.929123 47614 net.cpp:408] pool2 -> pool2_mask
I0726 09:55:33.929193 47614 net.cpp:150] Setting up pool2
I0726 09:55:33.929214 47614 net.cpp:157] Top shape: 4 64 90 120 (2764800)
I0726 09:55:33.929230 47614 net.cpp:157] Top shape: 4 64 90 120 (2764800)
I0726 09:55:33.929242 47614 net.cpp:165] Memory required for data: 799027200
I0726 09:55:33.929256 47614 layer_factory.hpp:77] Creating layer conv3
I0726 09:55:33.929280 47614 net.cpp:100] Creating Layer conv3
I0726 09:55:33.929294 47614 net.cpp:434] conv3 <- pool2
I0726 09:55:33.929312 47614 net.cpp:408] conv3 -> conv3
I0726 09:55:33.941395 47614 net.cpp:150] Setting up conv3
I0726 09:55:33.941423 47614 net.cpp:157] Top shape: 4 64 90 120 (2764800)
I0726 09:55:33.941435 47614 net.cpp:165] Memory required for data: 810086400
I0726 09:55:33.941470 47614 layer_factory.hpp:77] Creating layer conv3_bn
I0726 09:55:33.941504 47614 net.cpp:100] Creating Layer conv3_bn
I0726 09:55:33.941517 47614 net.cpp:434] conv3_bn <- conv3
I0726 09:55:33.941545 47614 net.cpp:395] conv3_bn -> conv3 (in-place)
I0726 09:55:33.941982 47614 net.cpp:150] Setting up conv3_bn
I0726 09:55:33.942001 47614 net.cpp:157] Top shape: 4 64 90 120 (2764800)
I0726 09:55:33.942013 47614 net.cpp:165] Memory required for data: 821145600
I0726 09:55:33.942029 47614 layer_factory.hpp:77] Creating layer relu3
I0726 09:55:33.942044 47614 net.cpp:100] Creating Layer relu3
I0726 09:55:33.942055 47614 net.cpp:434] relu3 <- conv3
I0726 09:55:33.942070 47614 net.cpp:395] relu3 -> conv3 (in-place)
I0726 09:55:33.942085 47614 net.cpp:150] Setting up relu3
I0726 09:55:33.942104 47614 net.cpp:157] Top shape: 4 64 90 120 (2764800)
I0726 09:55:33.942116 47614 net.cpp:165] Memory required for data: 832204800
I0726 09:55:33.942124 47614 layer_factory.hpp:77] Creating layer pool3
I0726 09:55:33.942140 47614 net.cpp:100] Creating Layer pool3
I0726 09:55:33.942152 47614 net.cpp:434] pool3 <- conv3
I0726 09:55:33.942165 47614 net.cpp:408] pool3 -> pool3
I0726 09:55:33.942183 47614 net.cpp:408] pool3 -> pool3_mask
I0726 09:55:33.942242 47614 net.cpp:150] Setting up pool3
I0726 09:55:33.942260 47614 net.cpp:157] Top shape: 4 64 45 60 (691200)
I0726 09:55:33.942273 47614 net.cpp:157] Top shape: 4 64 45 60 (691200)
I0726 09:55:33.942284 47614 net.cpp:165] Memory required for data: 837734400
I0726 09:55:33.942294 47614 layer_factory.hpp:77] Creating layer conv4
I0726 09:55:33.942313 47614 net.cpp:100] Creating Layer conv4
I0726 09:55:33.942327 47614 net.cpp:434] conv4 <- pool3
I0726 09:55:33.942342 47614 net.cpp:408] conv4 -> conv4
I0726 09:55:33.956610 47614 net.cpp:150] Setting up conv4
I0726 09:55:33.956657 47614 net.cpp:157] Top shape: 4 64 45 60 (691200)
I0726 09:55:33.956670 47614 net.cpp:165] Memory required for data: 840499200
I0726 09:55:33.956687 47614 layer_factory.hpp:77] Creating layer conv4_bn
I0726 09:55:33.956710 47614 net.cpp:100] Creating Layer conv4_bn
I0726 09:55:33.956725 47614 net.cpp:434] conv4_bn <- conv4
I0726 09:55:33.956740 47614 net.cpp:395] conv4_bn -> conv4 (in-place)
I0726 09:55:33.957105 47614 net.cpp:150] Setting up conv4_bn
I0726 09:55:33.957125 47614 net.cpp:157] Top shape: 4 64 45 60 (691200)
I0726 09:55:33.957135 47614 net.cpp:165] Memory required for data: 843264000
I0726 09:55:33.957151 47614 layer_factory.hpp:77] Creating layer relu4
I0726 09:55:33.957166 47614 net.cpp:100] Creating Layer relu4
I0726 09:55:33.957177 47614 net.cpp:434] relu4 <- conv4
I0726 09:55:33.957193 47614 net.cpp:395] relu4 -> conv4 (in-place)
I0726 09:55:33.957208 47614 net.cpp:150] Setting up relu4
I0726 09:55:33.957224 47614 net.cpp:157] Top shape: 4 64 45 60 (691200)
I0726 09:55:33.957238 47614 net.cpp:165] Memory required for data: 846028800
I0726 09:55:33.957249 47614 layer_factory.hpp:77] Creating layer pool4
I0726 09:55:33.957263 47614 net.cpp:100] Creating Layer pool4
I0726 09:55:33.957275 47614 net.cpp:434] pool4 <- conv4
I0726 09:55:33.957288 47614 net.cpp:408] pool4 -> pool4
I0726 09:55:33.957305 47614 net.cpp:408] pool4 -> pool4_mask
I0726 09:55:33.957366 47614 net.cpp:150] Setting up pool4
I0726 09:55:33.957383 47614 net.cpp:157] Top shape: 4 64 23 30 (176640)
I0726 09:55:33.957397 47614 net.cpp:157] Top shape: 4 64 23 30 (176640)
I0726 09:55:33.957408 47614 net.cpp:165] Memory required for data: 847441920
I0726 09:55:33.957418 47614 layer_factory.hpp:77] Creating layer upsample4
I0726 09:55:33.957433 47614 net.cpp:100] Creating Layer upsample4
I0726 09:55:33.957444 47614 net.cpp:434] upsample4 <- pool4
I0726 09:55:33.957456 47614 net.cpp:434] upsample4 <- pool4_mask
I0726 09:55:33.957470 47614 net.cpp:408] upsample4 -> upsample4
I0726 09:55:33.957486 47614 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 09:55:33.957528 47614 net.cpp:150] Setting up upsample4
I0726 09:55:33.957546 47614 net.cpp:157] Top shape: 4 64 45 60 (691200)
I0726 09:55:33.957576 47614 net.cpp:165] Memory required for data: 850206720
I0726 09:55:33.957589 47614 layer_factory.hpp:77] Creating layer conv_decode4
I0726 09:55:33.957607 47614 net.cpp:100] Creating Layer conv_decode4
I0726 09:55:33.957628 47614 net.cpp:434] conv_decode4 <- upsample4
I0726 09:55:33.957645 47614 net.cpp:408] conv_decode4 -> conv_decode4
I0726 09:55:33.967577 47614 net.cpp:150] Setting up conv_decode4
I0726 09:55:33.967602 47614 net.cpp:157] Top shape: 4 64 45 60 (691200)
I0726 09:55:33.967612 47614 net.cpp:165] Memory required for data: 852971520
I0726 09:55:33.967633 47614 layer_factory.hpp:77] Creating layer conv_decode4_bn
I0726 09:55:33.967648 47614 net.cpp:100] Creating Layer conv_decode4_bn
I0726 09:55:33.967658 47614 net.cpp:434] conv_decode4_bn <- conv_decode4
I0726 09:55:33.967669 47614 net.cpp:395] conv_decode4_bn -> conv_decode4 (in-place)
I0726 09:55:33.967967 47614 net.cpp:150] Setting up conv_decode4_bn
I0726 09:55:33.967983 47614 net.cpp:157] Top shape: 4 64 45 60 (691200)
I0726 09:55:33.967993 47614 net.cpp:165] Memory required for data: 855736320
I0726 09:55:33.968005 47614 layer_factory.hpp:77] Creating layer upsample3
I0726 09:55:33.968017 47614 net.cpp:100] Creating Layer upsample3
I0726 09:55:33.968027 47614 net.cpp:434] upsample3 <- conv_decode4
I0726 09:55:33.968039 47614 net.cpp:434] upsample3 <- pool3_mask
I0726 09:55:33.968055 47614 net.cpp:408] upsample3 -> upsample3
I0726 09:55:33.968070 47614 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 09:55:33.968106 47614 net.cpp:150] Setting up upsample3
I0726 09:55:33.968120 47614 net.cpp:157] Top shape: 4 64 90 120 (2764800)
I0726 09:55:33.968129 47614 net.cpp:165] Memory required for data: 866795520
I0726 09:55:33.968140 47614 layer_factory.hpp:77] Creating layer conv_decode3
I0726 09:55:33.968156 47614 net.cpp:100] Creating Layer conv_decode3
I0726 09:55:33.968168 47614 net.cpp:434] conv_decode3 <- upsample3
I0726 09:55:33.968180 47614 net.cpp:408] conv_decode3 -> conv_decode3
I0726 09:55:33.979964 47614 net.cpp:150] Setting up conv_decode3
I0726 09:55:33.980000 47614 net.cpp:157] Top shape: 4 64 90 120 (2764800)
I0726 09:55:33.980011 47614 net.cpp:165] Memory required for data: 877854720
I0726 09:55:33.980027 47614 layer_factory.hpp:77] Creating layer conv_decode3_bn
I0726 09:55:33.980043 47614 net.cpp:100] Creating Layer conv_decode3_bn
I0726 09:55:33.980053 47614 net.cpp:434] conv_decode3_bn <- conv_decode3
I0726 09:55:33.980067 47614 net.cpp:395] conv_decode3_bn -> conv_decode3 (in-place)
I0726 09:55:33.980383 47614 net.cpp:150] Setting up conv_decode3_bn
I0726 09:55:33.980399 47614 net.cpp:157] Top shape: 4 64 90 120 (2764800)
I0726 09:55:33.980407 47614 net.cpp:165] Memory required for data: 888913920
I0726 09:55:33.980420 47614 layer_factory.hpp:77] Creating layer upsample2
I0726 09:55:33.980433 47614 net.cpp:100] Creating Layer upsample2
I0726 09:55:33.980442 47614 net.cpp:434] upsample2 <- conv_decode3
I0726 09:55:33.980453 47614 net.cpp:434] upsample2 <- pool2_mask
I0726 09:55:33.980463 47614 net.cpp:408] upsample2 -> upsample2
I0726 09:55:33.980479 47614 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 09:55:33.980512 47614 net.cpp:150] Setting up upsample2
I0726 09:55:33.980526 47614 net.cpp:157] Top shape: 4 64 180 240 (11059200)
I0726 09:55:33.980537 47614 net.cpp:165] Memory required for data: 933150720
I0726 09:55:33.980546 47614 layer_factory.hpp:77] Creating layer conv_decode2
I0726 09:55:33.980566 47614 net.cpp:100] Creating Layer conv_decode2
I0726 09:55:33.980576 47614 net.cpp:434] conv_decode2 <- upsample2
I0726 09:55:33.980589 47614 net.cpp:408] conv_decode2 -> conv_decode2
I0726 09:55:33.989809 47614 net.cpp:150] Setting up conv_decode2
I0726 09:55:33.989836 47614 net.cpp:157] Top shape: 4 64 180 240 (11059200)
I0726 09:55:33.989845 47614 net.cpp:165] Memory required for data: 977387520
I0726 09:55:33.989866 47614 layer_factory.hpp:77] Creating layer conv_decode2_bn
I0726 09:55:33.989893 47614 net.cpp:100] Creating Layer conv_decode2_bn
I0726 09:55:33.989902 47614 net.cpp:434] conv_decode2_bn <- conv_decode2
I0726 09:55:33.989914 47614 net.cpp:395] conv_decode2_bn -> conv_decode2 (in-place)
I0726 09:55:33.990265 47614 net.cpp:150] Setting up conv_decode2_bn
I0726 09:55:33.990281 47614 net.cpp:157] Top shape: 4 64 180 240 (11059200)
I0726 09:55:33.990289 47614 net.cpp:165] Memory required for data: 1021624320
I0726 09:55:33.990303 47614 layer_factory.hpp:77] Creating layer upsample1
I0726 09:55:33.990314 47614 net.cpp:100] Creating Layer upsample1
I0726 09:55:33.990321 47614 net.cpp:434] upsample1 <- conv_decode2
I0726 09:55:33.990331 47614 net.cpp:434] upsample1 <- pool1_mask
I0726 09:55:33.990341 47614 net.cpp:408] upsample1 -> upsample1
I0726 09:55:33.990355 47614 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 09:55:33.990386 47614 net.cpp:150] Setting up upsample1
I0726 09:55:33.990399 47614 net.cpp:157] Top shape: 4 64 360 480 (44236800)
I0726 09:55:33.990407 47614 net.cpp:165] Memory required for data: 1198571520
I0726 09:55:33.990417 47614 layer_factory.hpp:77] Creating layer conv_decode1
I0726 09:55:33.990433 47614 net.cpp:100] Creating Layer conv_decode1
I0726 09:55:33.990442 47614 net.cpp:434] conv_decode1 <- upsample1
I0726 09:55:33.990456 47614 net.cpp:408] conv_decode1 -> conv_decode1
I0726 09:55:34.001062 47614 net.cpp:150] Setting up conv_decode1
I0726 09:55:34.001094 47614 net.cpp:157] Top shape: 4 64 360 480 (44236800)
I0726 09:55:34.001106 47614 net.cpp:165] Memory required for data: 1375518720
I0726 09:55:34.001119 47614 layer_factory.hpp:77] Creating layer conv_decode1_bn
I0726 09:55:34.001133 47614 net.cpp:100] Creating Layer conv_decode1_bn
I0726 09:55:34.001143 47614 net.cpp:434] conv_decode1_bn <- conv_decode1
I0726 09:55:34.001157 47614 net.cpp:395] conv_decode1_bn -> conv_decode1 (in-place)
I0726 09:55:34.003738 47614 net.cpp:150] Setting up conv_decode1_bn
I0726 09:55:34.003768 47614 net.cpp:157] Top shape: 4 64 360 480 (44236800)
I0726 09:55:34.003777 47614 net.cpp:165] Memory required for data: 1552465920
I0726 09:55:34.003790 47614 layer_factory.hpp:77] Creating layer conv_classifier
I0726 09:55:34.003809 47614 net.cpp:100] Creating Layer conv_classifier
I0726 09:55:34.003820 47614 net.cpp:434] conv_classifier <- conv_decode1
I0726 09:55:34.003834 47614 net.cpp:408] conv_classifier -> conv_classifier
I0726 09:55:34.004283 47614 net.cpp:150] Setting up conv_classifier
I0726 09:55:34.004302 47614 net.cpp:157] Top shape: 4 2 360 480 (1382400)
I0726 09:55:34.004310 47614 net.cpp:165] Memory required for data: 1557995520
I0726 09:55:34.004331 47614 layer_factory.hpp:77] Creating layer conv_classifier_conv_classifier_0_split
I0726 09:55:34.004350 47614 net.cpp:100] Creating Layer conv_classifier_conv_classifier_0_split
I0726 09:55:34.004359 47614 net.cpp:434] conv_classifier_conv_classifier_0_split <- conv_classifier
I0726 09:55:34.004370 47614 net.cpp:408] conv_classifier_conv_classifier_0_split -> conv_classifier_conv_classifier_0_split_0
I0726 09:55:34.004384 47614 net.cpp:408] conv_classifier_conv_classifier_0_split -> conv_classifier_conv_classifier_0_split_1
I0726 09:55:34.004437 47614 net.cpp:150] Setting up conv_classifier_conv_classifier_0_split
I0726 09:55:34.004452 47614 net.cpp:157] Top shape: 4 2 360 480 (1382400)
I0726 09:55:34.004462 47614 net.cpp:157] Top shape: 4 2 360 480 (1382400)
I0726 09:55:34.004468 47614 net.cpp:165] Memory required for data: 1569054720
I0726 09:55:34.004477 47614 layer_factory.hpp:77] Creating layer loss
I0726 09:55:34.004490 47614 net.cpp:100] Creating Layer loss
I0726 09:55:34.004501 47614 net.cpp:434] loss <- conv_classifier_conv_classifier_0_split_0
I0726 09:55:34.004510 47614 net.cpp:434] loss <- label_data_1_split_0
I0726 09:55:34.004523 47614 net.cpp:408] loss -> loss
I0726 09:55:34.004539 47614 layer_factory.hpp:77] Creating layer loss
I0726 09:55:34.009681 47614 net.cpp:150] Setting up loss
I0726 09:55:34.009722 47614 net.cpp:157] Top shape: (1)
I0726 09:55:34.009732 47614 net.cpp:160]     with loss weight 1
I0726 09:55:34.009750 47614 net.cpp:165] Memory required for data: 1569054724
I0726 09:55:34.009758 47614 layer_factory.hpp:77] Creating layer accuracy
I0726 09:55:34.009771 47614 net.cpp:100] Creating Layer accuracy
I0726 09:55:34.009781 47614 net.cpp:434] accuracy <- conv_classifier_conv_classifier_0_split_1
I0726 09:55:34.009791 47614 net.cpp:434] accuracy <- label_data_1_split_1
I0726 09:55:34.009804 47614 net.cpp:408] accuracy -> accuracy
I0726 09:55:34.009820 47614 net.cpp:408] accuracy -> per_class_accuracy
I0726 09:55:34.009872 47614 net.cpp:150] Setting up accuracy
I0726 09:55:34.009886 47614 net.cpp:157] Top shape: (1)
I0726 09:55:34.009896 47614 net.cpp:157] Top shape: 2 (2)
I0726 09:55:34.009904 47614 net.cpp:165] Memory required for data: 1569054736
I0726 09:55:34.009913 47614 net.cpp:228] accuracy does not need backward computation.
I0726 09:55:34.009927 47614 net.cpp:226] loss needs backward computation.
I0726 09:55:34.009935 47614 net.cpp:226] conv_classifier_conv_classifier_0_split needs backward computation.
I0726 09:55:34.009953 47614 net.cpp:226] conv_classifier needs backward computation.
I0726 09:55:34.009960 47614 net.cpp:226] conv_decode1_bn needs backward computation.
I0726 09:55:34.009969 47614 net.cpp:226] conv_decode1 needs backward computation.
I0726 09:55:34.009976 47614 net.cpp:226] upsample1 needs backward computation.
I0726 09:55:34.009986 47614 net.cpp:226] conv_decode2_bn needs backward computation.
I0726 09:55:34.009994 47614 net.cpp:226] conv_decode2 needs backward computation.
I0726 09:55:34.010002 47614 net.cpp:226] upsample2 needs backward computation.
I0726 09:55:34.010016 47614 net.cpp:226] conv_decode3_bn needs backward computation.
I0726 09:55:34.010026 47614 net.cpp:226] conv_decode3 needs backward computation.
I0726 09:55:34.010035 47614 net.cpp:226] upsample3 needs backward computation.
I0726 09:55:34.010044 47614 net.cpp:226] conv_decode4_bn needs backward computation.
I0726 09:55:34.010051 47614 net.cpp:226] conv_decode4 needs backward computation.
I0726 09:55:34.010061 47614 net.cpp:226] upsample4 needs backward computation.
I0726 09:55:34.010071 47614 net.cpp:226] pool4 needs backward computation.
I0726 09:55:34.010080 47614 net.cpp:226] relu4 needs backward computation.
I0726 09:55:34.010087 47614 net.cpp:226] conv4_bn needs backward computation.
I0726 09:55:34.010097 47614 net.cpp:226] conv4 needs backward computation.
I0726 09:55:34.010105 47614 net.cpp:226] pool3 needs backward computation.
I0726 09:55:34.010115 47614 net.cpp:226] relu3 needs backward computation.
I0726 09:55:34.010123 47614 net.cpp:226] conv3_bn needs backward computation.
I0726 09:55:34.010134 47614 net.cpp:226] conv3 needs backward computation.
I0726 09:55:34.010143 47614 net.cpp:226] pool2 needs backward computation.
I0726 09:55:34.010151 47614 net.cpp:226] relu2 needs backward computation.
I0726 09:55:34.010161 47614 net.cpp:226] conv2_bn needs backward computation.
I0726 09:55:34.010169 47614 net.cpp:226] conv2 needs backward computation.
I0726 09:55:34.010177 47614 net.cpp:226] pool1 needs backward computation.
I0726 09:55:34.010185 47614 net.cpp:226] relu1 needs backward computation.
I0726 09:55:34.010196 47614 net.cpp:226] conv1_bn needs backward computation.
I0726 09:55:34.010203 47614 net.cpp:226] conv1 needs backward computation.
I0726 09:55:34.010213 47614 net.cpp:228] norm does not need backward computation.
I0726 09:55:34.010223 47614 net.cpp:228] label_data_1_split does not need backward computation.
I0726 09:55:34.010232 47614 net.cpp:228] data does not need backward computation.
I0726 09:55:34.010241 47614 net.cpp:270] This network produces output accuracy
I0726 09:55:34.010251 47614 net.cpp:270] This network produces output loss
I0726 09:55:34.010260 47614 net.cpp:270] This network produces output per_class_accuracy
I0726 09:55:34.010294 47614 net.cpp:283] Network initialization done.
I0726 09:55:34.010466 47614 solver.cpp:60] Solver scaffolding done.
I0726 09:55:34.011973 47614 caffe.cpp:155] Finetuning from examples/segnet/segnet_train/premodel/segnet_basic_camvid.caffemodel
I0726 09:55:34.030016 47614 net.cpp:761] Ignoring source layer dense_softmax_inner_prod
I0726 09:55:34.046041 47614 net.cpp:761] Ignoring source layer dense_softmax_inner_prod
I0726 09:55:34.046166 47614 caffe.cpp:251] Starting Optimization
I0726 09:55:34.046187 47614 solver.cpp:279] Solving segnet
I0726 09:55:34.046200 47614 solver.cpp:280] Learning Rate Policy: step
I0726 09:55:34.467232 47614 solver.cpp:228] Iteration 0, loss = 3.27638
I0726 09:55:34.467321 47614 solver.cpp:244]     Train net output #0: accuracy = 0.501597
I0726 09:55:34.467346 47614 solver.cpp:244]     Train net output #1: loss = 3.27638 (* 1 = 3.27638 loss)
I0726 09:55:34.467361 47614 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.526945
I0726 09:55:34.467381 47614 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.371527
I0726 09:55:34.467409 47614 sgd_solver.cpp:106] Iteration 0, lr = 0.1
I0726 09:55:49.907932 47614 solver.cpp:228] Iteration 20, loss = 7.31177
I0726 09:55:49.908020 47614 solver.cpp:244]     Train net output #0: accuracy = 0.720466
I0726 09:55:49.908037 47614 solver.cpp:244]     Train net output #1: loss = 7.31177 (* 1 = 7.31177 loss)
I0726 09:55:49.908046 47614 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.721074
I0726 09:55:49.908053 47614 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.717347
I0726 09:55:49.908063 47614 sgd_solver.cpp:106] Iteration 20, lr = 0.1
I0726 09:56:05.325023 47614 solver.cpp:228] Iteration 40, loss = 1.97868
I0726 09:56:05.325187 47614 solver.cpp:244]     Train net output #0: accuracy = 0.742185
I0726 09:56:05.325208 47614 solver.cpp:244]     Train net output #1: loss = 1.97868 (* 1 = 1.97868 loss)
I0726 09:56:05.325218 47614 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.769726
I0726 09:56:05.325227 47614 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.600859
I0726 09:56:05.325240 47614 sgd_solver.cpp:106] Iteration 40, lr = 0.1
I0726 09:56:20.764919 47614 solver.cpp:228] Iteration 60, loss = 1.20147
I0726 09:56:20.765002 47614 solver.cpp:244]     Train net output #0: accuracy = 0.798585
I0726 09:56:20.765018 47614 solver.cpp:244]     Train net output #1: loss = 1.20147 (* 1 = 1.20147 loss)
I0726 09:56:20.765027 47614 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.778316
I0726 09:56:20.765035 47614 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.902592
I0726 09:56:20.765045 47614 sgd_solver.cpp:106] Iteration 60, lr = 0.1
I0726 09:56:36.287443 47614 solver.cpp:228] Iteration 80, loss = 0.282622
I0726 09:56:36.287616 47614 solver.cpp:244]     Train net output #0: accuracy = 0.8741
I0726 09:56:36.287638 47614 solver.cpp:244]     Train net output #1: loss = 0.282621 (* 1 = 0.282621 loss)
I0726 09:56:36.287647 47614 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.870415
I0726 09:56:36.287655 47614 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.893012
I0726 09:56:36.287670 47614 sgd_solver.cpp:106] Iteration 80, lr = 0.1
I0726 09:56:51.733739 47614 solver.cpp:228] Iteration 100, loss = 0.227923
I0726 09:56:51.733825 47614 solver.cpp:244]     Train net output #0: accuracy = 0.894974
I0726 09:56:51.733844 47614 solver.cpp:244]     Train net output #1: loss = 0.227922 (* 1 = 0.227922 loss)
I0726 09:56:51.733853 47614 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.889726
I0726 09:56:51.733861 47614 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.921903
I0726 09:56:51.733871 47614 sgd_solver.cpp:106] Iteration 100, lr = 0.1
I0726 09:57:07.212857 47614 solver.cpp:228] Iteration 120, loss = 0.209914
I0726 09:57:07.213071 47614 solver.cpp:244]     Train net output #0: accuracy = 0.897954
I0726 09:57:07.213093 47614 solver.cpp:244]     Train net output #1: loss = 0.209914 (* 1 = 0.209914 loss)
I0726 09:57:07.213104 47614 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.888602
I0726 09:57:07.213121 47614 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.945943
I0726 09:57:07.213136 47614 sgd_solver.cpp:106] Iteration 120, lr = 0.1
I0726 09:57:22.681476 47614 solver.cpp:228] Iteration 140, loss = 0.201576
I0726 09:57:22.681579 47614 solver.cpp:244]     Train net output #0: accuracy = 0.90033
I0726 09:57:22.681599 47614 solver.cpp:244]     Train net output #1: loss = 0.201575 (* 1 = 0.201575 loss)
I0726 09:57:22.681609 47614 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.889875
I0726 09:57:22.681617 47614 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.953979
I0726 09:57:22.681632 47614 sgd_solver.cpp:106] Iteration 140, lr = 0.1
I0726 09:57:38.121474 47614 solver.cpp:228] Iteration 160, loss = 0.195475
I0726 09:57:38.121726 47614 solver.cpp:244]     Train net output #0: accuracy = 0.902862
I0726 09:57:38.121755 47614 solver.cpp:244]     Train net output #1: loss = 0.195474 (* 1 = 0.195474 loss)
I0726 09:57:38.121765 47614 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.892651
I0726 09:57:38.121774 47614 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.955257
I0726 09:57:38.121785 47614 sgd_solver.cpp:106] Iteration 160, lr = 0.1
I0726 09:57:53.589830 47614 solver.cpp:228] Iteration 180, loss = 0.189509
I0726 09:57:53.589916 47614 solver.cpp:244]     Train net output #0: accuracy = 0.905318
I0726 09:57:53.589934 47614 solver.cpp:244]     Train net output #1: loss = 0.189509 (* 1 = 0.189509 loss)
I0726 09:57:53.589943 47614 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.894969
I0726 09:57:53.589951 47614 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.958423
I0726 09:57:53.589960 47614 sgd_solver.cpp:106] Iteration 180, lr = 0.1
I0726 09:58:08.999543 47614 solver.cpp:228] Iteration 200, loss = 0.184271
I0726 09:58:08.999742 47614 solver.cpp:244]     Train net output #0: accuracy = 0.90765
I0726 09:58:08.999788 47614 solver.cpp:244]     Train net output #1: loss = 0.184271 (* 1 = 0.184271 loss)
I0726 09:58:08.999800 47614 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.897438
I0726 09:58:08.999811 47614 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.960056
I0726 09:58:08.999826 47614 sgd_solver.cpp:106] Iteration 200, lr = 0.1
I0726 09:58:24.456512 47614 solver.cpp:228] Iteration 220, loss = 0.179794
I0726 09:58:24.456600 47614 solver.cpp:244]     Train net output #0: accuracy = 0.909777
I0726 09:58:24.456620 47614 solver.cpp:244]     Train net output #1: loss = 0.179793 (* 1 = 0.179793 loss)
I0726 09:58:24.456629 47614 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.899592
I0726 09:58:24.456636 47614 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.962043
I0726 09:58:24.456647 47614 sgd_solver.cpp:106] Iteration 220, lr = 0.1
I0726 09:58:39.888073 47614 solver.cpp:228] Iteration 240, loss = 0.175578
I0726 09:58:39.888247 47614 solver.cpp:244]     Train net output #0: accuracy = 0.911372
I0726 09:58:39.888267 47614 solver.cpp:244]     Train net output #1: loss = 0.175577 (* 1 = 0.175577 loss)
I0726 09:58:39.888278 47614 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.901001
I0726 09:58:39.888285 47614 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.964589
I0726 09:58:39.888299 47614 sgd_solver.cpp:106] Iteration 240, lr = 0.1
I0726 09:58:55.340075 47614 solver.cpp:228] Iteration 260, loss = 0.172128
I0726 09:58:55.340155 47614 solver.cpp:244]     Train net output #0: accuracy = 0.91274
I0726 09:58:55.340173 47614 solver.cpp:244]     Train net output #1: loss = 0.172127 (* 1 = 0.172127 loss)
I0726 09:58:55.340183 47614 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.902378
I0726 09:58:55.340189 47614 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.96591
I0726 09:58:55.340199 47614 sgd_solver.cpp:106] Iteration 260, lr = 0.1
I0726 09:59:10.875591 47614 solver.cpp:228] Iteration 280, loss = 0.168785
I0726 09:59:10.875849 47614 solver.cpp:244]     Train net output #0: accuracy = 0.914332
I0726 09:59:10.875874 47614 solver.cpp:244]     Train net output #1: loss = 0.168785 (* 1 = 0.168785 loss)
I0726 09:59:10.875883 47614 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.903872
I0726 09:59:10.875891 47614 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.968004
I0726 09:59:10.875906 47614 sgd_solver.cpp:106] Iteration 280, lr = 0.1
I0726 09:59:26.399394 47614 solver.cpp:228] Iteration 300, loss = 0.165942
I0726 09:59:26.399480 47614 solver.cpp:244]     Train net output #0: accuracy = 0.915914
I0726 09:59:26.399502 47614 solver.cpp:244]     Train net output #1: loss = 0.165941 (* 1 = 0.165941 loss)
I0726 09:59:26.399520 47614 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.905449
I0726 09:59:26.399528 47614 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.969618
I0726 09:59:26.399538 47614 sgd_solver.cpp:106] Iteration 300, lr = 0.1
I0726 09:59:41.860987 47614 solver.cpp:228] Iteration 320, loss = 0.163551
I0726 09:59:41.861233 47614 solver.cpp:244]     Train net output #0: accuracy = 0.917144
I0726 09:59:41.861295 47614 solver.cpp:244]     Train net output #1: loss = 0.16355 (* 1 = 0.16355 loss)
I0726 09:59:41.861315 47614 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.906738
I0726 09:59:41.861330 47614 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.970541
I0726 09:59:41.861357 47614 sgd_solver.cpp:106] Iteration 320, lr = 0.1
I0726 09:59:54.205569 47614 solver.cpp:454] Snapshotting to binary proto file examples/segnet/segnet_train/segnet_basic/seg_iter_337.caffemodel
I0726 09:59:54.737213 47614 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/segnet/segnet_train/segnet_basic/seg_iter_337.solverstate
I0726 09:59:54.746249 47614 solver.cpp:301] Optimization stopped early.
I0726 09:59:54.746268 47614 caffe.cpp:254] Optimization Done.
I0726 09:59:59.700357 44270 caffe.cpp:217] Using GPUs 0
I0726 09:59:59.853991 44270 caffe.cpp:222] GPU 0: Graphics Device
I0726 10:00:03.175520 44270 solver.cpp:48] Initializing solver from parameters: 
test_iter: 1
test_interval: 10000000
base_lr: 0.1
display: 20
max_iter: 200000
lr_policy: "step"
gamma: 1
momentum: 0.9
weight_decay: 0.0005
stepsize: 10000000
snapshot: 1000
snapshot_prefix: "examples/segnet/segnet_train/segnet_basic/seg"
solver_mode: GPU
device_id: 0
net: "examples/segnet/segnet_train.prototxt"
train_state {
  level: 0
  stage: ""
}
test_initialization: false
I0726 10:00:03.175753 44270 solver.cpp:91] Creating training net from net file: examples/segnet/segnet_train.prototxt
I0726 10:00:03.177093 44270 net.cpp:58] Initializing net from parameters: 
name: "segnet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "data"
  type: "DenseImageData"
  top: "data"
  top: "label"
  dense_image_data_param {
    source: "data/mydata/train.txt"
    batch_size: 4
    shuffle: true
  }
}
layer {
  name: "norm"
  type: "LRN"
  bottom: "data"
  top: "norm"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "norm"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv1_bn"
  type: "BN"
  bottom: "conv1"
  top: "conv1"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  top: "pool1_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv2_bn"
  type: "BN"
  bottom: "conv2"
  top: "conv2"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  top: "pool2_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv3_bn"
  type: "BN"
  bottom: "conv3"
  top: "conv3"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  top: "pool3_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv4_bn"
  type: "BN"
  bottom: "conv4"
  top: "conv4"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4"
  top: "pool4"
  top: "pool4_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "upsample4"
  type: "Upsample"
  bottom: "pool4"
  bottom: "pool4_mask"
  top: "upsample4"
  upsample_param {
    scale: 2
    pad_out_h: true
  }
}
layer {
  name: "conv_decode4"
  type: "Convolution"
  bottom: "upsample4"
  top: "conv_decode4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv_decode4_bn"
  type: "BN"
  bottom: "conv_decode4"
  top: "conv_decode4"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "upsample3"
  type: "Upsample"
  bottom: "conv_decode4"
  bottom: "pool3_mask"
  top: "upsample3"
  upsample_param {
    scale: 2
  }
}
layer {
  name: "conv_decode3"
  type: "Convolution"
  bottom: "upsample3"
  top: "conv_decode3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv_decode3_bn"
  type: "BN"
  bottom: "conv_decode3"
  top: "conv_decode3"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "upsample2"
  type: "Upsample"
  bottom: "conv_decode3"
  bottom: "pool2_mask"
  top: "upsample2"
  upsample_param {
    scale: 2
  }
}
layer {
  name: "conv_decode2"
  type: "Convolution"
  bottom: "upsample2"
  top: "conv_decode2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv_decode2_bn"
  type: "BN"
  bottom: "conv_decode2"
  top: "conv_decode2"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "upsample1"
  type: "Upsample"
  bottom: "conv_decode2"
  bottom: "pool1_mask"
  top: "upsample1"
  upsample_param {
    scale: 2
  }
}
layer {
  name: "conv_decode1"
  type: "Convolution"
  bottom: "upsample1"
  top: "conv_decode1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv_decode1_bn"
  type: "BN"
  bottom: "conv_decode1"
  top: "conv_decode1"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "conv_classifier"
  type: "Convolution"
  bottom: "conv_decode1"
  top: "conv_classifier"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 2
    kernel_size: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "conv_classifier"
  bottom: "label"
  top: "loss"
  loss_param {
    ignore_label: 2
    weight_by_label_freqs: true
    class_weighting: 0.59744
    class_weighting: 3.06568
  }
  softmax_param {
    engine: CAFFE
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "conv_classifier"
  bottom: "label"
  top: "accuracy"
  top: "per_class_accuracy"
}
I0726 10:00:03.177379 44270 layer_factory.hpp:77] Creating layer data
I0726 10:00:03.177434 44270 net.cpp:100] Creating Layer data
I0726 10:00:03.177449 44270 net.cpp:408] data -> data
I0726 10:00:03.177491 44270 net.cpp:408] data -> label
I0726 10:00:03.177517 44270 dense_image_data_layer.cpp:49] Opening file data/mydata/train.txt
I0726 10:00:03.177594 44270 dense_image_data_layer.cpp:59] Shuffling data
I0726 10:00:03.177996 44270 dense_image_data_layer.cpp:64] A total of 4 examples.
I0726 10:00:03.206236 44270 dense_image_data_layer.cpp:117] output data size: 4,3,360,480
I0726 10:00:03.214859 44270 net.cpp:150] Setting up data
I0726 10:00:03.214927 44270 net.cpp:157] Top shape: 4 3 360 480 (2073600)
I0726 10:00:03.214942 44270 net.cpp:157] Top shape: 4 1 360 480 (691200)
I0726 10:00:03.214951 44270 net.cpp:165] Memory required for data: 11059200
I0726 10:00:03.214965 44270 layer_factory.hpp:77] Creating layer label_data_1_split
I0726 10:00:03.214998 44270 net.cpp:100] Creating Layer label_data_1_split
I0726 10:00:03.215010 44270 net.cpp:434] label_data_1_split <- label
I0726 10:00:03.215034 44270 net.cpp:408] label_data_1_split -> label_data_1_split_0
I0726 10:00:03.215055 44270 net.cpp:408] label_data_1_split -> label_data_1_split_1
I0726 10:00:03.215135 44270 net.cpp:150] Setting up label_data_1_split
I0726 10:00:03.215150 44270 net.cpp:157] Top shape: 4 1 360 480 (691200)
I0726 10:00:03.215162 44270 net.cpp:157] Top shape: 4 1 360 480 (691200)
I0726 10:00:03.215169 44270 net.cpp:165] Memory required for data: 16588800
I0726 10:00:03.215178 44270 layer_factory.hpp:77] Creating layer norm
I0726 10:00:03.215200 44270 net.cpp:100] Creating Layer norm
I0726 10:00:03.215211 44270 net.cpp:434] norm <- data
I0726 10:00:03.215221 44270 net.cpp:408] norm -> norm
I0726 10:00:03.215268 44270 net.cpp:150] Setting up norm
I0726 10:00:03.215281 44270 net.cpp:157] Top shape: 4 3 360 480 (2073600)
I0726 10:00:03.215291 44270 net.cpp:165] Memory required for data: 24883200
I0726 10:00:03.215298 44270 layer_factory.hpp:77] Creating layer conv1
I0726 10:00:03.215323 44270 net.cpp:100] Creating Layer conv1
I0726 10:00:03.215343 44270 net.cpp:434] conv1 <- norm
I0726 10:00:03.215359 44270 net.cpp:408] conv1 -> conv1
I0726 10:00:03.220355 44270 net.cpp:150] Setting up conv1
I0726 10:00:03.220412 44270 net.cpp:157] Top shape: 4 64 360 480 (44236800)
I0726 10:00:03.220422 44270 net.cpp:165] Memory required for data: 201830400
I0726 10:00:03.220455 44270 layer_factory.hpp:77] Creating layer conv1_bn
I0726 10:00:03.220476 44270 net.cpp:100] Creating Layer conv1_bn
I0726 10:00:03.220486 44270 net.cpp:434] conv1_bn <- conv1
I0726 10:00:03.220499 44270 net.cpp:395] conv1_bn -> conv1 (in-place)
I0726 10:00:03.220955 44270 net.cpp:150] Setting up conv1_bn
I0726 10:00:03.220973 44270 net.cpp:157] Top shape: 4 64 360 480 (44236800)
I0726 10:00:03.220981 44270 net.cpp:165] Memory required for data: 378777600
I0726 10:00:03.221004 44270 layer_factory.hpp:77] Creating layer relu1
I0726 10:00:03.221029 44270 net.cpp:100] Creating Layer relu1
I0726 10:00:03.221038 44270 net.cpp:434] relu1 <- conv1
I0726 10:00:03.221047 44270 net.cpp:395] relu1 -> conv1 (in-place)
I0726 10:00:03.221061 44270 net.cpp:150] Setting up relu1
I0726 10:00:03.221073 44270 net.cpp:157] Top shape: 4 64 360 480 (44236800)
I0726 10:00:03.221081 44270 net.cpp:165] Memory required for data: 555724800
I0726 10:00:03.221092 44270 layer_factory.hpp:77] Creating layer pool1
I0726 10:00:03.221104 44270 net.cpp:100] Creating Layer pool1
I0726 10:00:03.221114 44270 net.cpp:434] pool1 <- conv1
I0726 10:00:03.221124 44270 net.cpp:408] pool1 -> pool1
I0726 10:00:03.221140 44270 net.cpp:408] pool1 -> pool1_mask
I0726 10:00:03.221199 44270 net.cpp:150] Setting up pool1
I0726 10:00:03.221215 44270 net.cpp:157] Top shape: 4 64 180 240 (11059200)
I0726 10:00:03.221225 44270 net.cpp:157] Top shape: 4 64 180 240 (11059200)
I0726 10:00:03.221237 44270 net.cpp:165] Memory required for data: 644198400
I0726 10:00:03.221247 44270 layer_factory.hpp:77] Creating layer conv2
I0726 10:00:03.221263 44270 net.cpp:100] Creating Layer conv2
I0726 10:00:03.221273 44270 net.cpp:434] conv2 <- pool1
I0726 10:00:03.221305 44270 net.cpp:408] conv2 -> conv2
I0726 10:00:03.235846 44270 net.cpp:150] Setting up conv2
I0726 10:00:03.235913 44270 net.cpp:157] Top shape: 4 64 180 240 (11059200)
I0726 10:00:03.235925 44270 net.cpp:165] Memory required for data: 688435200
I0726 10:00:03.235955 44270 layer_factory.hpp:77] Creating layer conv2_bn
I0726 10:00:03.235985 44270 net.cpp:100] Creating Layer conv2_bn
I0726 10:00:03.236001 44270 net.cpp:434] conv2_bn <- conv2
I0726 10:00:03.236019 44270 net.cpp:395] conv2_bn -> conv2 (in-place)
I0726 10:00:03.236390 44270 net.cpp:150] Setting up conv2_bn
I0726 10:00:03.236414 44270 net.cpp:157] Top shape: 4 64 180 240 (11059200)
I0726 10:00:03.236428 44270 net.cpp:165] Memory required for data: 732672000
I0726 10:00:03.236446 44270 layer_factory.hpp:77] Creating layer relu2
I0726 10:00:03.236464 44270 net.cpp:100] Creating Layer relu2
I0726 10:00:03.236479 44270 net.cpp:434] relu2 <- conv2
I0726 10:00:03.236493 44270 net.cpp:395] relu2 -> conv2 (in-place)
I0726 10:00:03.236510 44270 net.cpp:150] Setting up relu2
I0726 10:00:03.236527 44270 net.cpp:157] Top shape: 4 64 180 240 (11059200)
I0726 10:00:03.236541 44270 net.cpp:165] Memory required for data: 776908800
I0726 10:00:03.236553 44270 layer_factory.hpp:77] Creating layer pool2
I0726 10:00:03.236572 44270 net.cpp:100] Creating Layer pool2
I0726 10:00:03.236584 44270 net.cpp:434] pool2 <- conv2
I0726 10:00:03.236599 44270 net.cpp:408] pool2 -> pool2
I0726 10:00:03.236618 44270 net.cpp:408] pool2 -> pool2_mask
I0726 10:00:03.236675 44270 net.cpp:150] Setting up pool2
I0726 10:00:03.236694 44270 net.cpp:157] Top shape: 4 64 90 120 (2764800)
I0726 10:00:03.236709 44270 net.cpp:157] Top shape: 4 64 90 120 (2764800)
I0726 10:00:03.236723 44270 net.cpp:165] Memory required for data: 799027200
I0726 10:00:03.236735 44270 layer_factory.hpp:77] Creating layer conv3
I0726 10:00:03.236759 44270 net.cpp:100] Creating Layer conv3
I0726 10:00:03.236773 44270 net.cpp:434] conv3 <- pool2
I0726 10:00:03.236789 44270 net.cpp:408] conv3 -> conv3
I0726 10:00:03.247092 44270 net.cpp:150] Setting up conv3
I0726 10:00:03.247123 44270 net.cpp:157] Top shape: 4 64 90 120 (2764800)
I0726 10:00:03.247134 44270 net.cpp:165] Memory required for data: 810086400
I0726 10:00:03.247159 44270 layer_factory.hpp:77] Creating layer conv3_bn
I0726 10:00:03.247179 44270 net.cpp:100] Creating Layer conv3_bn
I0726 10:00:03.247192 44270 net.cpp:434] conv3_bn <- conv3
I0726 10:00:03.247210 44270 net.cpp:395] conv3_bn -> conv3 (in-place)
I0726 10:00:03.247547 44270 net.cpp:150] Setting up conv3_bn
I0726 10:00:03.247570 44270 net.cpp:157] Top shape: 4 64 90 120 (2764800)
I0726 10:00:03.247582 44270 net.cpp:165] Memory required for data: 821145600
I0726 10:00:03.247598 44270 layer_factory.hpp:77] Creating layer relu3
I0726 10:00:03.247614 44270 net.cpp:100] Creating Layer relu3
I0726 10:00:03.247627 44270 net.cpp:434] relu3 <- conv3
I0726 10:00:03.247668 44270 net.cpp:395] relu3 -> conv3 (in-place)
I0726 10:00:03.247692 44270 net.cpp:150] Setting up relu3
I0726 10:00:03.247714 44270 net.cpp:157] Top shape: 4 64 90 120 (2764800)
I0726 10:00:03.247732 44270 net.cpp:165] Memory required for data: 832204800
I0726 10:00:03.247743 44270 layer_factory.hpp:77] Creating layer pool3
I0726 10:00:03.247758 44270 net.cpp:100] Creating Layer pool3
I0726 10:00:03.247771 44270 net.cpp:434] pool3 <- conv3
I0726 10:00:03.247786 44270 net.cpp:408] pool3 -> pool3
I0726 10:00:03.247804 44270 net.cpp:408] pool3 -> pool3_mask
I0726 10:00:03.247862 44270 net.cpp:150] Setting up pool3
I0726 10:00:03.247879 44270 net.cpp:157] Top shape: 4 64 45 60 (691200)
I0726 10:00:03.247894 44270 net.cpp:157] Top shape: 4 64 45 60 (691200)
I0726 10:00:03.247905 44270 net.cpp:165] Memory required for data: 837734400
I0726 10:00:03.247915 44270 layer_factory.hpp:77] Creating layer conv4
I0726 10:00:03.247936 44270 net.cpp:100] Creating Layer conv4
I0726 10:00:03.247949 44270 net.cpp:434] conv4 <- pool3
I0726 10:00:03.247967 44270 net.cpp:408] conv4 -> conv4
I0726 10:00:03.262892 44270 net.cpp:150] Setting up conv4
I0726 10:00:03.262967 44270 net.cpp:157] Top shape: 4 64 45 60 (691200)
I0726 10:00:03.262981 44270 net.cpp:165] Memory required for data: 840499200
I0726 10:00:03.263001 44270 layer_factory.hpp:77] Creating layer conv4_bn
I0726 10:00:03.263031 44270 net.cpp:100] Creating Layer conv4_bn
I0726 10:00:03.263047 44270 net.cpp:434] conv4_bn <- conv4
I0726 10:00:03.263064 44270 net.cpp:395] conv4_bn -> conv4 (in-place)
I0726 10:00:03.263394 44270 net.cpp:150] Setting up conv4_bn
I0726 10:00:03.263415 44270 net.cpp:157] Top shape: 4 64 45 60 (691200)
I0726 10:00:03.263440 44270 net.cpp:165] Memory required for data: 843264000
I0726 10:00:03.263458 44270 layer_factory.hpp:77] Creating layer relu4
I0726 10:00:03.263478 44270 net.cpp:100] Creating Layer relu4
I0726 10:00:03.263499 44270 net.cpp:434] relu4 <- conv4
I0726 10:00:03.263514 44270 net.cpp:395] relu4 -> conv4 (in-place)
I0726 10:00:03.263530 44270 net.cpp:150] Setting up relu4
I0726 10:00:03.263547 44270 net.cpp:157] Top shape: 4 64 45 60 (691200)
I0726 10:00:03.263558 44270 net.cpp:165] Memory required for data: 846028800
I0726 10:00:03.263571 44270 layer_factory.hpp:77] Creating layer pool4
I0726 10:00:03.263586 44270 net.cpp:100] Creating Layer pool4
I0726 10:00:03.263598 44270 net.cpp:434] pool4 <- conv4
I0726 10:00:03.263615 44270 net.cpp:408] pool4 -> pool4
I0726 10:00:03.263633 44270 net.cpp:408] pool4 -> pool4_mask
I0726 10:00:03.263698 44270 net.cpp:150] Setting up pool4
I0726 10:00:03.263720 44270 net.cpp:157] Top shape: 4 64 23 30 (176640)
I0726 10:00:03.263737 44270 net.cpp:157] Top shape: 4 64 23 30 (176640)
I0726 10:00:03.263749 44270 net.cpp:165] Memory required for data: 847441920
I0726 10:00:03.263761 44270 layer_factory.hpp:77] Creating layer upsample4
I0726 10:00:03.263792 44270 net.cpp:100] Creating Layer upsample4
I0726 10:00:03.263805 44270 net.cpp:434] upsample4 <- pool4
I0726 10:00:03.263819 44270 net.cpp:434] upsample4 <- pool4_mask
I0726 10:00:03.263836 44270 net.cpp:408] upsample4 -> upsample4
I0726 10:00:03.263861 44270 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 10:00:03.263911 44270 net.cpp:150] Setting up upsample4
I0726 10:00:03.263929 44270 net.cpp:157] Top shape: 4 64 45 60 (691200)
I0726 10:00:03.263942 44270 net.cpp:165] Memory required for data: 850206720
I0726 10:00:03.263954 44270 layer_factory.hpp:77] Creating layer conv_decode4
I0726 10:00:03.263976 44270 net.cpp:100] Creating Layer conv_decode4
I0726 10:00:03.263990 44270 net.cpp:434] conv_decode4 <- upsample4
I0726 10:00:03.264006 44270 net.cpp:408] conv_decode4 -> conv_decode4
I0726 10:00:03.271386 44270 net.cpp:150] Setting up conv_decode4
I0726 10:00:03.271409 44270 net.cpp:157] Top shape: 4 64 45 60 (691200)
I0726 10:00:03.271416 44270 net.cpp:165] Memory required for data: 852971520
I0726 10:00:03.271433 44270 layer_factory.hpp:77] Creating layer conv_decode4_bn
I0726 10:00:03.271445 44270 net.cpp:100] Creating Layer conv_decode4_bn
I0726 10:00:03.271453 44270 net.cpp:434] conv_decode4_bn <- conv_decode4
I0726 10:00:03.271464 44270 net.cpp:395] conv_decode4_bn -> conv_decode4 (in-place)
I0726 10:00:03.271672 44270 net.cpp:150] Setting up conv_decode4_bn
I0726 10:00:03.271687 44270 net.cpp:157] Top shape: 4 64 45 60 (691200)
I0726 10:00:03.271693 44270 net.cpp:165] Memory required for data: 855736320
I0726 10:00:03.271704 44270 layer_factory.hpp:77] Creating layer upsample3
I0726 10:00:03.271718 44270 net.cpp:100] Creating Layer upsample3
I0726 10:00:03.271725 44270 net.cpp:434] upsample3 <- conv_decode4
I0726 10:00:03.271735 44270 net.cpp:434] upsample3 <- pool3_mask
I0726 10:00:03.271745 44270 net.cpp:408] upsample3 -> upsample3
I0726 10:00:03.271759 44270 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 10:00:03.271786 44270 net.cpp:150] Setting up upsample3
I0726 10:00:03.271798 44270 net.cpp:157] Top shape: 4 64 90 120 (2764800)
I0726 10:00:03.271806 44270 net.cpp:165] Memory required for data: 866795520
I0726 10:00:03.271824 44270 layer_factory.hpp:77] Creating layer conv_decode3
I0726 10:00:03.271839 44270 net.cpp:100] Creating Layer conv_decode3
I0726 10:00:03.271849 44270 net.cpp:434] conv_decode3 <- upsample3
I0726 10:00:03.271860 44270 net.cpp:408] conv_decode3 -> conv_decode3
I0726 10:00:03.280925 44270 net.cpp:150] Setting up conv_decode3
I0726 10:00:03.280958 44270 net.cpp:157] Top shape: 4 64 90 120 (2764800)
I0726 10:00:03.280967 44270 net.cpp:165] Memory required for data: 877854720
I0726 10:00:03.280980 44270 layer_factory.hpp:77] Creating layer conv_decode3_bn
I0726 10:00:03.280994 44270 net.cpp:100] Creating Layer conv_decode3_bn
I0726 10:00:03.281002 44270 net.cpp:434] conv_decode3_bn <- conv_decode3
I0726 10:00:03.281015 44270 net.cpp:395] conv_decode3_bn -> conv_decode3 (in-place)
I0726 10:00:03.281256 44270 net.cpp:150] Setting up conv_decode3_bn
I0726 10:00:03.281272 44270 net.cpp:157] Top shape: 4 64 90 120 (2764800)
I0726 10:00:03.281281 44270 net.cpp:165] Memory required for data: 888913920
I0726 10:00:03.281292 44270 layer_factory.hpp:77] Creating layer upsample2
I0726 10:00:03.281306 44270 net.cpp:100] Creating Layer upsample2
I0726 10:00:03.281314 44270 net.cpp:434] upsample2 <- conv_decode3
I0726 10:00:03.281323 44270 net.cpp:434] upsample2 <- pool2_mask
I0726 10:00:03.281334 44270 net.cpp:408] upsample2 -> upsample2
I0726 10:00:03.281347 44270 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 10:00:03.281373 44270 net.cpp:150] Setting up upsample2
I0726 10:00:03.281386 44270 net.cpp:157] Top shape: 4 64 180 240 (11059200)
I0726 10:00:03.281395 44270 net.cpp:165] Memory required for data: 933150720
I0726 10:00:03.281402 44270 layer_factory.hpp:77] Creating layer conv_decode2
I0726 10:00:03.281419 44270 net.cpp:100] Creating Layer conv_decode2
I0726 10:00:03.281428 44270 net.cpp:434] conv_decode2 <- upsample2
I0726 10:00:03.281448 44270 net.cpp:408] conv_decode2 -> conv_decode2
I0726 10:00:03.288410 44270 net.cpp:150] Setting up conv_decode2
I0726 10:00:03.288429 44270 net.cpp:157] Top shape: 4 64 180 240 (11059200)
I0726 10:00:03.288437 44270 net.cpp:165] Memory required for data: 977387520
I0726 10:00:03.288449 44270 layer_factory.hpp:77] Creating layer conv_decode2_bn
I0726 10:00:03.288461 44270 net.cpp:100] Creating Layer conv_decode2_bn
I0726 10:00:03.288473 44270 net.cpp:434] conv_decode2_bn <- conv_decode2
I0726 10:00:03.288486 44270 net.cpp:395] conv_decode2_bn -> conv_decode2 (in-place)
I0726 10:00:03.288784 44270 net.cpp:150] Setting up conv_decode2_bn
I0726 10:00:03.288800 44270 net.cpp:157] Top shape: 4 64 180 240 (11059200)
I0726 10:00:03.288806 44270 net.cpp:165] Memory required for data: 1021624320
I0726 10:00:03.288818 44270 layer_factory.hpp:77] Creating layer upsample1
I0726 10:00:03.288830 44270 net.cpp:100] Creating Layer upsample1
I0726 10:00:03.288838 44270 net.cpp:434] upsample1 <- conv_decode2
I0726 10:00:03.288848 44270 net.cpp:434] upsample1 <- pool1_mask
I0726 10:00:03.288857 44270 net.cpp:408] upsample1 -> upsample1
I0726 10:00:03.288870 44270 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 10:00:03.288894 44270 net.cpp:150] Setting up upsample1
I0726 10:00:03.288908 44270 net.cpp:157] Top shape: 4 64 360 480 (44236800)
I0726 10:00:03.288920 44270 net.cpp:165] Memory required for data: 1198571520
I0726 10:00:03.288928 44270 layer_factory.hpp:77] Creating layer conv_decode1
I0726 10:00:03.288942 44270 net.cpp:100] Creating Layer conv_decode1
I0726 10:00:03.288952 44270 net.cpp:434] conv_decode1 <- upsample1
I0726 10:00:03.288964 44270 net.cpp:408] conv_decode1 -> conv_decode1
I0726 10:00:03.297850 44270 net.cpp:150] Setting up conv_decode1
I0726 10:00:03.297878 44270 net.cpp:157] Top shape: 4 64 360 480 (44236800)
I0726 10:00:03.297886 44270 net.cpp:165] Memory required for data: 1375518720
I0726 10:00:03.297899 44270 layer_factory.hpp:77] Creating layer conv_decode1_bn
I0726 10:00:03.297925 44270 net.cpp:100] Creating Layer conv_decode1_bn
I0726 10:00:03.297935 44270 net.cpp:434] conv_decode1_bn <- conv_decode1
I0726 10:00:03.297947 44270 net.cpp:395] conv_decode1_bn -> conv_decode1 (in-place)
I0726 10:00:03.300246 44270 net.cpp:150] Setting up conv_decode1_bn
I0726 10:00:03.300273 44270 net.cpp:157] Top shape: 4 64 360 480 (44236800)
I0726 10:00:03.300282 44270 net.cpp:165] Memory required for data: 1552465920
I0726 10:00:03.300294 44270 layer_factory.hpp:77] Creating layer conv_classifier
I0726 10:00:03.300313 44270 net.cpp:100] Creating Layer conv_classifier
I0726 10:00:03.300323 44270 net.cpp:434] conv_classifier <- conv_decode1
I0726 10:00:03.300335 44270 net.cpp:408] conv_classifier -> conv_classifier
I0726 10:00:03.300727 44270 net.cpp:150] Setting up conv_classifier
I0726 10:00:03.300745 44270 net.cpp:157] Top shape: 4 2 360 480 (1382400)
I0726 10:00:03.300753 44270 net.cpp:165] Memory required for data: 1557995520
I0726 10:00:03.300773 44270 layer_factory.hpp:77] Creating layer conv_classifier_conv_classifier_0_split
I0726 10:00:03.300791 44270 net.cpp:100] Creating Layer conv_classifier_conv_classifier_0_split
I0726 10:00:03.300801 44270 net.cpp:434] conv_classifier_conv_classifier_0_split <- conv_classifier
I0726 10:00:03.300812 44270 net.cpp:408] conv_classifier_conv_classifier_0_split -> conv_classifier_conv_classifier_0_split_0
I0726 10:00:03.300827 44270 net.cpp:408] conv_classifier_conv_classifier_0_split -> conv_classifier_conv_classifier_0_split_1
I0726 10:00:03.300870 44270 net.cpp:150] Setting up conv_classifier_conv_classifier_0_split
I0726 10:00:03.300884 44270 net.cpp:157] Top shape: 4 2 360 480 (1382400)
I0726 10:00:03.300894 44270 net.cpp:157] Top shape: 4 2 360 480 (1382400)
I0726 10:00:03.300902 44270 net.cpp:165] Memory required for data: 1569054720
I0726 10:00:03.300910 44270 layer_factory.hpp:77] Creating layer loss
I0726 10:00:03.300933 44270 net.cpp:100] Creating Layer loss
I0726 10:00:03.300951 44270 net.cpp:434] loss <- conv_classifier_conv_classifier_0_split_0
I0726 10:00:03.300961 44270 net.cpp:434] loss <- label_data_1_split_0
I0726 10:00:03.300973 44270 net.cpp:408] loss -> loss
I0726 10:00:03.301003 44270 layer_factory.hpp:77] Creating layer loss
I0726 10:00:03.305730 44270 net.cpp:150] Setting up loss
I0726 10:00:03.305757 44270 net.cpp:157] Top shape: (1)
I0726 10:00:03.305766 44270 net.cpp:160]     with loss weight 1
I0726 10:00:03.305799 44270 net.cpp:165] Memory required for data: 1569054724
I0726 10:00:03.305807 44270 layer_factory.hpp:77] Creating layer accuracy
I0726 10:00:03.305821 44270 net.cpp:100] Creating Layer accuracy
I0726 10:00:03.305831 44270 net.cpp:434] accuracy <- conv_classifier_conv_classifier_0_split_1
I0726 10:00:03.305841 44270 net.cpp:434] accuracy <- label_data_1_split_1
I0726 10:00:03.305852 44270 net.cpp:408] accuracy -> accuracy
I0726 10:00:03.305865 44270 net.cpp:408] accuracy -> per_class_accuracy
I0726 10:00:03.305909 44270 net.cpp:150] Setting up accuracy
I0726 10:00:03.305922 44270 net.cpp:157] Top shape: (1)
I0726 10:00:03.305930 44270 net.cpp:157] Top shape: 2 (2)
I0726 10:00:03.305939 44270 net.cpp:165] Memory required for data: 1569054736
I0726 10:00:03.305946 44270 net.cpp:228] accuracy does not need backward computation.
I0726 10:00:03.305954 44270 net.cpp:226] loss needs backward computation.
I0726 10:00:03.305965 44270 net.cpp:226] conv_classifier_conv_classifier_0_split needs backward computation.
I0726 10:00:03.305972 44270 net.cpp:226] conv_classifier needs backward computation.
I0726 10:00:03.305979 44270 net.cpp:226] conv_decode1_bn needs backward computation.
I0726 10:00:03.305989 44270 net.cpp:226] conv_decode1 needs backward computation.
I0726 10:00:03.305996 44270 net.cpp:226] upsample1 needs backward computation.
I0726 10:00:03.306005 44270 net.cpp:226] conv_decode2_bn needs backward computation.
I0726 10:00:03.306013 44270 net.cpp:226] conv_decode2 needs backward computation.
I0726 10:00:03.306020 44270 net.cpp:226] upsample2 needs backward computation.
I0726 10:00:03.306041 44270 net.cpp:226] conv_decode3_bn needs backward computation.
I0726 10:00:03.306049 44270 net.cpp:226] conv_decode3 needs backward computation.
I0726 10:00:03.306059 44270 net.cpp:226] upsample3 needs backward computation.
I0726 10:00:03.306066 44270 net.cpp:226] conv_decode4_bn needs backward computation.
I0726 10:00:03.306077 44270 net.cpp:226] conv_decode4 needs backward computation.
I0726 10:00:03.306083 44270 net.cpp:226] upsample4 needs backward computation.
I0726 10:00:03.306092 44270 net.cpp:226] pool4 needs backward computation.
I0726 10:00:03.306102 44270 net.cpp:226] relu4 needs backward computation.
I0726 10:00:03.306108 44270 net.cpp:226] conv4_bn needs backward computation.
I0726 10:00:03.306115 44270 net.cpp:226] conv4 needs backward computation.
I0726 10:00:03.306124 44270 net.cpp:226] pool3 needs backward computation.
I0726 10:00:03.306133 44270 net.cpp:226] relu3 needs backward computation.
I0726 10:00:03.306140 44270 net.cpp:226] conv3_bn needs backward computation.
I0726 10:00:03.306147 44270 net.cpp:226] conv3 needs backward computation.
I0726 10:00:03.306154 44270 net.cpp:226] pool2 needs backward computation.
I0726 10:00:03.306164 44270 net.cpp:226] relu2 needs backward computation.
I0726 10:00:03.306170 44270 net.cpp:226] conv2_bn needs backward computation.
I0726 10:00:03.306177 44270 net.cpp:226] conv2 needs backward computation.
I0726 10:00:03.306186 44270 net.cpp:226] pool1 needs backward computation.
I0726 10:00:03.306193 44270 net.cpp:226] relu1 needs backward computation.
I0726 10:00:03.306200 44270 net.cpp:226] conv1_bn needs backward computation.
I0726 10:00:03.306208 44270 net.cpp:226] conv1 needs backward computation.
I0726 10:00:03.306217 44270 net.cpp:228] norm does not need backward computation.
I0726 10:00:03.306227 44270 net.cpp:228] label_data_1_split does not need backward computation.
I0726 10:00:03.306236 44270 net.cpp:228] data does not need backward computation.
I0726 10:00:03.306244 44270 net.cpp:270] This network produces output accuracy
I0726 10:00:03.306257 44270 net.cpp:270] This network produces output loss
I0726 10:00:03.306264 44270 net.cpp:270] This network produces output per_class_accuracy
I0726 10:00:03.306298 44270 net.cpp:283] Network initialization done.
I0726 10:00:03.307333 44270 solver.cpp:181] Creating test net (#0) specified by net file: examples/segnet/segnet_train.prototxt
I0726 10:00:03.307657 44270 net.cpp:58] Initializing net from parameters: 
name: "segnet"
state {
  phase: TEST
}
layer {
  name: "data"
  type: "DenseImageData"
  top: "data"
  top: "label"
  dense_image_data_param {
    source: "data/mydata/train.txt"
    batch_size: 4
    shuffle: true
  }
}
layer {
  name: "norm"
  type: "LRN"
  bottom: "data"
  top: "norm"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "norm"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv1_bn"
  type: "BN"
  bottom: "conv1"
  top: "conv1"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  top: "pool1_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv2_bn"
  type: "BN"
  bottom: "conv2"
  top: "conv2"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  top: "pool2_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv3_bn"
  type: "BN"
  bottom: "conv3"
  top: "conv3"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  top: "pool3_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv4_bn"
  type: "BN"
  bottom: "conv4"
  top: "conv4"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4"
  top: "pool4"
  top: "pool4_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "upsample4"
  type: "Upsample"
  bottom: "pool4"
  bottom: "pool4_mask"
  top: "upsample4"
  upsample_param {
    scale: 2
    pad_out_h: true
  }
}
layer {
  name: "conv_decode4"
  type: "Convolution"
  bottom: "upsample4"
  top: "conv_decode4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv_decode4_bn"
  type: "BN"
  bottom: "conv_decode4"
  top: "conv_decode4"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "upsample3"
  type: "Upsample"
  bottom: "conv_decode4"
  bottom: "pool3_mask"
  top: "upsample3"
  upsample_param {
    scale: 2
  }
}
layer {
  name: "conv_decode3"
  type: "Convolution"
  bottom: "upsample3"
  top: "conv_decode3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv_decode3_bn"
  type: "BN"
  bottom: "conv_decode3"
  top: "conv_decode3"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "upsample2"
  type: "Upsample"
  bottom: "conv_decode3"
  bottom: "pool2_mask"
  top: "upsample2"
  upsample_param {
    scale: 2
  }
}
layer {
  name: "conv_decode2"
  type: "Convolution"
  bottom: "upsample2"
  top: "conv_decode2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv_decode2_bn"
  type: "BN"
  bottom: "conv_decode2"
  top: "conv_decode2"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "upsample1"
  type: "Upsample"
  bottom: "conv_decode2"
  bottom: "pool1_mask"
  top: "upsample1"
  upsample_param {
    scale: 2
  }
}
layer {
  name: "conv_decode1"
  type: "Convolution"
  bottom: "upsample1"
  top: "conv_decode1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv_decode1_bn"
  type: "BN"
  bottom: "conv_decode1"
  top: "conv_decode1"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "conv_classifier"
  type: "Convolution"
  bottom: "conv_decode1"
  top: "conv_classifier"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 2
    kernel_size: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "conv_classifier"
  bottom: "label"
  top: "loss"
  loss_param {
    ignore_label: 2
    weight_by_label_freqs: true
    class_weighting: 0.59744
    class_weighting: 3.06568
  }
  softmax_param {
    engine: CAFFE
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "conv_classifier"
  bottom: "label"
  top: "accuracy"
  top: "per_class_accuracy"
}
I0726 10:00:03.307853 44270 layer_factory.hpp:77] Creating layer data
I0726 10:00:03.307874 44270 net.cpp:100] Creating Layer data
I0726 10:00:03.307885 44270 net.cpp:408] data -> data
I0726 10:00:03.307898 44270 net.cpp:408] data -> label
I0726 10:00:03.307915 44270 dense_image_data_layer.cpp:49] Opening file data/mydata/train.txt
I0726 10:00:03.307953 44270 dense_image_data_layer.cpp:59] Shuffling data
I0726 10:00:03.307970 44270 dense_image_data_layer.cpp:64] A total of 4 examples.
I0726 10:00:03.313980 44270 dense_image_data_layer.cpp:117] output data size: 4,3,360,480
I0726 10:00:03.321740 44270 net.cpp:150] Setting up data
I0726 10:00:03.321777 44270 net.cpp:157] Top shape: 4 3 360 480 (2073600)
I0726 10:00:03.321789 44270 net.cpp:157] Top shape: 4 1 360 480 (691200)
I0726 10:00:03.321796 44270 net.cpp:165] Memory required for data: 11059200
I0726 10:00:03.321805 44270 layer_factory.hpp:77] Creating layer label_data_1_split
I0726 10:00:03.321822 44270 net.cpp:100] Creating Layer label_data_1_split
I0726 10:00:03.321843 44270 net.cpp:434] label_data_1_split <- label
I0726 10:00:03.321856 44270 net.cpp:408] label_data_1_split -> label_data_1_split_0
I0726 10:00:03.321878 44270 net.cpp:408] label_data_1_split -> label_data_1_split_1
I0726 10:00:03.321956 44270 net.cpp:150] Setting up label_data_1_split
I0726 10:00:03.321972 44270 net.cpp:157] Top shape: 4 1 360 480 (691200)
I0726 10:00:03.321982 44270 net.cpp:157] Top shape: 4 1 360 480 (691200)
I0726 10:00:03.321990 44270 net.cpp:165] Memory required for data: 16588800
I0726 10:00:03.322000 44270 layer_factory.hpp:77] Creating layer norm
I0726 10:00:03.322012 44270 net.cpp:100] Creating Layer norm
I0726 10:00:03.322022 44270 net.cpp:434] norm <- data
I0726 10:00:03.322032 44270 net.cpp:408] norm -> norm
I0726 10:00:03.322077 44270 net.cpp:150] Setting up norm
I0726 10:00:03.322090 44270 net.cpp:157] Top shape: 4 3 360 480 (2073600)
I0726 10:00:03.322098 44270 net.cpp:165] Memory required for data: 24883200
I0726 10:00:03.322106 44270 layer_factory.hpp:77] Creating layer conv1
I0726 10:00:03.322124 44270 net.cpp:100] Creating Layer conv1
I0726 10:00:03.322134 44270 net.cpp:434] conv1 <- norm
I0726 10:00:03.322144 44270 net.cpp:408] conv1 -> conv1
I0726 10:00:03.325053 44270 net.cpp:150] Setting up conv1
I0726 10:00:03.325080 44270 net.cpp:157] Top shape: 4 64 360 480 (44236800)
I0726 10:00:03.325090 44270 net.cpp:165] Memory required for data: 201830400
I0726 10:00:03.325129 44270 layer_factory.hpp:77] Creating layer conv1_bn
I0726 10:00:03.325147 44270 net.cpp:100] Creating Layer conv1_bn
I0726 10:00:03.325158 44270 net.cpp:434] conv1_bn <- conv1
I0726 10:00:03.325170 44270 net.cpp:395] conv1_bn -> conv1 (in-place)
I0726 10:00:03.325644 44270 net.cpp:150] Setting up conv1_bn
I0726 10:00:03.325660 44270 net.cpp:157] Top shape: 4 64 360 480 (44236800)
I0726 10:00:03.325668 44270 net.cpp:165] Memory required for data: 378777600
I0726 10:00:03.325685 44270 layer_factory.hpp:77] Creating layer relu1
I0726 10:00:03.325697 44270 net.cpp:100] Creating Layer relu1
I0726 10:00:03.325706 44270 net.cpp:434] relu1 <- conv1
I0726 10:00:03.325716 44270 net.cpp:395] relu1 -> conv1 (in-place)
I0726 10:00:03.325736 44270 net.cpp:150] Setting up relu1
I0726 10:00:03.325747 44270 net.cpp:157] Top shape: 4 64 360 480 (44236800)
I0726 10:00:03.325753 44270 net.cpp:165] Memory required for data: 555724800
I0726 10:00:03.325765 44270 layer_factory.hpp:77] Creating layer pool1
I0726 10:00:03.325776 44270 net.cpp:100] Creating Layer pool1
I0726 10:00:03.325784 44270 net.cpp:434] pool1 <- conv1
I0726 10:00:03.325793 44270 net.cpp:408] pool1 -> pool1
I0726 10:00:03.325805 44270 net.cpp:408] pool1 -> pool1_mask
I0726 10:00:03.325848 44270 net.cpp:150] Setting up pool1
I0726 10:00:03.325861 44270 net.cpp:157] Top shape: 4 64 180 240 (11059200)
I0726 10:00:03.325870 44270 net.cpp:157] Top shape: 4 64 180 240 (11059200)
I0726 10:00:03.325879 44270 net.cpp:165] Memory required for data: 644198400
I0726 10:00:03.325887 44270 layer_factory.hpp:77] Creating layer conv2
I0726 10:00:03.325903 44270 net.cpp:100] Creating Layer conv2
I0726 10:00:03.325913 44270 net.cpp:434] conv2 <- pool1
I0726 10:00:03.325924 44270 net.cpp:408] conv2 -> conv2
I0726 10:00:03.334851 44270 net.cpp:150] Setting up conv2
I0726 10:00:03.334883 44270 net.cpp:157] Top shape: 4 64 180 240 (11059200)
I0726 10:00:03.334892 44270 net.cpp:165] Memory required for data: 688435200
I0726 10:00:03.334916 44270 layer_factory.hpp:77] Creating layer conv2_bn
I0726 10:00:03.334931 44270 net.cpp:100] Creating Layer conv2_bn
I0726 10:00:03.334941 44270 net.cpp:434] conv2_bn <- conv2
I0726 10:00:03.334954 44270 net.cpp:395] conv2_bn -> conv2 (in-place)
I0726 10:00:03.335275 44270 net.cpp:150] Setting up conv2_bn
I0726 10:00:03.335294 44270 net.cpp:157] Top shape: 4 64 180 240 (11059200)
I0726 10:00:03.335301 44270 net.cpp:165] Memory required for data: 732672000
I0726 10:00:03.335314 44270 layer_factory.hpp:77] Creating layer relu2
I0726 10:00:03.335326 44270 net.cpp:100] Creating Layer relu2
I0726 10:00:03.335335 44270 net.cpp:434] relu2 <- conv2
I0726 10:00:03.335345 44270 net.cpp:395] relu2 -> conv2 (in-place)
I0726 10:00:03.335355 44270 net.cpp:150] Setting up relu2
I0726 10:00:03.335367 44270 net.cpp:157] Top shape: 4 64 180 240 (11059200)
I0726 10:00:03.335376 44270 net.cpp:165] Memory required for data: 776908800
I0726 10:00:03.335383 44270 layer_factory.hpp:77] Creating layer pool2
I0726 10:00:03.335394 44270 net.cpp:100] Creating Layer pool2
I0726 10:00:03.335403 44270 net.cpp:434] pool2 <- conv2
I0726 10:00:03.335413 44270 net.cpp:408] pool2 -> pool2
I0726 10:00:03.335425 44270 net.cpp:408] pool2 -> pool2_mask
I0726 10:00:03.335471 44270 net.cpp:150] Setting up pool2
I0726 10:00:03.335485 44270 net.cpp:157] Top shape: 4 64 90 120 (2764800)
I0726 10:00:03.335495 44270 net.cpp:157] Top shape: 4 64 90 120 (2764800)
I0726 10:00:03.335505 44270 net.cpp:165] Memory required for data: 799027200
I0726 10:00:03.335512 44270 layer_factory.hpp:77] Creating layer conv3
I0726 10:00:03.335530 44270 net.cpp:100] Creating Layer conv3
I0726 10:00:03.335539 44270 net.cpp:434] conv3 <- pool2
I0726 10:00:03.335551 44270 net.cpp:408] conv3 -> conv3
I0726 10:00:03.342576 44270 net.cpp:150] Setting up conv3
I0726 10:00:03.342594 44270 net.cpp:157] Top shape: 4 64 90 120 (2764800)
I0726 10:00:03.342602 44270 net.cpp:165] Memory required for data: 810086400
I0726 10:00:03.342617 44270 layer_factory.hpp:77] Creating layer conv3_bn
I0726 10:00:03.342640 44270 net.cpp:100] Creating Layer conv3_bn
I0726 10:00:03.342649 44270 net.cpp:434] conv3_bn <- conv3
I0726 10:00:03.342664 44270 net.cpp:395] conv3_bn -> conv3 (in-place)
I0726 10:00:03.342917 44270 net.cpp:150] Setting up conv3_bn
I0726 10:00:03.342932 44270 net.cpp:157] Top shape: 4 64 90 120 (2764800)
I0726 10:00:03.342941 44270 net.cpp:165] Memory required for data: 821145600
I0726 10:00:03.342954 44270 layer_factory.hpp:77] Creating layer relu3
I0726 10:00:03.342965 44270 net.cpp:100] Creating Layer relu3
I0726 10:00:03.342974 44270 net.cpp:434] relu3 <- conv3
I0726 10:00:03.342986 44270 net.cpp:395] relu3 -> conv3 (in-place)
I0726 10:00:03.342999 44270 net.cpp:150] Setting up relu3
I0726 10:00:03.343010 44270 net.cpp:157] Top shape: 4 64 90 120 (2764800)
I0726 10:00:03.343019 44270 net.cpp:165] Memory required for data: 832204800
I0726 10:00:03.343029 44270 layer_factory.hpp:77] Creating layer pool3
I0726 10:00:03.343041 44270 net.cpp:100] Creating Layer pool3
I0726 10:00:03.343050 44270 net.cpp:434] pool3 <- conv3
I0726 10:00:03.343061 44270 net.cpp:408] pool3 -> pool3
I0726 10:00:03.343075 44270 net.cpp:408] pool3 -> pool3_mask
I0726 10:00:03.343119 44270 net.cpp:150] Setting up pool3
I0726 10:00:03.343132 44270 net.cpp:157] Top shape: 4 64 45 60 (691200)
I0726 10:00:03.343145 44270 net.cpp:157] Top shape: 4 64 45 60 (691200)
I0726 10:00:03.343153 44270 net.cpp:165] Memory required for data: 837734400
I0726 10:00:03.343165 44270 layer_factory.hpp:77] Creating layer conv4
I0726 10:00:03.343180 44270 net.cpp:100] Creating Layer conv4
I0726 10:00:03.343191 44270 net.cpp:434] conv4 <- pool3
I0726 10:00:03.343204 44270 net.cpp:408] conv4 -> conv4
I0726 10:00:03.352084 44270 net.cpp:150] Setting up conv4
I0726 10:00:03.352113 44270 net.cpp:157] Top shape: 4 64 45 60 (691200)
I0726 10:00:03.352120 44270 net.cpp:165] Memory required for data: 840499200
I0726 10:00:03.352135 44270 layer_factory.hpp:77] Creating layer conv4_bn
I0726 10:00:03.352150 44270 net.cpp:100] Creating Layer conv4_bn
I0726 10:00:03.352174 44270 net.cpp:434] conv4_bn <- conv4
I0726 10:00:03.352197 44270 net.cpp:395] conv4_bn -> conv4 (in-place)
I0726 10:00:03.352453 44270 net.cpp:150] Setting up conv4_bn
I0726 10:00:03.352473 44270 net.cpp:157] Top shape: 4 64 45 60 (691200)
I0726 10:00:03.352484 44270 net.cpp:165] Memory required for data: 843264000
I0726 10:00:03.352504 44270 layer_factory.hpp:77] Creating layer relu4
I0726 10:00:03.352516 44270 net.cpp:100] Creating Layer relu4
I0726 10:00:03.352526 44270 net.cpp:434] relu4 <- conv4
I0726 10:00:03.352538 44270 net.cpp:395] relu4 -> conv4 (in-place)
I0726 10:00:03.352552 44270 net.cpp:150] Setting up relu4
I0726 10:00:03.352563 44270 net.cpp:157] Top shape: 4 64 45 60 (691200)
I0726 10:00:03.352571 44270 net.cpp:165] Memory required for data: 846028800
I0726 10:00:03.352581 44270 layer_factory.hpp:77] Creating layer pool4
I0726 10:00:03.352594 44270 net.cpp:100] Creating Layer pool4
I0726 10:00:03.352602 44270 net.cpp:434] pool4 <- conv4
I0726 10:00:03.352614 44270 net.cpp:408] pool4 -> pool4
I0726 10:00:03.352627 44270 net.cpp:408] pool4 -> pool4_mask
I0726 10:00:03.352674 44270 net.cpp:150] Setting up pool4
I0726 10:00:03.352689 44270 net.cpp:157] Top shape: 4 64 23 30 (176640)
I0726 10:00:03.352700 44270 net.cpp:157] Top shape: 4 64 23 30 (176640)
I0726 10:00:03.352708 44270 net.cpp:165] Memory required for data: 847441920
I0726 10:00:03.352718 44270 layer_factory.hpp:77] Creating layer upsample4
I0726 10:00:03.352731 44270 net.cpp:100] Creating Layer upsample4
I0726 10:00:03.352741 44270 net.cpp:434] upsample4 <- pool4
I0726 10:00:03.352749 44270 net.cpp:434] upsample4 <- pool4_mask
I0726 10:00:03.352758 44270 net.cpp:408] upsample4 -> upsample4
I0726 10:00:03.352769 44270 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 10:00:03.352800 44270 net.cpp:150] Setting up upsample4
I0726 10:00:03.352813 44270 net.cpp:157] Top shape: 4 64 45 60 (691200)
I0726 10:00:03.352831 44270 net.cpp:165] Memory required for data: 850206720
I0726 10:00:03.352840 44270 layer_factory.hpp:77] Creating layer conv_decode4
I0726 10:00:03.352856 44270 net.cpp:100] Creating Layer conv_decode4
I0726 10:00:03.352865 44270 net.cpp:434] conv_decode4 <- upsample4
I0726 10:00:03.352879 44270 net.cpp:408] conv_decode4 -> conv_decode4
I0726 10:00:03.359905 44270 net.cpp:150] Setting up conv_decode4
I0726 10:00:03.359925 44270 net.cpp:157] Top shape: 4 64 45 60 (691200)
I0726 10:00:03.359931 44270 net.cpp:165] Memory required for data: 852971520
I0726 10:00:03.359948 44270 layer_factory.hpp:77] Creating layer conv_decode4_bn
I0726 10:00:03.359961 44270 net.cpp:100] Creating Layer conv_decode4_bn
I0726 10:00:03.359967 44270 net.cpp:434] conv_decode4_bn <- conv_decode4
I0726 10:00:03.359978 44270 net.cpp:395] conv_decode4_bn -> conv_decode4 (in-place)
I0726 10:00:03.360209 44270 net.cpp:150] Setting up conv_decode4_bn
I0726 10:00:03.360224 44270 net.cpp:157] Top shape: 4 64 45 60 (691200)
I0726 10:00:03.360232 44270 net.cpp:165] Memory required for data: 855736320
I0726 10:00:03.360245 44270 layer_factory.hpp:77] Creating layer upsample3
I0726 10:00:03.360257 44270 net.cpp:100] Creating Layer upsample3
I0726 10:00:03.360266 44270 net.cpp:434] upsample3 <- conv_decode4
I0726 10:00:03.360280 44270 net.cpp:434] upsample3 <- pool3_mask
I0726 10:00:03.360291 44270 net.cpp:408] upsample3 -> upsample3
I0726 10:00:03.360304 44270 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 10:00:03.360332 44270 net.cpp:150] Setting up upsample3
I0726 10:00:03.360344 44270 net.cpp:157] Top shape: 4 64 90 120 (2764800)
I0726 10:00:03.360353 44270 net.cpp:165] Memory required for data: 866795520
I0726 10:00:03.360361 44270 layer_factory.hpp:77] Creating layer conv_decode3
I0726 10:00:03.360376 44270 net.cpp:100] Creating Layer conv_decode3
I0726 10:00:03.360385 44270 net.cpp:434] conv_decode3 <- upsample3
I0726 10:00:03.360402 44270 net.cpp:408] conv_decode3 -> conv_decode3
I0726 10:00:03.369442 44270 net.cpp:150] Setting up conv_decode3
I0726 10:00:03.369472 44270 net.cpp:157] Top shape: 4 64 90 120 (2764800)
I0726 10:00:03.369482 44270 net.cpp:165] Memory required for data: 877854720
I0726 10:00:03.369493 44270 layer_factory.hpp:77] Creating layer conv_decode3_bn
I0726 10:00:03.369506 44270 net.cpp:100] Creating Layer conv_decode3_bn
I0726 10:00:03.369514 44270 net.cpp:434] conv_decode3_bn <- conv_decode3
I0726 10:00:03.369530 44270 net.cpp:395] conv_decode3_bn -> conv_decode3 (in-place)
I0726 10:00:03.369786 44270 net.cpp:150] Setting up conv_decode3_bn
I0726 10:00:03.369802 44270 net.cpp:157] Top shape: 4 64 90 120 (2764800)
I0726 10:00:03.369809 44270 net.cpp:165] Memory required for data: 888913920
I0726 10:00:03.369822 44270 layer_factory.hpp:77] Creating layer upsample2
I0726 10:00:03.369835 44270 net.cpp:100] Creating Layer upsample2
I0726 10:00:03.369845 44270 net.cpp:434] upsample2 <- conv_decode3
I0726 10:00:03.369856 44270 net.cpp:434] upsample2 <- pool2_mask
I0726 10:00:03.369868 44270 net.cpp:408] upsample2 -> upsample2
I0726 10:00:03.369879 44270 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 10:00:03.369909 44270 net.cpp:150] Setting up upsample2
I0726 10:00:03.369921 44270 net.cpp:157] Top shape: 4 64 180 240 (11059200)
I0726 10:00:03.369930 44270 net.cpp:165] Memory required for data: 933150720
I0726 10:00:03.369938 44270 layer_factory.hpp:77] Creating layer conv_decode2
I0726 10:00:03.369956 44270 net.cpp:100] Creating Layer conv_decode2
I0726 10:00:03.369976 44270 net.cpp:434] conv_decode2 <- upsample2
I0726 10:00:03.369990 44270 net.cpp:408] conv_decode2 -> conv_decode2
I0726 10:00:03.377212 44270 net.cpp:150] Setting up conv_decode2
I0726 10:00:03.377229 44270 net.cpp:157] Top shape: 4 64 180 240 (11059200)
I0726 10:00:03.377238 44270 net.cpp:165] Memory required for data: 977387520
I0726 10:00:03.377248 44270 layer_factory.hpp:77] Creating layer conv_decode2_bn
I0726 10:00:03.377277 44270 net.cpp:100] Creating Layer conv_decode2_bn
I0726 10:00:03.377285 44270 net.cpp:434] conv_decode2_bn <- conv_decode2
I0726 10:00:03.377302 44270 net.cpp:395] conv_decode2_bn -> conv_decode2 (in-place)
I0726 10:00:03.377650 44270 net.cpp:150] Setting up conv_decode2_bn
I0726 10:00:03.377665 44270 net.cpp:157] Top shape: 4 64 180 240 (11059200)
I0726 10:00:03.377672 44270 net.cpp:165] Memory required for data: 1021624320
I0726 10:00:03.377683 44270 layer_factory.hpp:77] Creating layer upsample1
I0726 10:00:03.377694 44270 net.cpp:100] Creating Layer upsample1
I0726 10:00:03.377702 44270 net.cpp:434] upsample1 <- conv_decode2
I0726 10:00:03.377712 44270 net.cpp:434] upsample1 <- pool1_mask
I0726 10:00:03.377720 44270 net.cpp:408] upsample1 -> upsample1
I0726 10:00:03.377732 44270 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 10:00:03.377759 44270 net.cpp:150] Setting up upsample1
I0726 10:00:03.377773 44270 net.cpp:157] Top shape: 4 64 360 480 (44236800)
I0726 10:00:03.377779 44270 net.cpp:165] Memory required for data: 1198571520
I0726 10:00:03.377789 44270 layer_factory.hpp:77] Creating layer conv_decode1
I0726 10:00:03.377804 44270 net.cpp:100] Creating Layer conv_decode1
I0726 10:00:03.377813 44270 net.cpp:434] conv_decode1 <- upsample1
I0726 10:00:03.377827 44270 net.cpp:408] conv_decode1 -> conv_decode1
I0726 10:00:03.387590 44270 net.cpp:150] Setting up conv_decode1
I0726 10:00:03.387624 44270 net.cpp:157] Top shape: 4 64 360 480 (44236800)
I0726 10:00:03.387632 44270 net.cpp:165] Memory required for data: 1375518720
I0726 10:00:03.387645 44270 layer_factory.hpp:77] Creating layer conv_decode1_bn
I0726 10:00:03.387658 44270 net.cpp:100] Creating Layer conv_decode1_bn
I0726 10:00:03.387666 44270 net.cpp:434] conv_decode1_bn <- conv_decode1
I0726 10:00:03.387678 44270 net.cpp:395] conv_decode1_bn -> conv_decode1 (in-place)
I0726 10:00:03.390094 44270 net.cpp:150] Setting up conv_decode1_bn
I0726 10:00:03.390123 44270 net.cpp:157] Top shape: 4 64 360 480 (44236800)
I0726 10:00:03.390132 44270 net.cpp:165] Memory required for data: 1552465920
I0726 10:00:03.390144 44270 layer_factory.hpp:77] Creating layer conv_classifier
I0726 10:00:03.390161 44270 net.cpp:100] Creating Layer conv_classifier
I0726 10:00:03.390172 44270 net.cpp:434] conv_classifier <- conv_decode1
I0726 10:00:03.390184 44270 net.cpp:408] conv_classifier -> conv_classifier
I0726 10:00:03.390604 44270 net.cpp:150] Setting up conv_classifier
I0726 10:00:03.390622 44270 net.cpp:157] Top shape: 4 2 360 480 (1382400)
I0726 10:00:03.390652 44270 net.cpp:165] Memory required for data: 1557995520
I0726 10:00:03.390673 44270 layer_factory.hpp:77] Creating layer conv_classifier_conv_classifier_0_split
I0726 10:00:03.390693 44270 net.cpp:100] Creating Layer conv_classifier_conv_classifier_0_split
I0726 10:00:03.390707 44270 net.cpp:434] conv_classifier_conv_classifier_0_split <- conv_classifier
I0726 10:00:03.390722 44270 net.cpp:408] conv_classifier_conv_classifier_0_split -> conv_classifier_conv_classifier_0_split_0
I0726 10:00:03.390736 44270 net.cpp:408] conv_classifier_conv_classifier_0_split -> conv_classifier_conv_classifier_0_split_1
I0726 10:00:03.390787 44270 net.cpp:150] Setting up conv_classifier_conv_classifier_0_split
I0726 10:00:03.390800 44270 net.cpp:157] Top shape: 4 2 360 480 (1382400)
I0726 10:00:03.390813 44270 net.cpp:157] Top shape: 4 2 360 480 (1382400)
I0726 10:00:03.390820 44270 net.cpp:165] Memory required for data: 1569054720
I0726 10:00:03.390828 44270 layer_factory.hpp:77] Creating layer loss
I0726 10:00:03.390842 44270 net.cpp:100] Creating Layer loss
I0726 10:00:03.390849 44270 net.cpp:434] loss <- conv_classifier_conv_classifier_0_split_0
I0726 10:00:03.390859 44270 net.cpp:434] loss <- label_data_1_split_0
I0726 10:00:03.390872 44270 net.cpp:408] loss -> loss
I0726 10:00:03.390889 44270 layer_factory.hpp:77] Creating layer loss
I0726 10:00:03.395721 44270 net.cpp:150] Setting up loss
I0726 10:00:03.395763 44270 net.cpp:157] Top shape: (1)
I0726 10:00:03.395771 44270 net.cpp:160]     with loss weight 1
I0726 10:00:03.395787 44270 net.cpp:165] Memory required for data: 1569054724
I0726 10:00:03.395795 44270 layer_factory.hpp:77] Creating layer accuracy
I0726 10:00:03.395807 44270 net.cpp:100] Creating Layer accuracy
I0726 10:00:03.395817 44270 net.cpp:434] accuracy <- conv_classifier_conv_classifier_0_split_1
I0726 10:00:03.395825 44270 net.cpp:434] accuracy <- label_data_1_split_1
I0726 10:00:03.395838 44270 net.cpp:408] accuracy -> accuracy
I0726 10:00:03.395853 44270 net.cpp:408] accuracy -> per_class_accuracy
I0726 10:00:03.395901 44270 net.cpp:150] Setting up accuracy
I0726 10:00:03.395915 44270 net.cpp:157] Top shape: (1)
I0726 10:00:03.395923 44270 net.cpp:157] Top shape: 2 (2)
I0726 10:00:03.395932 44270 net.cpp:165] Memory required for data: 1569054736
I0726 10:00:03.395941 44270 net.cpp:228] accuracy does not need backward computation.
I0726 10:00:03.395951 44270 net.cpp:226] loss needs backward computation.
I0726 10:00:03.395958 44270 net.cpp:226] conv_classifier_conv_classifier_0_split needs backward computation.
I0726 10:00:03.395967 44270 net.cpp:226] conv_classifier needs backward computation.
I0726 10:00:03.395975 44270 net.cpp:226] conv_decode1_bn needs backward computation.
I0726 10:00:03.395984 44270 net.cpp:226] conv_decode1 needs backward computation.
I0726 10:00:03.395992 44270 net.cpp:226] upsample1 needs backward computation.
I0726 10:00:03.396001 44270 net.cpp:226] conv_decode2_bn needs backward computation.
I0726 10:00:03.396009 44270 net.cpp:226] conv_decode2 needs backward computation.
I0726 10:00:03.396018 44270 net.cpp:226] upsample2 needs backward computation.
I0726 10:00:03.396028 44270 net.cpp:226] conv_decode3_bn needs backward computation.
I0726 10:00:03.396036 44270 net.cpp:226] conv_decode3 needs backward computation.
I0726 10:00:03.396044 44270 net.cpp:226] upsample3 needs backward computation.
I0726 10:00:03.396059 44270 net.cpp:226] conv_decode4_bn needs backward computation.
I0726 10:00:03.396067 44270 net.cpp:226] conv_decode4 needs backward computation.
I0726 10:00:03.396077 44270 net.cpp:226] upsample4 needs backward computation.
I0726 10:00:03.396086 44270 net.cpp:226] pool4 needs backward computation.
I0726 10:00:03.396093 44270 net.cpp:226] relu4 needs backward computation.
I0726 10:00:03.396101 44270 net.cpp:226] conv4_bn needs backward computation.
I0726 10:00:03.396113 44270 net.cpp:226] conv4 needs backward computation.
I0726 10:00:03.396123 44270 net.cpp:226] pool3 needs backward computation.
I0726 10:00:03.396131 44270 net.cpp:226] relu3 needs backward computation.
I0726 10:00:03.396137 44270 net.cpp:226] conv3_bn needs backward computation.
I0726 10:00:03.396144 44270 net.cpp:226] conv3 needs backward computation.
I0726 10:00:03.396157 44270 net.cpp:226] pool2 needs backward computation.
I0726 10:00:03.396164 44270 net.cpp:226] relu2 needs backward computation.
I0726 10:00:03.396173 44270 net.cpp:226] conv2_bn needs backward computation.
I0726 10:00:03.396181 44270 net.cpp:226] conv2 needs backward computation.
I0726 10:00:03.396191 44270 net.cpp:226] pool1 needs backward computation.
I0726 10:00:03.396199 44270 net.cpp:226] relu1 needs backward computation.
I0726 10:00:03.396209 44270 net.cpp:226] conv1_bn needs backward computation.
I0726 10:00:03.396216 44270 net.cpp:226] conv1 needs backward computation.
I0726 10:00:03.396229 44270 net.cpp:228] norm does not need backward computation.
I0726 10:00:03.396237 44270 net.cpp:228] label_data_1_split does not need backward computation.
I0726 10:00:03.396245 44270 net.cpp:228] data does not need backward computation.
I0726 10:00:03.396256 44270 net.cpp:270] This network produces output accuracy
I0726 10:00:03.396265 44270 net.cpp:270] This network produces output loss
I0726 10:00:03.396273 44270 net.cpp:270] This network produces output per_class_accuracy
I0726 10:00:03.396306 44270 net.cpp:283] Network initialization done.
I0726 10:00:03.396466 44270 solver.cpp:60] Solver scaffolding done.
I0726 10:00:03.398058 44270 caffe.cpp:155] Finetuning from examples/segnet/segnet_train/premodel/segnet_basic_camvid.caffemodel
I0726 10:00:03.412091 44270 net.cpp:761] Ignoring source layer dense_softmax_inner_prod
I0726 10:00:03.422170 44270 net.cpp:761] Ignoring source layer dense_softmax_inner_prod
I0726 10:00:03.422246 44270 caffe.cpp:251] Starting Optimization
I0726 10:00:03.422257 44270 solver.cpp:279] Solving segnet
I0726 10:00:03.422266 44270 solver.cpp:280] Learning Rate Policy: step
I0726 10:00:03.858696 44270 solver.cpp:228] Iteration 0, loss = 3.6271
I0726 10:00:03.858791 44270 solver.cpp:244]     Train net output #0: accuracy = 0.489575
I0726 10:00:03.858819 44270 solver.cpp:244]     Train net output #1: loss = 3.6271 (* 1 = 3.6271 loss)
I0726 10:00:03.858835 44270 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.483003
I0726 10:00:03.858850 44270 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.523294
I0726 10:00:03.858881 44270 sgd_solver.cpp:106] Iteration 0, lr = 0.1
I0726 10:00:19.353210 44270 solver.cpp:228] Iteration 20, loss = 6.20503
I0726 10:00:19.353302 44270 solver.cpp:244]     Train net output #0: accuracy = 0.324366
I0726 10:00:19.353320 44270 solver.cpp:244]     Train net output #1: loss = 6.20503 (* 1 = 6.20503 loss)
I0726 10:00:19.353330 44270 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.198457
I0726 10:00:19.353349 44270 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.970452
I0726 10:00:19.353364 44270 sgd_solver.cpp:106] Iteration 20, lr = 0.1
I0726 10:00:34.854257 44270 solver.cpp:228] Iteration 40, loss = 0.899323
I0726 10:00:34.854416 44270 solver.cpp:244]     Train net output #0: accuracy = 0.82568
I0726 10:00:34.854437 44270 solver.cpp:244]     Train net output #1: loss = 0.899322 (* 1 = 0.899322 loss)
I0726 10:00:34.854449 44270 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.938344
I0726 10:00:34.854457 44270 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.247561
I0726 10:00:34.854482 44270 sgd_solver.cpp:106] Iteration 40, lr = 0.1
I0726 10:00:50.294370 44270 solver.cpp:228] Iteration 60, loss = 0.565684
I0726 10:00:50.294473 44270 solver.cpp:244]     Train net output #0: accuracy = 0.635356
I0726 10:00:50.294497 44270 solver.cpp:244]     Train net output #1: loss = 0.565683 (* 1 = 0.565683 loss)
I0726 10:00:50.294507 44270 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.590207
I0726 10:00:50.294515 44270 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.86703
I0726 10:00:50.294529 44270 sgd_solver.cpp:106] Iteration 60, lr = 0.1
I0726 10:01:05.780472 44270 solver.cpp:228] Iteration 80, loss = 0.459731
I0726 10:01:05.780577 44270 solver.cpp:244]     Train net output #0: accuracy = 0.787922
I0726 10:01:05.780599 44270 solver.cpp:244]     Train net output #1: loss = 0.45973 (* 1 = 0.45973 loss)
I0726 10:01:05.780609 44270 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.797811
I0726 10:01:05.780618 44270 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.737182
I0726 10:01:05.780632 44270 sgd_solver.cpp:106] Iteration 80, lr = 0.1
I0726 10:01:21.187819 44270 solver.cpp:228] Iteration 100, loss = 0.416073
I0726 10:01:21.187909 44270 solver.cpp:244]     Train net output #0: accuracy = 0.778683
I0726 10:01:21.187930 44270 solver.cpp:244]     Train net output #1: loss = 0.416072 (* 1 = 0.416072 loss)
I0726 10:01:21.187942 44270 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.769553
I0726 10:01:21.187950 44270 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.825533
I0726 10:01:21.187961 44270 sgd_solver.cpp:106] Iteration 100, lr = 0.1
I0726 10:01:36.710708 44270 solver.cpp:228] Iteration 120, loss = 0.376226
I0726 10:01:36.710948 44270 solver.cpp:244]     Train net output #0: accuracy = 0.819687
I0726 10:01:36.711001 44270 solver.cpp:244]     Train net output #1: loss = 0.376226 (* 1 = 0.376226 loss)
I0726 10:01:36.711016 44270 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.817278
I0726 10:01:36.711027 44270 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.832053
I0726 10:01:36.711043 44270 sgd_solver.cpp:106] Iteration 120, lr = 0.1
I0726 10:01:52.306157 44270 solver.cpp:228] Iteration 140, loss = 0.326957
I0726 10:01:52.306244 44270 solver.cpp:244]     Train net output #0: accuracy = 0.85101
I0726 10:01:52.306264 44270 solver.cpp:244]     Train net output #1: loss = 0.326956 (* 1 = 0.326956 loss)
I0726 10:01:52.306273 44270 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.848835
I0726 10:01:52.306282 44270 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.862169
I0726 10:01:52.306294 44270 sgd_solver.cpp:106] Iteration 140, lr = 0.1
I0726 10:02:04.663777 44270 solver.cpp:454] Snapshotting to binary proto file examples/segnet/segnet_train/segnet_basic/seg_iter_157.caffemodel
I0726 10:02:05.212604 44270 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/segnet/segnet_train/segnet_basic/seg_iter_157.solverstate
I0726 10:02:05.230129 44270 solver.cpp:301] Optimization stopped early.
I0726 10:02:05.230159 44270 caffe.cpp:254] Optimization Done.
I0726 10:02:07.835547 39651 caffe.cpp:217] Using GPUs 0
I0726 10:02:07.988867 39651 caffe.cpp:222] GPU 0: Graphics Device
I0726 10:02:11.626889 39651 solver.cpp:48] Initializing solver from parameters: 
test_iter: 1
test_interval: 10000000
base_lr: 0.01
display: 20
max_iter: 200000
lr_policy: "step"
gamma: 1
momentum: 0.9
weight_decay: 0.0005
stepsize: 15000
snapshot: 1000
snapshot_prefix: "examples/segnet/segnet_train/segnet_basic/seg"
solver_mode: GPU
device_id: 0
net: "examples/segnet/segnet_train.prototxt"
train_state {
  level: 0
  stage: ""
}
test_initialization: false
I0726 10:02:11.627125 39651 solver.cpp:91] Creating training net from net file: examples/segnet/segnet_train.prototxt
I0726 10:02:11.628448 39651 net.cpp:58] Initializing net from parameters: 
name: "segnet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "data"
  type: "DenseImageData"
  top: "data"
  top: "label"
  dense_image_data_param {
    source: "data/mydata/train.txt"
    batch_size: 2
    shuffle: true
  }
}
layer {
  name: "norm"
  type: "LRN"
  bottom: "data"
  top: "norm"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "norm"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv1_bn"
  type: "BN"
  bottom: "conv1"
  top: "conv1"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  top: "pool1_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv2_bn"
  type: "BN"
  bottom: "conv2"
  top: "conv2"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  top: "pool2_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv3_bn"
  type: "BN"
  bottom: "conv3"
  top: "conv3"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  top: "pool3_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv4_bn"
  type: "BN"
  bottom: "conv4"
  top: "conv4"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4"
  top: "pool4"
  top: "pool4_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "upsample4"
  type: "Upsample"
  bottom: "pool4"
  bottom: "pool4_mask"
  top: "upsample4"
  upsample_param {
    scale: 2
    pad_out_h: true
  }
}
layer {
  name: "conv_decode4"
  type: "Convolution"
  bottom: "upsample4"
  top: "conv_decode4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv_decode4_bn"
  type: "BN"
  bottom: "conv_decode4"
  top: "conv_decode4"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "upsample3"
  type: "Upsample"
  bottom: "conv_decode4"
  bottom: "pool3_mask"
  top: "upsample3"
  upsample_param {
    scale: 2
  }
}
layer {
  name: "conv_decode3"
  type: "Convolution"
  bottom: "upsample3"
  top: "conv_decode3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv_decode3_bn"
  type: "BN"
  bottom: "conv_decode3"
  top: "conv_decode3"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "upsample2"
  type: "Upsample"
  bottom: "conv_decode3"
  bottom: "pool2_mask"
  top: "upsample2"
  upsample_param {
    scale: 2
  }
}
layer {
  name: "conv_decode2"
  type: "Convolution"
  bottom: "upsample2"
  top: "conv_decode2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv_decode2_bn"
  type: "BN"
  bottom: "conv_decode2"
  top: "conv_decode2"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "upsample1"
  type: "Upsample"
  bottom: "conv_decode2"
  bottom: "pool1_mask"
  top: "upsample1"
  upsample_param {
    scale: 2
  }
}
layer {
  name: "conv_decode1"
  type: "Convolution"
  bottom: "upsample1"
  top: "conv_decode1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv_decode1_bn"
  type: "BN"
  bottom: "conv_decode1"
  top: "conv_decode1"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "conv_classifier"
  type: "Convolution"
  bottom: "conv_decode1"
  top: "conv_classifier"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 2
    kernel_size: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "conv_classifier"
  bottom: "label"
  top: "loss"
  loss_param {
    ignore_label: 2
    weight_by_label_freqs: true
    class_weighting: 0.59744
    class_weighting: 3.06568
  }
  softmax_param {
    engine: CAFFE
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "conv_classifier"
  bottom: "label"
  top: "accuracy"
  top: "per_class_accuracy"
}
I0726 10:02:11.628705 39651 layer_factory.hpp:77] Creating layer data
I0726 10:02:11.628773 39651 net.cpp:100] Creating Layer data
I0726 10:02:11.628787 39651 net.cpp:408] data -> data
I0726 10:02:11.628814 39651 net.cpp:408] data -> label
I0726 10:02:11.628840 39651 dense_image_data_layer.cpp:49] Opening file data/mydata/train.txt
I0726 10:02:11.628899 39651 dense_image_data_layer.cpp:59] Shuffling data
I0726 10:02:11.629262 39651 dense_image_data_layer.cpp:64] A total of 4 examples.
I0726 10:02:11.653313 39651 dense_image_data_layer.cpp:117] output data size: 2,3,360,480
I0726 10:02:11.658493 39651 net.cpp:150] Setting up data
I0726 10:02:11.658537 39651 net.cpp:157] Top shape: 2 3 360 480 (1036800)
I0726 10:02:11.658547 39651 net.cpp:157] Top shape: 2 1 360 480 (345600)
I0726 10:02:11.658553 39651 net.cpp:165] Memory required for data: 5529600
I0726 10:02:11.658577 39651 layer_factory.hpp:77] Creating layer label_data_1_split
I0726 10:02:11.658604 39651 net.cpp:100] Creating Layer label_data_1_split
I0726 10:02:11.658617 39651 net.cpp:434] label_data_1_split <- label
I0726 10:02:11.658635 39651 net.cpp:408] label_data_1_split -> label_data_1_split_0
I0726 10:02:11.658651 39651 net.cpp:408] label_data_1_split -> label_data_1_split_1
I0726 10:02:11.658799 39651 net.cpp:150] Setting up label_data_1_split
I0726 10:02:11.658815 39651 net.cpp:157] Top shape: 2 1 360 480 (345600)
I0726 10:02:11.658825 39651 net.cpp:157] Top shape: 2 1 360 480 (345600)
I0726 10:02:11.658831 39651 net.cpp:165] Memory required for data: 8294400
I0726 10:02:11.658838 39651 layer_factory.hpp:77] Creating layer norm
I0726 10:02:11.658854 39651 net.cpp:100] Creating Layer norm
I0726 10:02:11.658862 39651 net.cpp:434] norm <- data
I0726 10:02:11.658871 39651 net.cpp:408] norm -> norm
I0726 10:02:11.658917 39651 net.cpp:150] Setting up norm
I0726 10:02:11.658929 39651 net.cpp:157] Top shape: 2 3 360 480 (1036800)
I0726 10:02:11.658936 39651 net.cpp:165] Memory required for data: 12441600
I0726 10:02:11.658941 39651 layer_factory.hpp:77] Creating layer conv1
I0726 10:02:11.658962 39651 net.cpp:100] Creating Layer conv1
I0726 10:02:11.658970 39651 net.cpp:434] conv1 <- norm
I0726 10:02:11.658979 39651 net.cpp:408] conv1 -> conv1
I0726 10:02:11.663494 39651 net.cpp:150] Setting up conv1
I0726 10:02:11.663547 39651 net.cpp:157] Top shape: 2 64 360 480 (22118400)
I0726 10:02:11.663563 39651 net.cpp:165] Memory required for data: 100915200
I0726 10:02:11.663600 39651 layer_factory.hpp:77] Creating layer conv1_bn
I0726 10:02:11.663627 39651 net.cpp:100] Creating Layer conv1_bn
I0726 10:02:11.663642 39651 net.cpp:434] conv1_bn <- conv1
I0726 10:02:11.663661 39651 net.cpp:395] conv1_bn -> conv1 (in-place)
I0726 10:02:11.668346 39651 net.cpp:150] Setting up conv1_bn
I0726 10:02:11.668393 39651 net.cpp:157] Top shape: 2 64 360 480 (22118400)
I0726 10:02:11.668411 39651 net.cpp:165] Memory required for data: 189388800
I0726 10:02:11.668434 39651 layer_factory.hpp:77] Creating layer relu1
I0726 10:02:11.668453 39651 net.cpp:100] Creating Layer relu1
I0726 10:02:11.668468 39651 net.cpp:434] relu1 <- conv1
I0726 10:02:11.668484 39651 net.cpp:395] relu1 -> conv1 (in-place)
I0726 10:02:11.668505 39651 net.cpp:150] Setting up relu1
I0726 10:02:11.668520 39651 net.cpp:157] Top shape: 2 64 360 480 (22118400)
I0726 10:02:11.668534 39651 net.cpp:165] Memory required for data: 277862400
I0726 10:02:11.668545 39651 layer_factory.hpp:77] Creating layer pool1
I0726 10:02:11.668563 39651 net.cpp:100] Creating Layer pool1
I0726 10:02:11.668576 39651 net.cpp:434] pool1 <- conv1
I0726 10:02:11.668593 39651 net.cpp:408] pool1 -> pool1
I0726 10:02:11.668615 39651 net.cpp:408] pool1 -> pool1_mask
I0726 10:02:11.668712 39651 net.cpp:150] Setting up pool1
I0726 10:02:11.668733 39651 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:02:11.668748 39651 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:02:11.668761 39651 net.cpp:165] Memory required for data: 322099200
I0726 10:02:11.668774 39651 layer_factory.hpp:77] Creating layer conv2
I0726 10:02:11.668798 39651 net.cpp:100] Creating Layer conv2
I0726 10:02:11.668813 39651 net.cpp:434] conv2 <- pool1
I0726 10:02:11.668859 39651 net.cpp:408] conv2 -> conv2
I0726 10:02:11.684948 39651 net.cpp:150] Setting up conv2
I0726 10:02:11.685005 39651 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:02:11.685019 39651 net.cpp:165] Memory required for data: 344217600
I0726 10:02:11.685046 39651 layer_factory.hpp:77] Creating layer conv2_bn
I0726 10:02:11.685073 39651 net.cpp:100] Creating Layer conv2_bn
I0726 10:02:11.685086 39651 net.cpp:434] conv2_bn <- conv2
I0726 10:02:11.685106 39651 net.cpp:395] conv2_bn -> conv2 (in-place)
I0726 10:02:11.685518 39651 net.cpp:150] Setting up conv2_bn
I0726 10:02:11.685550 39651 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:02:11.685561 39651 net.cpp:165] Memory required for data: 366336000
I0726 10:02:11.685577 39651 layer_factory.hpp:77] Creating layer relu2
I0726 10:02:11.685606 39651 net.cpp:100] Creating Layer relu2
I0726 10:02:11.685618 39651 net.cpp:434] relu2 <- conv2
I0726 10:02:11.685631 39651 net.cpp:395] relu2 -> conv2 (in-place)
I0726 10:02:11.685647 39651 net.cpp:150] Setting up relu2
I0726 10:02:11.685662 39651 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:02:11.685672 39651 net.cpp:165] Memory required for data: 388454400
I0726 10:02:11.685683 39651 layer_factory.hpp:77] Creating layer pool2
I0726 10:02:11.685698 39651 net.cpp:100] Creating Layer pool2
I0726 10:02:11.685710 39651 net.cpp:434] pool2 <- conv2
I0726 10:02:11.685724 39651 net.cpp:408] pool2 -> pool2
I0726 10:02:11.685740 39651 net.cpp:408] pool2 -> pool2_mask
I0726 10:02:11.685799 39651 net.cpp:150] Setting up pool2
I0726 10:02:11.685817 39651 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:02:11.685832 39651 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:02:11.685842 39651 net.cpp:165] Memory required for data: 399513600
I0726 10:02:11.685854 39651 layer_factory.hpp:77] Creating layer conv3
I0726 10:02:11.685878 39651 net.cpp:100] Creating Layer conv3
I0726 10:02:11.685890 39651 net.cpp:434] conv3 <- pool2
I0726 10:02:11.685905 39651 net.cpp:408] conv3 -> conv3
I0726 10:02:11.696413 39651 net.cpp:150] Setting up conv3
I0726 10:02:11.696461 39651 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:02:11.696476 39651 net.cpp:165] Memory required for data: 405043200
I0726 10:02:11.696509 39651 layer_factory.hpp:77] Creating layer conv3_bn
I0726 10:02:11.696538 39651 net.cpp:100] Creating Layer conv3_bn
I0726 10:02:11.696558 39651 net.cpp:434] conv3_bn <- conv3
I0726 10:02:11.696581 39651 net.cpp:395] conv3_bn -> conv3 (in-place)
I0726 10:02:11.696966 39651 net.cpp:150] Setting up conv3_bn
I0726 10:02:11.696986 39651 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:02:11.696996 39651 net.cpp:165] Memory required for data: 410572800
I0726 10:02:11.697011 39651 layer_factory.hpp:77] Creating layer relu3
I0726 10:02:11.697026 39651 net.cpp:100] Creating Layer relu3
I0726 10:02:11.697036 39651 net.cpp:434] relu3 <- conv3
I0726 10:02:11.697047 39651 net.cpp:395] relu3 -> conv3 (in-place)
I0726 10:02:11.697063 39651 net.cpp:150] Setting up relu3
I0726 10:02:11.697077 39651 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:02:11.697087 39651 net.cpp:165] Memory required for data: 416102400
I0726 10:02:11.697098 39651 layer_factory.hpp:77] Creating layer pool3
I0726 10:02:11.697111 39651 net.cpp:100] Creating Layer pool3
I0726 10:02:11.697122 39651 net.cpp:434] pool3 <- conv3
I0726 10:02:11.697134 39651 net.cpp:408] pool3 -> pool3
I0726 10:02:11.697150 39651 net.cpp:408] pool3 -> pool3_mask
I0726 10:02:11.697206 39651 net.cpp:150] Setting up pool3
I0726 10:02:11.697226 39651 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:02:11.697237 39651 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:02:11.697247 39651 net.cpp:165] Memory required for data: 418867200
I0726 10:02:11.697257 39651 layer_factory.hpp:77] Creating layer conv4
I0726 10:02:11.697278 39651 net.cpp:100] Creating Layer conv4
I0726 10:02:11.697288 39651 net.cpp:434] conv4 <- pool3
I0726 10:02:11.697304 39651 net.cpp:408] conv4 -> conv4
I0726 10:02:11.711236 39651 net.cpp:150] Setting up conv4
I0726 10:02:11.711305 39651 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:02:11.711316 39651 net.cpp:165] Memory required for data: 420249600
I0726 10:02:11.711333 39651 layer_factory.hpp:77] Creating layer conv4_bn
I0726 10:02:11.711357 39651 net.cpp:100] Creating Layer conv4_bn
I0726 10:02:11.711369 39651 net.cpp:434] conv4_bn <- conv4
I0726 10:02:11.711383 39651 net.cpp:395] conv4_bn -> conv4 (in-place)
I0726 10:02:11.711675 39651 net.cpp:150] Setting up conv4_bn
I0726 10:02:11.711694 39651 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:02:11.711704 39651 net.cpp:165] Memory required for data: 421632000
I0726 10:02:11.711716 39651 layer_factory.hpp:77] Creating layer relu4
I0726 10:02:11.711730 39651 net.cpp:100] Creating Layer relu4
I0726 10:02:11.711740 39651 net.cpp:434] relu4 <- conv4
I0726 10:02:11.711760 39651 net.cpp:395] relu4 -> conv4 (in-place)
I0726 10:02:11.711774 39651 net.cpp:150] Setting up relu4
I0726 10:02:11.711787 39651 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:02:11.711797 39651 net.cpp:165] Memory required for data: 423014400
I0726 10:02:11.711807 39651 layer_factory.hpp:77] Creating layer pool4
I0726 10:02:11.711820 39651 net.cpp:100] Creating Layer pool4
I0726 10:02:11.711830 39651 net.cpp:434] pool4 <- conv4
I0726 10:02:11.711843 39651 net.cpp:408] pool4 -> pool4
I0726 10:02:11.711858 39651 net.cpp:408] pool4 -> pool4_mask
I0726 10:02:11.711916 39651 net.cpp:150] Setting up pool4
I0726 10:02:11.711932 39651 net.cpp:157] Top shape: 2 64 23 30 (88320)
I0726 10:02:11.711944 39651 net.cpp:157] Top shape: 2 64 23 30 (88320)
I0726 10:02:11.711953 39651 net.cpp:165] Memory required for data: 423720960
I0726 10:02:11.711963 39651 layer_factory.hpp:77] Creating layer upsample4
I0726 10:02:11.711988 39651 net.cpp:100] Creating Layer upsample4
I0726 10:02:11.711999 39651 net.cpp:434] upsample4 <- pool4
I0726 10:02:11.712010 39651 net.cpp:434] upsample4 <- pool4_mask
I0726 10:02:11.712023 39651 net.cpp:408] upsample4 -> upsample4
I0726 10:02:11.712044 39651 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 10:02:11.712077 39651 net.cpp:150] Setting up upsample4
I0726 10:02:11.712092 39651 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:02:11.712102 39651 net.cpp:165] Memory required for data: 425103360
I0726 10:02:11.712112 39651 layer_factory.hpp:77] Creating layer conv_decode4
I0726 10:02:11.712132 39651 net.cpp:100] Creating Layer conv_decode4
I0726 10:02:11.712144 39651 net.cpp:434] conv_decode4 <- upsample4
I0726 10:02:11.712158 39651 net.cpp:408] conv_decode4 -> conv_decode4
I0726 10:02:11.721264 39651 net.cpp:150] Setting up conv_decode4
I0726 10:02:11.721290 39651 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:02:11.721300 39651 net.cpp:165] Memory required for data: 426485760
I0726 10:02:11.721320 39651 layer_factory.hpp:77] Creating layer conv_decode4_bn
I0726 10:02:11.721335 39651 net.cpp:100] Creating Layer conv_decode4_bn
I0726 10:02:11.721346 39651 net.cpp:434] conv_decode4_bn <- conv_decode4
I0726 10:02:11.721357 39651 net.cpp:395] conv_decode4_bn -> conv_decode4 (in-place)
I0726 10:02:11.721637 39651 net.cpp:150] Setting up conv_decode4_bn
I0726 10:02:11.721654 39651 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:02:11.721663 39651 net.cpp:165] Memory required for data: 427868160
I0726 10:02:11.721675 39651 layer_factory.hpp:77] Creating layer upsample3
I0726 10:02:11.721688 39651 net.cpp:100] Creating Layer upsample3
I0726 10:02:11.721696 39651 net.cpp:434] upsample3 <- conv_decode4
I0726 10:02:11.721706 39651 net.cpp:434] upsample3 <- pool3_mask
I0726 10:02:11.721719 39651 net.cpp:408] upsample3 -> upsample3
I0726 10:02:11.721731 39651 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 10:02:11.721763 39651 net.cpp:150] Setting up upsample3
I0726 10:02:11.721777 39651 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:02:11.721786 39651 net.cpp:165] Memory required for data: 433397760
I0726 10:02:11.721810 39651 layer_factory.hpp:77] Creating layer conv_decode3
I0726 10:02:11.721828 39651 net.cpp:100] Creating Layer conv_decode3
I0726 10:02:11.721839 39651 net.cpp:434] conv_decode3 <- upsample3
I0726 10:02:11.721853 39651 net.cpp:408] conv_decode3 -> conv_decode3
I0726 10:02:11.732635 39651 net.cpp:150] Setting up conv_decode3
I0726 10:02:11.732681 39651 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:02:11.732691 39651 net.cpp:165] Memory required for data: 438927360
I0726 10:02:11.732704 39651 layer_factory.hpp:77] Creating layer conv_decode3_bn
I0726 10:02:11.732720 39651 net.cpp:100] Creating Layer conv_decode3_bn
I0726 10:02:11.732730 39651 net.cpp:434] conv_decode3_bn <- conv_decode3
I0726 10:02:11.732743 39651 net.cpp:395] conv_decode3_bn -> conv_decode3 (in-place)
I0726 10:02:11.733034 39651 net.cpp:150] Setting up conv_decode3_bn
I0726 10:02:11.733052 39651 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:02:11.733059 39651 net.cpp:165] Memory required for data: 444456960
I0726 10:02:11.733072 39651 layer_factory.hpp:77] Creating layer upsample2
I0726 10:02:11.733084 39651 net.cpp:100] Creating Layer upsample2
I0726 10:02:11.733093 39651 net.cpp:434] upsample2 <- conv_decode3
I0726 10:02:11.733103 39651 net.cpp:434] upsample2 <- pool2_mask
I0726 10:02:11.733114 39651 net.cpp:408] upsample2 -> upsample2
I0726 10:02:11.733126 39651 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 10:02:11.733155 39651 net.cpp:150] Setting up upsample2
I0726 10:02:11.733170 39651 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:02:11.733176 39651 net.cpp:165] Memory required for data: 466575360
I0726 10:02:11.733186 39651 layer_factory.hpp:77] Creating layer conv_decode2
I0726 10:02:11.733203 39651 net.cpp:100] Creating Layer conv_decode2
I0726 10:02:11.733213 39651 net.cpp:434] conv_decode2 <- upsample2
I0726 10:02:11.733225 39651 net.cpp:408] conv_decode2 -> conv_decode2
I0726 10:02:11.741592 39651 net.cpp:150] Setting up conv_decode2
I0726 10:02:11.741617 39651 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:02:11.741626 39651 net.cpp:165] Memory required for data: 488693760
I0726 10:02:11.741638 39651 layer_factory.hpp:77] Creating layer conv_decode2_bn
I0726 10:02:11.741652 39651 net.cpp:100] Creating Layer conv_decode2_bn
I0726 10:02:11.741660 39651 net.cpp:434] conv_decode2_bn <- conv_decode2
I0726 10:02:11.741672 39651 net.cpp:395] conv_decode2_bn -> conv_decode2 (in-place)
I0726 10:02:11.742002 39651 net.cpp:150] Setting up conv_decode2_bn
I0726 10:02:11.742017 39651 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:02:11.742025 39651 net.cpp:165] Memory required for data: 510812160
I0726 10:02:11.742036 39651 layer_factory.hpp:77] Creating layer upsample1
I0726 10:02:11.742048 39651 net.cpp:100] Creating Layer upsample1
I0726 10:02:11.742055 39651 net.cpp:434] upsample1 <- conv_decode2
I0726 10:02:11.742065 39651 net.cpp:434] upsample1 <- pool1_mask
I0726 10:02:11.742075 39651 net.cpp:408] upsample1 -> upsample1
I0726 10:02:11.742087 39651 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 10:02:11.742117 39651 net.cpp:150] Setting up upsample1
I0726 10:02:11.742130 39651 net.cpp:157] Top shape: 2 64 360 480 (22118400)
I0726 10:02:11.742137 39651 net.cpp:165] Memory required for data: 599285760
I0726 10:02:11.742146 39651 layer_factory.hpp:77] Creating layer conv_decode1
I0726 10:02:11.742164 39651 net.cpp:100] Creating Layer conv_decode1
I0726 10:02:11.742174 39651 net.cpp:434] conv_decode1 <- upsample1
I0726 10:02:11.742187 39651 net.cpp:408] conv_decode1 -> conv_decode1
I0726 10:02:11.752280 39651 net.cpp:150] Setting up conv_decode1
I0726 10:02:11.752313 39651 net.cpp:157] Top shape: 2 64 360 480 (22118400)
I0726 10:02:11.752322 39651 net.cpp:165] Memory required for data: 687759360
I0726 10:02:11.752334 39651 layer_factory.hpp:77] Creating layer conv_decode1_bn
I0726 10:02:11.752367 39651 net.cpp:100] Creating Layer conv_decode1_bn
I0726 10:02:11.752377 39651 net.cpp:434] conv_decode1_bn <- conv_decode1
I0726 10:02:11.752388 39651 net.cpp:395] conv_decode1_bn -> conv_decode1 (in-place)
I0726 10:02:11.756269 39651 net.cpp:150] Setting up conv_decode1_bn
I0726 10:02:11.756302 39651 net.cpp:157] Top shape: 2 64 360 480 (22118400)
I0726 10:02:11.756312 39651 net.cpp:165] Memory required for data: 776232960
I0726 10:02:11.756325 39651 layer_factory.hpp:77] Creating layer conv_classifier
I0726 10:02:11.756343 39651 net.cpp:100] Creating Layer conv_classifier
I0726 10:02:11.756352 39651 net.cpp:434] conv_classifier <- conv_decode1
I0726 10:02:11.756366 39651 net.cpp:408] conv_classifier -> conv_classifier
I0726 10:02:11.756783 39651 net.cpp:150] Setting up conv_classifier
I0726 10:02:11.756800 39651 net.cpp:157] Top shape: 2 2 360 480 (691200)
I0726 10:02:11.756808 39651 net.cpp:165] Memory required for data: 778997760
I0726 10:02:11.756829 39651 layer_factory.hpp:77] Creating layer conv_classifier_conv_classifier_0_split
I0726 10:02:11.756847 39651 net.cpp:100] Creating Layer conv_classifier_conv_classifier_0_split
I0726 10:02:11.756855 39651 net.cpp:434] conv_classifier_conv_classifier_0_split <- conv_classifier
I0726 10:02:11.756866 39651 net.cpp:408] conv_classifier_conv_classifier_0_split -> conv_classifier_conv_classifier_0_split_0
I0726 10:02:11.756882 39651 net.cpp:408] conv_classifier_conv_classifier_0_split -> conv_classifier_conv_classifier_0_split_1
I0726 10:02:11.756930 39651 net.cpp:150] Setting up conv_classifier_conv_classifier_0_split
I0726 10:02:11.756943 39651 net.cpp:157] Top shape: 2 2 360 480 (691200)
I0726 10:02:11.756952 39651 net.cpp:157] Top shape: 2 2 360 480 (691200)
I0726 10:02:11.756959 39651 net.cpp:165] Memory required for data: 784527360
I0726 10:02:11.756968 39651 layer_factory.hpp:77] Creating layer loss
I0726 10:02:11.756983 39651 net.cpp:100] Creating Layer loss
I0726 10:02:11.756992 39651 net.cpp:434] loss <- conv_classifier_conv_classifier_0_split_0
I0726 10:02:11.757001 39651 net.cpp:434] loss <- label_data_1_split_0
I0726 10:02:11.757014 39651 net.cpp:408] loss -> loss
I0726 10:02:11.757035 39651 layer_factory.hpp:77] Creating layer loss
I0726 10:02:11.760042 39651 net.cpp:150] Setting up loss
I0726 10:02:11.760069 39651 net.cpp:157] Top shape: (1)
I0726 10:02:11.760077 39651 net.cpp:160]     with loss weight 1
I0726 10:02:11.760109 39651 net.cpp:165] Memory required for data: 784527364
I0726 10:02:11.760118 39651 layer_factory.hpp:77] Creating layer accuracy
I0726 10:02:11.760130 39651 net.cpp:100] Creating Layer accuracy
I0726 10:02:11.760140 39651 net.cpp:434] accuracy <- conv_classifier_conv_classifier_0_split_1
I0726 10:02:11.760152 39651 net.cpp:434] accuracy <- label_data_1_split_1
I0726 10:02:11.760164 39651 net.cpp:408] accuracy -> accuracy
I0726 10:02:11.760177 39651 net.cpp:408] accuracy -> per_class_accuracy
I0726 10:02:11.760226 39651 net.cpp:150] Setting up accuracy
I0726 10:02:11.760237 39651 net.cpp:157] Top shape: (1)
I0726 10:02:11.760246 39651 net.cpp:157] Top shape: 2 (2)
I0726 10:02:11.760254 39651 net.cpp:165] Memory required for data: 784527376
I0726 10:02:11.760262 39651 net.cpp:228] accuracy does not need backward computation.
I0726 10:02:11.760272 39651 net.cpp:226] loss needs backward computation.
I0726 10:02:11.760279 39651 net.cpp:226] conv_classifier_conv_classifier_0_split needs backward computation.
I0726 10:02:11.760288 39651 net.cpp:226] conv_classifier needs backward computation.
I0726 10:02:11.760295 39651 net.cpp:226] conv_decode1_bn needs backward computation.
I0726 10:02:11.760304 39651 net.cpp:226] conv_decode1 needs backward computation.
I0726 10:02:11.760313 39651 net.cpp:226] upsample1 needs backward computation.
I0726 10:02:11.760321 39651 net.cpp:226] conv_decode2_bn needs backward computation.
I0726 10:02:11.760329 39651 net.cpp:226] conv_decode2 needs backward computation.
I0726 10:02:11.760337 39651 net.cpp:226] upsample2 needs backward computation.
I0726 10:02:11.760361 39651 net.cpp:226] conv_decode3_bn needs backward computation.
I0726 10:02:11.760368 39651 net.cpp:226] conv_decode3 needs backward computation.
I0726 10:02:11.760378 39651 net.cpp:226] upsample3 needs backward computation.
I0726 10:02:11.760386 39651 net.cpp:226] conv_decode4_bn needs backward computation.
I0726 10:02:11.760396 39651 net.cpp:226] conv_decode4 needs backward computation.
I0726 10:02:11.760402 39651 net.cpp:226] upsample4 needs backward computation.
I0726 10:02:11.760411 39651 net.cpp:226] pool4 needs backward computation.
I0726 10:02:11.760418 39651 net.cpp:226] relu4 needs backward computation.
I0726 10:02:11.760427 39651 net.cpp:226] conv4_bn needs backward computation.
I0726 10:02:11.760434 39651 net.cpp:226] conv4 needs backward computation.
I0726 10:02:11.760447 39651 net.cpp:226] pool3 needs backward computation.
I0726 10:02:11.760455 39651 net.cpp:226] relu3 needs backward computation.
I0726 10:02:11.760465 39651 net.cpp:226] conv3_bn needs backward computation.
I0726 10:02:11.760471 39651 net.cpp:226] conv3 needs backward computation.
I0726 10:02:11.760480 39651 net.cpp:226] pool2 needs backward computation.
I0726 10:02:11.760488 39651 net.cpp:226] relu2 needs backward computation.
I0726 10:02:11.760494 39651 net.cpp:226] conv2_bn needs backward computation.
I0726 10:02:11.760504 39651 net.cpp:226] conv2 needs backward computation.
I0726 10:02:11.760510 39651 net.cpp:226] pool1 needs backward computation.
I0726 10:02:11.760519 39651 net.cpp:226] relu1 needs backward computation.
I0726 10:02:11.760526 39651 net.cpp:226] conv1_bn needs backward computation.
I0726 10:02:11.760535 39651 net.cpp:226] conv1 needs backward computation.
I0726 10:02:11.760543 39651 net.cpp:228] norm does not need backward computation.
I0726 10:02:11.760553 39651 net.cpp:228] label_data_1_split does not need backward computation.
I0726 10:02:11.760561 39651 net.cpp:228] data does not need backward computation.
I0726 10:02:11.760571 39651 net.cpp:270] This network produces output accuracy
I0726 10:02:11.760578 39651 net.cpp:270] This network produces output loss
I0726 10:02:11.760587 39651 net.cpp:270] This network produces output per_class_accuracy
I0726 10:02:11.760622 39651 net.cpp:283] Network initialization done.
I0726 10:02:11.761759 39651 solver.cpp:181] Creating test net (#0) specified by net file: examples/segnet/segnet_train.prototxt
I0726 10:02:11.762115 39651 net.cpp:58] Initializing net from parameters: 
name: "segnet"
state {
  phase: TEST
}
layer {
  name: "data"
  type: "DenseImageData"
  top: "data"
  top: "label"
  dense_image_data_param {
    source: "data/mydata/train.txt"
    batch_size: 2
    shuffle: true
  }
}
layer {
  name: "norm"
  type: "LRN"
  bottom: "data"
  top: "norm"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "norm"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv1_bn"
  type: "BN"
  bottom: "conv1"
  top: "conv1"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  top: "pool1_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv2_bn"
  type: "BN"
  bottom: "conv2"
  top: "conv2"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  top: "pool2_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv3_bn"
  type: "BN"
  bottom: "conv3"
  top: "conv3"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  top: "pool3_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv4_bn"
  type: "BN"
  bottom: "conv4"
  top: "conv4"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4"
  top: "pool4"
  top: "pool4_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "upsample4"
  type: "Upsample"
  bottom: "pool4"
  bottom: "pool4_mask"
  top: "upsample4"
  upsample_param {
    scale: 2
    pad_out_h: true
  }
}
layer {
  name: "conv_decode4"
  type: "Convolution"
  bottom: "upsample4"
  top: "conv_decode4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv_decode4_bn"
  type: "BN"
  bottom: "conv_decode4"
  top: "conv_decode4"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "upsample3"
  type: "Upsample"
  bottom: "conv_decode4"
  bottom: "pool3_mask"
  top: "upsample3"
  upsample_param {
    scale: 2
  }
}
layer {
  name: "conv_decode3"
  type: "Convolution"
  bottom: "upsample3"
  top: "conv_decode3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv_decode3_bn"
  type: "BN"
  bottom: "conv_decode3"
  top: "conv_decode3"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "upsample2"
  type: "Upsample"
  bottom: "conv_decode3"
  bottom: "pool2_mask"
  top: "upsample2"
  upsample_param {
    scale: 2
  }
}
layer {
  name: "conv_decode2"
  type: "Convolution"
  bottom: "upsample2"
  top: "conv_decode2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv_decode2_bn"
  type: "BN"
  bottom: "conv_decode2"
  top: "conv_decode2"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "upsample1"
  type: "Upsample"
  bottom: "conv_decode2"
  bottom: "pool1_mask"
  top: "upsample1"
  upsample_param {
    scale: 2
  }
}
layer {
  name: "conv_decode1"
  type: "Convolution"
  bottom: "upsample1"
  top: "conv_decode1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv_decode1_bn"
  type: "BN"
  bottom: "conv_decode1"
  top: "conv_decode1"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "conv_classifier"
  type: "Convolution"
  bottom: "conv_decode1"
  top: "conv_classifier"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 2
    kernel_size: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "conv_classifier"
  bottom: "label"
  top: "loss"
  loss_param {
    ignore_label: 2
    weight_by_label_freqs: true
    class_weighting: 0.59744
    class_weighting: 3.06568
  }
  softmax_param {
    engine: CAFFE
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "conv_classifier"
  bottom: "label"
  top: "accuracy"
  top: "per_class_accuracy"
}
I0726 10:02:11.762316 39651 layer_factory.hpp:77] Creating layer data
I0726 10:02:11.762336 39651 net.cpp:100] Creating Layer data
I0726 10:02:11.762346 39651 net.cpp:408] data -> data
I0726 10:02:11.762357 39651 net.cpp:408] data -> label
I0726 10:02:11.762372 39651 dense_image_data_layer.cpp:49] Opening file data/mydata/train.txt
I0726 10:02:11.762404 39651 dense_image_data_layer.cpp:59] Shuffling data
I0726 10:02:11.762418 39651 dense_image_data_layer.cpp:64] A total of 4 examples.
I0726 10:02:11.768504 39651 dense_image_data_layer.cpp:117] output data size: 2,3,360,480
I0726 10:02:11.907260 39651 net.cpp:150] Setting up data
I0726 10:02:11.907328 39651 net.cpp:157] Top shape: 2 3 360 480 (1036800)
I0726 10:02:11.907341 39651 net.cpp:157] Top shape: 2 1 360 480 (345600)
I0726 10:02:11.907347 39651 net.cpp:165] Memory required for data: 5529600
I0726 10:02:11.907359 39651 layer_factory.hpp:77] Creating layer label_data_1_split
I0726 10:02:11.907382 39651 net.cpp:100] Creating Layer label_data_1_split
I0726 10:02:11.907392 39651 net.cpp:434] label_data_1_split <- label
I0726 10:02:11.907405 39651 net.cpp:408] label_data_1_split -> label_data_1_split_0
I0726 10:02:11.907445 39651 net.cpp:408] label_data_1_split -> label_data_1_split_1
I0726 10:02:11.907562 39651 net.cpp:150] Setting up label_data_1_split
I0726 10:02:11.907575 39651 net.cpp:157] Top shape: 2 1 360 480 (345600)
I0726 10:02:11.907583 39651 net.cpp:157] Top shape: 2 1 360 480 (345600)
I0726 10:02:11.907599 39651 net.cpp:165] Memory required for data: 8294400
I0726 10:02:11.907608 39651 layer_factory.hpp:77] Creating layer norm
I0726 10:02:11.907624 39651 net.cpp:100] Creating Layer norm
I0726 10:02:11.907631 39651 net.cpp:434] norm <- data
I0726 10:02:11.907642 39651 net.cpp:408] norm -> norm
I0726 10:02:11.907688 39651 net.cpp:150] Setting up norm
I0726 10:02:11.907701 39651 net.cpp:157] Top shape: 2 3 360 480 (1036800)
I0726 10:02:11.907708 39651 net.cpp:165] Memory required for data: 12441600
I0726 10:02:11.907716 39651 layer_factory.hpp:77] Creating layer conv1
I0726 10:02:11.907735 39651 net.cpp:100] Creating Layer conv1
I0726 10:02:11.907743 39651 net.cpp:434] conv1 <- norm
I0726 10:02:11.907754 39651 net.cpp:408] conv1 -> conv1
I0726 10:02:11.908561 39651 net.cpp:150] Setting up conv1
I0726 10:02:11.908578 39651 net.cpp:157] Top shape: 2 64 360 480 (22118400)
I0726 10:02:11.908586 39651 net.cpp:165] Memory required for data: 100915200
I0726 10:02:11.908623 39651 layer_factory.hpp:77] Creating layer conv1_bn
I0726 10:02:11.908641 39651 net.cpp:100] Creating Layer conv1_bn
I0726 10:02:11.908650 39651 net.cpp:434] conv1_bn <- conv1
I0726 10:02:11.908659 39651 net.cpp:395] conv1_bn -> conv1 (in-place)
I0726 10:02:11.913835 39651 net.cpp:150] Setting up conv1_bn
I0726 10:02:11.913877 39651 net.cpp:157] Top shape: 2 64 360 480 (22118400)
I0726 10:02:11.913885 39651 net.cpp:165] Memory required for data: 189388800
I0726 10:02:11.913908 39651 layer_factory.hpp:77] Creating layer relu1
I0726 10:02:11.913926 39651 net.cpp:100] Creating Layer relu1
I0726 10:02:11.913936 39651 net.cpp:434] relu1 <- conv1
I0726 10:02:11.913947 39651 net.cpp:395] relu1 -> conv1 (in-place)
I0726 10:02:11.913960 39651 net.cpp:150] Setting up relu1
I0726 10:02:11.913980 39651 net.cpp:157] Top shape: 2 64 360 480 (22118400)
I0726 10:02:11.913987 39651 net.cpp:165] Memory required for data: 277862400
I0726 10:02:11.913996 39651 layer_factory.hpp:77] Creating layer pool1
I0726 10:02:11.914011 39651 net.cpp:100] Creating Layer pool1
I0726 10:02:11.914018 39651 net.cpp:434] pool1 <- conv1
I0726 10:02:11.914028 39651 net.cpp:408] pool1 -> pool1
I0726 10:02:11.914041 39651 net.cpp:408] pool1 -> pool1_mask
I0726 10:02:11.914095 39651 net.cpp:150] Setting up pool1
I0726 10:02:11.914108 39651 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:02:11.914116 39651 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:02:11.914124 39651 net.cpp:165] Memory required for data: 322099200
I0726 10:02:11.914132 39651 layer_factory.hpp:77] Creating layer conv2
I0726 10:02:11.914153 39651 net.cpp:100] Creating Layer conv2
I0726 10:02:11.914161 39651 net.cpp:434] conv2 <- pool1
I0726 10:02:11.914175 39651 net.cpp:408] conv2 -> conv2
I0726 10:02:11.922314 39651 net.cpp:150] Setting up conv2
I0726 10:02:11.922379 39651 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:02:11.922402 39651 net.cpp:165] Memory required for data: 344217600
I0726 10:02:11.922457 39651 layer_factory.hpp:77] Creating layer conv2_bn
I0726 10:02:11.922505 39651 net.cpp:100] Creating Layer conv2_bn
I0726 10:02:11.922535 39651 net.cpp:434] conv2_bn <- conv2
I0726 10:02:11.922567 39651 net.cpp:395] conv2_bn -> conv2 (in-place)
I0726 10:02:11.923175 39651 net.cpp:150] Setting up conv2_bn
I0726 10:02:11.923218 39651 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:02:11.923243 39651 net.cpp:165] Memory required for data: 366336000
I0726 10:02:11.923279 39651 layer_factory.hpp:77] Creating layer relu2
I0726 10:02:11.923318 39651 net.cpp:100] Creating Layer relu2
I0726 10:02:11.923343 39651 net.cpp:434] relu2 <- conv2
I0726 10:02:11.923380 39651 net.cpp:395] relu2 -> conv2 (in-place)
I0726 10:02:11.923415 39651 net.cpp:150] Setting up relu2
I0726 10:02:11.923450 39651 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:02:11.923475 39651 net.cpp:165] Memory required for data: 388454400
I0726 10:02:11.923499 39651 layer_factory.hpp:77] Creating layer pool2
I0726 10:02:11.923537 39651 net.cpp:100] Creating Layer pool2
I0726 10:02:11.923557 39651 net.cpp:434] pool2 <- conv2
I0726 10:02:11.923601 39651 net.cpp:408] pool2 -> pool2
I0726 10:02:11.923645 39651 net.cpp:408] pool2 -> pool2_mask
I0726 10:02:11.923748 39651 net.cpp:150] Setting up pool2
I0726 10:02:11.923782 39651 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:02:11.923816 39651 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:02:11.923838 39651 net.cpp:165] Memory required for data: 399513600
I0726 10:02:11.923858 39651 layer_factory.hpp:77] Creating layer conv3
I0726 10:02:11.923907 39651 net.cpp:100] Creating Layer conv3
I0726 10:02:11.923938 39651 net.cpp:434] conv3 <- pool2
I0726 10:02:11.923971 39651 net.cpp:408] conv3 -> conv3
I0726 10:02:11.933367 39651 net.cpp:150] Setting up conv3
I0726 10:02:11.933432 39651 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:02:11.933441 39651 net.cpp:165] Memory required for data: 405043200
I0726 10:02:11.933465 39651 layer_factory.hpp:77] Creating layer conv3_bn
I0726 10:02:11.933486 39651 net.cpp:100] Creating Layer conv3_bn
I0726 10:02:11.933527 39651 net.cpp:434] conv3_bn <- conv3
I0726 10:02:11.933543 39651 net.cpp:395] conv3_bn -> conv3 (in-place)
I0726 10:02:11.933820 39651 net.cpp:150] Setting up conv3_bn
I0726 10:02:11.933840 39651 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:02:11.933846 39651 net.cpp:165] Memory required for data: 410572800
I0726 10:02:11.933857 39651 layer_factory.hpp:77] Creating layer relu3
I0726 10:02:11.933871 39651 net.cpp:100] Creating Layer relu3
I0726 10:02:11.933879 39651 net.cpp:434] relu3 <- conv3
I0726 10:02:11.933894 39651 net.cpp:395] relu3 -> conv3 (in-place)
I0726 10:02:11.933905 39651 net.cpp:150] Setting up relu3
I0726 10:02:11.933917 39651 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:02:11.933933 39651 net.cpp:165] Memory required for data: 416102400
I0726 10:02:11.933941 39651 layer_factory.hpp:77] Creating layer pool3
I0726 10:02:11.933954 39651 net.cpp:100] Creating Layer pool3
I0726 10:02:11.933964 39651 net.cpp:434] pool3 <- conv3
I0726 10:02:11.933972 39651 net.cpp:408] pool3 -> pool3
I0726 10:02:11.933985 39651 net.cpp:408] pool3 -> pool3_mask
I0726 10:02:11.934038 39651 net.cpp:150] Setting up pool3
I0726 10:02:11.934052 39651 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:02:11.934062 39651 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:02:11.934068 39651 net.cpp:165] Memory required for data: 418867200
I0726 10:02:11.934077 39651 layer_factory.hpp:77] Creating layer conv4
I0726 10:02:11.934095 39651 net.cpp:100] Creating Layer conv4
I0726 10:02:11.934104 39651 net.cpp:434] conv4 <- pool3
I0726 10:02:11.934116 39651 net.cpp:408] conv4 -> conv4
I0726 10:02:11.941252 39651 net.cpp:150] Setting up conv4
I0726 10:02:11.941289 39651 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:02:11.941296 39651 net.cpp:165] Memory required for data: 420249600
I0726 10:02:11.941309 39651 layer_factory.hpp:77] Creating layer conv4_bn
I0726 10:02:11.941330 39651 net.cpp:100] Creating Layer conv4_bn
I0726 10:02:11.941339 39651 net.cpp:434] conv4_bn <- conv4
I0726 10:02:11.941350 39651 net.cpp:395] conv4_bn -> conv4 (in-place)
I0726 10:02:11.941593 39651 net.cpp:150] Setting up conv4_bn
I0726 10:02:11.941608 39651 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:02:11.941619 39651 net.cpp:165] Memory required for data: 421632000
I0726 10:02:11.941629 39651 layer_factory.hpp:77] Creating layer relu4
I0726 10:02:11.941653 39651 net.cpp:100] Creating Layer relu4
I0726 10:02:11.941668 39651 net.cpp:434] relu4 <- conv4
I0726 10:02:11.941678 39651 net.cpp:395] relu4 -> conv4 (in-place)
I0726 10:02:11.941695 39651 net.cpp:150] Setting up relu4
I0726 10:02:11.941715 39651 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:02:11.941721 39651 net.cpp:165] Memory required for data: 423014400
I0726 10:02:11.941730 39651 layer_factory.hpp:77] Creating layer pool4
I0726 10:02:11.941740 39651 net.cpp:100] Creating Layer pool4
I0726 10:02:11.941748 39651 net.cpp:434] pool4 <- conv4
I0726 10:02:11.941759 39651 net.cpp:408] pool4 -> pool4
I0726 10:02:11.941772 39651 net.cpp:408] pool4 -> pool4_mask
I0726 10:02:11.941823 39651 net.cpp:150] Setting up pool4
I0726 10:02:11.941835 39651 net.cpp:157] Top shape: 2 64 23 30 (88320)
I0726 10:02:11.941844 39651 net.cpp:157] Top shape: 2 64 23 30 (88320)
I0726 10:02:11.941853 39651 net.cpp:165] Memory required for data: 423720960
I0726 10:02:11.941860 39651 layer_factory.hpp:77] Creating layer upsample4
I0726 10:02:11.941876 39651 net.cpp:100] Creating Layer upsample4
I0726 10:02:11.941890 39651 net.cpp:434] upsample4 <- pool4
I0726 10:02:11.941900 39651 net.cpp:434] upsample4 <- pool4_mask
I0726 10:02:11.941912 39651 net.cpp:408] upsample4 -> upsample4
I0726 10:02:11.941925 39651 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 10:02:11.941952 39651 net.cpp:150] Setting up upsample4
I0726 10:02:11.941963 39651 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:02:11.941970 39651 net.cpp:165] Memory required for data: 425103360
I0726 10:02:11.941996 39651 layer_factory.hpp:77] Creating layer conv_decode4
I0726 10:02:11.942013 39651 net.cpp:100] Creating Layer conv_decode4
I0726 10:02:11.942023 39651 net.cpp:434] conv_decode4 <- upsample4
I0726 10:02:11.942034 39651 net.cpp:408] conv_decode4 -> conv_decode4
I0726 10:02:11.951048 39651 net.cpp:150] Setting up conv_decode4
I0726 10:02:11.951077 39651 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:02:11.951086 39651 net.cpp:165] Memory required for data: 426485760
I0726 10:02:11.951103 39651 layer_factory.hpp:77] Creating layer conv_decode4_bn
I0726 10:02:11.951117 39651 net.cpp:100] Creating Layer conv_decode4_bn
I0726 10:02:11.951125 39651 net.cpp:434] conv_decode4_bn <- conv_decode4
I0726 10:02:11.951134 39651 net.cpp:395] conv_decode4_bn -> conv_decode4 (in-place)
I0726 10:02:11.951380 39651 net.cpp:150] Setting up conv_decode4_bn
I0726 10:02:11.951395 39651 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:02:11.951402 39651 net.cpp:165] Memory required for data: 427868160
I0726 10:02:11.951413 39651 layer_factory.hpp:77] Creating layer upsample3
I0726 10:02:11.951431 39651 net.cpp:100] Creating Layer upsample3
I0726 10:02:11.951448 39651 net.cpp:434] upsample3 <- conv_decode4
I0726 10:02:11.951455 39651 net.cpp:434] upsample3 <- pool3_mask
I0726 10:02:11.951473 39651 net.cpp:408] upsample3 -> upsample3
I0726 10:02:11.951494 39651 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 10:02:11.951530 39651 net.cpp:150] Setting up upsample3
I0726 10:02:11.951541 39651 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:02:11.951548 39651 net.cpp:165] Memory required for data: 433397760
I0726 10:02:11.951558 39651 layer_factory.hpp:77] Creating layer conv_decode3
I0726 10:02:11.951572 39651 net.cpp:100] Creating Layer conv_decode3
I0726 10:02:11.951581 39651 net.cpp:434] conv_decode3 <- upsample3
I0726 10:02:11.951592 39651 net.cpp:408] conv_decode3 -> conv_decode3
I0726 10:02:11.958506 39651 net.cpp:150] Setting up conv_decode3
I0726 10:02:11.958523 39651 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:02:11.958530 39651 net.cpp:165] Memory required for data: 438927360
I0726 10:02:11.958539 39651 layer_factory.hpp:77] Creating layer conv_decode3_bn
I0726 10:02:11.958549 39651 net.cpp:100] Creating Layer conv_decode3_bn
I0726 10:02:11.958556 39651 net.cpp:434] conv_decode3_bn <- conv_decode3
I0726 10:02:11.958566 39651 net.cpp:395] conv_decode3_bn -> conv_decode3 (in-place)
I0726 10:02:11.958811 39651 net.cpp:150] Setting up conv_decode3_bn
I0726 10:02:11.958825 39651 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:02:11.958832 39651 net.cpp:165] Memory required for data: 444456960
I0726 10:02:11.958842 39651 layer_factory.hpp:77] Creating layer upsample2
I0726 10:02:11.958863 39651 net.cpp:100] Creating Layer upsample2
I0726 10:02:11.958878 39651 net.cpp:434] upsample2 <- conv_decode3
I0726 10:02:11.958885 39651 net.cpp:434] upsample2 <- pool2_mask
I0726 10:02:11.958900 39651 net.cpp:408] upsample2 -> upsample2
I0726 10:02:11.958920 39651 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 10:02:11.958955 39651 net.cpp:150] Setting up upsample2
I0726 10:02:11.958966 39651 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:02:11.958972 39651 net.cpp:165] Memory required for data: 466575360
I0726 10:02:11.958981 39651 layer_factory.hpp:77] Creating layer conv_decode2
I0726 10:02:11.958994 39651 net.cpp:100] Creating Layer conv_decode2
I0726 10:02:11.959003 39651 net.cpp:434] conv_decode2 <- upsample2
I0726 10:02:11.959014 39651 net.cpp:408] conv_decode2 -> conv_decode2
I0726 10:02:11.967998 39651 net.cpp:150] Setting up conv_decode2
I0726 10:02:11.968024 39651 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:02:11.968031 39651 net.cpp:165] Memory required for data: 488693760
I0726 10:02:11.968042 39651 layer_factory.hpp:77] Creating layer conv_decode2_bn
I0726 10:02:11.968072 39651 net.cpp:100] Creating Layer conv_decode2_bn
I0726 10:02:11.968082 39651 net.cpp:434] conv_decode2_bn <- conv_decode2
I0726 10:02:11.968092 39651 net.cpp:395] conv_decode2_bn -> conv_decode2 (in-place)
I0726 10:02:11.968410 39651 net.cpp:150] Setting up conv_decode2_bn
I0726 10:02:11.968425 39651 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:02:11.968431 39651 net.cpp:165] Memory required for data: 510812160
I0726 10:02:11.968441 39651 layer_factory.hpp:77] Creating layer upsample1
I0726 10:02:11.968452 39651 net.cpp:100] Creating Layer upsample1
I0726 10:02:11.968458 39651 net.cpp:434] upsample1 <- conv_decode2
I0726 10:02:11.968468 39651 net.cpp:434] upsample1 <- pool1_mask
I0726 10:02:11.968477 39651 net.cpp:408] upsample1 -> upsample1
I0726 10:02:11.968494 39651 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 10:02:11.968523 39651 net.cpp:150] Setting up upsample1
I0726 10:02:11.968535 39651 net.cpp:157] Top shape: 2 64 360 480 (22118400)
I0726 10:02:11.968544 39651 net.cpp:165] Memory required for data: 599285760
I0726 10:02:11.968552 39651 layer_factory.hpp:77] Creating layer conv_decode1
I0726 10:02:11.968571 39651 net.cpp:100] Creating Layer conv_decode1
I0726 10:02:11.968580 39651 net.cpp:434] conv_decode1 <- upsample1
I0726 10:02:11.968591 39651 net.cpp:408] conv_decode1 -> conv_decode1
I0726 10:02:11.979566 39651 net.cpp:150] Setting up conv_decode1
I0726 10:02:11.979645 39651 net.cpp:157] Top shape: 2 64 360 480 (22118400)
I0726 10:02:11.979658 39651 net.cpp:165] Memory required for data: 687759360
I0726 10:02:11.979679 39651 layer_factory.hpp:77] Creating layer conv_decode1_bn
I0726 10:02:11.979714 39651 net.cpp:100] Creating Layer conv_decode1_bn
I0726 10:02:11.979730 39651 net.cpp:434] conv_decode1_bn <- conv_decode1
I0726 10:02:11.979754 39651 net.cpp:395] conv_decode1_bn -> conv_decode1 (in-place)
I0726 10:02:11.980551 39651 net.cpp:150] Setting up conv_decode1_bn
I0726 10:02:11.980574 39651 net.cpp:157] Top shape: 2 64 360 480 (22118400)
I0726 10:02:11.980588 39651 net.cpp:165] Memory required for data: 776232960
I0726 10:02:11.980607 39651 layer_factory.hpp:77] Creating layer conv_classifier
I0726 10:02:11.980648 39651 net.cpp:100] Creating Layer conv_classifier
I0726 10:02:11.980662 39651 net.cpp:434] conv_classifier <- conv_decode1
I0726 10:02:11.980680 39651 net.cpp:408] conv_classifier -> conv_classifier
I0726 10:02:11.983774 39651 net.cpp:150] Setting up conv_classifier
I0726 10:02:11.983821 39651 net.cpp:157] Top shape: 2 2 360 480 (691200)
I0726 10:02:11.983836 39651 net.cpp:165] Memory required for data: 778997760
I0726 10:02:11.983876 39651 layer_factory.hpp:77] Creating layer conv_classifier_conv_classifier_0_split
I0726 10:02:11.983902 39651 net.cpp:100] Creating Layer conv_classifier_conv_classifier_0_split
I0726 10:02:11.983927 39651 net.cpp:434] conv_classifier_conv_classifier_0_split <- conv_classifier
I0726 10:02:11.983945 39651 net.cpp:408] conv_classifier_conv_classifier_0_split -> conv_classifier_conv_classifier_0_split_0
I0726 10:02:11.983968 39651 net.cpp:408] conv_classifier_conv_classifier_0_split -> conv_classifier_conv_classifier_0_split_1
I0726 10:02:11.984055 39651 net.cpp:150] Setting up conv_classifier_conv_classifier_0_split
I0726 10:02:11.984082 39651 net.cpp:157] Top shape: 2 2 360 480 (691200)
I0726 10:02:11.984097 39651 net.cpp:157] Top shape: 2 2 360 480 (691200)
I0726 10:02:11.984109 39651 net.cpp:165] Memory required for data: 784527360
I0726 10:02:11.984123 39651 layer_factory.hpp:77] Creating layer loss
I0726 10:02:11.984151 39651 net.cpp:100] Creating Layer loss
I0726 10:02:11.984165 39651 net.cpp:434] loss <- conv_classifier_conv_classifier_0_split_0
I0726 10:02:11.984180 39651 net.cpp:434] loss <- label_data_1_split_0
I0726 10:02:11.984197 39651 net.cpp:408] loss -> loss
I0726 10:02:11.984223 39651 layer_factory.hpp:77] Creating layer loss
I0726 10:02:11.988171 39651 net.cpp:150] Setting up loss
I0726 10:02:11.988234 39651 net.cpp:157] Top shape: (1)
I0726 10:02:11.988246 39651 net.cpp:160]     with loss weight 1
I0726 10:02:11.988279 39651 net.cpp:165] Memory required for data: 784527364
I0726 10:02:11.988291 39651 layer_factory.hpp:77] Creating layer accuracy
I0726 10:02:11.988312 39651 net.cpp:100] Creating Layer accuracy
I0726 10:02:11.988327 39651 net.cpp:434] accuracy <- conv_classifier_conv_classifier_0_split_1
I0726 10:02:11.988343 39651 net.cpp:434] accuracy <- label_data_1_split_1
I0726 10:02:11.988360 39651 net.cpp:408] accuracy -> accuracy
I0726 10:02:11.988379 39651 net.cpp:408] accuracy -> per_class_accuracy
I0726 10:02:11.988457 39651 net.cpp:150] Setting up accuracy
I0726 10:02:11.988477 39651 net.cpp:157] Top shape: (1)
I0726 10:02:11.988492 39651 net.cpp:157] Top shape: 2 (2)
I0726 10:02:11.988517 39651 net.cpp:165] Memory required for data: 784527376
I0726 10:02:11.988528 39651 net.cpp:228] accuracy does not need backward computation.
I0726 10:02:11.988541 39651 net.cpp:226] loss needs backward computation.
I0726 10:02:11.988553 39651 net.cpp:226] conv_classifier_conv_classifier_0_split needs backward computation.
I0726 10:02:11.988564 39651 net.cpp:226] conv_classifier needs backward computation.
I0726 10:02:11.988575 39651 net.cpp:226] conv_decode1_bn needs backward computation.
I0726 10:02:11.988587 39651 net.cpp:226] conv_decode1 needs backward computation.
I0726 10:02:11.988600 39651 net.cpp:226] upsample1 needs backward computation.
I0726 10:02:11.988615 39651 net.cpp:226] conv_decode2_bn needs backward computation.
I0726 10:02:11.988625 39651 net.cpp:226] conv_decode2 needs backward computation.
I0726 10:02:11.988637 39651 net.cpp:226] upsample2 needs backward computation.
I0726 10:02:11.988648 39651 net.cpp:226] conv_decode3_bn needs backward computation.
I0726 10:02:11.988662 39651 net.cpp:226] conv_decode3 needs backward computation.
I0726 10:02:11.988677 39651 net.cpp:226] upsample3 needs backward computation.
I0726 10:02:11.988688 39651 net.cpp:226] conv_decode4_bn needs backward computation.
I0726 10:02:11.988700 39651 net.cpp:226] conv_decode4 needs backward computation.
I0726 10:02:11.988711 39651 net.cpp:226] upsample4 needs backward computation.
I0726 10:02:11.988724 39651 net.cpp:226] pool4 needs backward computation.
I0726 10:02:11.988734 39651 net.cpp:226] relu4 needs backward computation.
I0726 10:02:11.988746 39651 net.cpp:226] conv4_bn needs backward computation.
I0726 10:02:11.988756 39651 net.cpp:226] conv4 needs backward computation.
I0726 10:02:11.988770 39651 net.cpp:226] pool3 needs backward computation.
I0726 10:02:11.988785 39651 net.cpp:226] relu3 needs backward computation.
I0726 10:02:11.988795 39651 net.cpp:226] conv3_bn needs backward computation.
I0726 10:02:11.988803 39651 net.cpp:226] conv3 needs backward computation.
I0726 10:02:11.988816 39651 net.cpp:226] pool2 needs backward computation.
I0726 10:02:11.988828 39651 net.cpp:226] relu2 needs backward computation.
I0726 10:02:11.988840 39651 net.cpp:226] conv2_bn needs backward computation.
I0726 10:02:11.988850 39651 net.cpp:226] conv2 needs backward computation.
I0726 10:02:11.988860 39651 net.cpp:226] pool1 needs backward computation.
I0726 10:02:11.988869 39651 net.cpp:226] relu1 needs backward computation.
I0726 10:02:11.988879 39651 net.cpp:226] conv1_bn needs backward computation.
I0726 10:02:11.988888 39651 net.cpp:226] conv1 needs backward computation.
I0726 10:02:11.988899 39651 net.cpp:228] norm does not need backward computation.
I0726 10:02:11.988911 39651 net.cpp:228] label_data_1_split does not need backward computation.
I0726 10:02:11.988925 39651 net.cpp:228] data does not need backward computation.
I0726 10:02:11.988934 39651 net.cpp:270] This network produces output accuracy
I0726 10:02:11.988950 39651 net.cpp:270] This network produces output loss
I0726 10:02:11.988961 39651 net.cpp:270] This network produces output per_class_accuracy
I0726 10:02:11.989015 39651 net.cpp:283] Network initialization done.
I0726 10:02:11.989346 39651 solver.cpp:60] Solver scaffolding done.
I0726 10:02:11.991549 39651 caffe.cpp:155] Finetuning from examples/segnet/segnet_train/premodel/segnet_basic_camvid.caffemodel
I0726 10:02:12.012512 39651 net.cpp:761] Ignoring source layer dense_softmax_inner_prod
I0726 10:02:12.024767 39651 net.cpp:761] Ignoring source layer dense_softmax_inner_prod
I0726 10:02:12.024850 39651 caffe.cpp:251] Starting Optimization
I0726 10:02:12.024863 39651 solver.cpp:279] Solving segnet
I0726 10:02:12.024873 39651 solver.cpp:280] Learning Rate Policy: step
I0726 10:02:12.322134 39651 solver.cpp:228] Iteration 0, loss = 4.5103
I0726 10:02:12.322221 39651 solver.cpp:244]     Train net output #0: accuracy = 0.490012
I0726 10:02:12.322248 39651 solver.cpp:244]     Train net output #1: loss = 4.5103 (* 1 = 4.5103 loss)
I0726 10:02:12.322263 39651 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.488577
I0726 10:02:12.322289 39651 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.497374
I0726 10:02:12.322324 39651 sgd_solver.cpp:106] Iteration 0, lr = 0.01
I0726 10:02:20.526114 39651 solver.cpp:228] Iteration 20, loss = 0.645941
I0726 10:02:20.526252 39651 solver.cpp:244]     Train net output #0: accuracy = 0.578287
I0726 10:02:20.526293 39651 solver.cpp:244]     Train net output #1: loss = 0.645941 (* 1 = 0.645941 loss)
I0726 10:02:20.526319 39651 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.517725
I0726 10:02:20.526341 39651 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.995413
I0726 10:02:20.526367 39651 sgd_solver.cpp:106] Iteration 20, lr = 0.01
I0726 10:02:28.754819 39651 solver.cpp:228] Iteration 40, loss = 0.250432
I0726 10:02:28.754900 39651 solver.cpp:244]     Train net output #0: accuracy = 0.88691
I0726 10:02:28.754920 39651 solver.cpp:244]     Train net output #1: loss = 0.250432 (* 1 = 0.250432 loss)
I0726 10:02:28.754928 39651 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.879572
I0726 10:02:28.754936 39651 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.924564
I0726 10:02:28.754947 39651 sgd_solver.cpp:106] Iteration 40, lr = 0.01
I0726 10:02:37.042557 39651 solver.cpp:228] Iteration 60, loss = 0.275492
I0726 10:02:37.042640 39651 solver.cpp:244]     Train net output #0: accuracy = 0.898377
I0726 10:02:37.042660 39651 solver.cpp:244]     Train net output #1: loss = 0.275492 (* 1 = 0.275492 loss)
I0726 10:02:37.042670 39651 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.908192
I0726 10:02:37.042680 39651 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.848011
I0726 10:02:37.042695 39651 sgd_solver.cpp:106] Iteration 60, lr = 0.01
I0726 10:02:45.188752 39651 solver.cpp:228] Iteration 80, loss = 0.170288
I0726 10:02:45.188886 39651 solver.cpp:244]     Train net output #0: accuracy = 0.956021
I0726 10:02:45.188905 39651 solver.cpp:244]     Train net output #1: loss = 0.170288 (* 1 = 0.170288 loss)
I0726 10:02:45.188912 39651 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.956492
I0726 10:02:45.188920 39651 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.954133
I0726 10:02:45.188930 39651 sgd_solver.cpp:106] Iteration 80, lr = 0.01
I0726 10:02:49.717041 39651 solver.cpp:454] Snapshotting to binary proto file examples/segnet/segnet_train/segnet_basic/seg_iter_92.caffemodel
I0726 10:02:50.014539 39651 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/segnet/segnet_train/segnet_basic/seg_iter_92.solverstate
I0726 10:02:50.025662 39651 solver.cpp:301] Optimization stopped early.
I0726 10:02:50.025686 39651 caffe.cpp:254] Optimization Done.
I0726 10:02:52.590353  7095 caffe.cpp:217] Using GPUs 2, 3
I0726 10:02:52.759968  7095 caffe.cpp:222] GPU 2: Graphics Device
I0726 10:02:52.762141  7095 caffe.cpp:222] GPU 3: Graphics Device
I0726 10:02:55.784138  7095 solver.cpp:48] Initializing solver from parameters: 
test_iter: 1
test_interval: 10000000
base_lr: 0.01
display: 20
max_iter: 200000
lr_policy: "step"
gamma: 1
momentum: 0.9
weight_decay: 0.0005
stepsize: 15000
snapshot: 1000
snapshot_prefix: "examples/segnet/segnet_train/segnet_basic/seg"
solver_mode: GPU
device_id: 2
net: "examples/segnet/segnet_train.prototxt"
train_state {
  level: 0
  stage: ""
}
test_initialization: false
I0726 10:02:55.784448  7095 solver.cpp:91] Creating training net from net file: examples/segnet/segnet_train.prototxt
I0726 10:02:55.786742  7095 net.cpp:58] Initializing net from parameters: 
name: "segnet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "data"
  type: "DenseImageData"
  top: "data"
  top: "label"
  dense_image_data_param {
    source: "data/mydata/train.txt"
    batch_size: 2
    shuffle: true
  }
}
layer {
  name: "norm"
  type: "LRN"
  bottom: "data"
  top: "norm"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "norm"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv1_bn"
  type: "BN"
  bottom: "conv1"
  top: "conv1"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  top: "pool1_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv2_bn"
  type: "BN"
  bottom: "conv2"
  top: "conv2"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  top: "pool2_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv3_bn"
  type: "BN"
  bottom: "conv3"
  top: "conv3"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  top: "pool3_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv4_bn"
  type: "BN"
  bottom: "conv4"
  top: "conv4"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4"
  top: "pool4"
  top: "pool4_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "upsample4"
  type: "Upsample"
  bottom: "pool4"
  bottom: "pool4_mask"
  top: "upsample4"
  upsample_param {
    scale: 2
    pad_out_h: true
  }
}
layer {
  name: "conv_decode4"
  type: "Convolution"
  bottom: "upsample4"
  top: "conv_decode4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv_decode4_bn"
  type: "BN"
  bottom: "conv_decode4"
  top: "conv_decode4"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "upsample3"
  type: "Upsample"
  bottom: "conv_decode4"
  bottom: "pool3_mask"
  top: "upsample3"
  upsample_param {
    scale: 2
  }
}
layer {
  name: "conv_decode3"
  type: "Convolution"
  bottom: "upsample3"
  top: "conv_decode3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv_decode3_bn"
  type: "BN"
  bottom: "conv_decode3"
  top: "conv_decode3"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "upsample2"
  type: "Upsample"
  bottom: "conv_decode3"
  bottom: "pool2_mask"
  top: "upsample2"
  upsample_param {
    scale: 2
  }
}
layer {
  name: "conv_decode2"
  type: "Convolution"
  bottom: "upsample2"
  top: "conv_decode2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv_decode2_bn"
  type: "BN"
  bottom: "conv_decode2"
  top: "conv_decode2"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "upsample1"
  type: "Upsample"
  bottom: "conv_decode2"
  bottom: "pool1_mask"
  top: "upsample1"
  upsample_param {
    scale: 2
  }
}
layer {
  name: "conv_decode1"
  type: "Convolution"
  bottom: "upsample1"
  top: "conv_decode1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv_decode1_bn"
  type: "BN"
  bottom: "conv_decode1"
  top: "conv_decode1"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "conv_classifier"
  type: "Convolution"
  bottom: "conv_decode1"
  top: "conv_classifier"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 2
    kernel_size: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "conv_classifier"
  bottom: "label"
  top: "loss"
  loss_param {
    ignore_label: 2
    weight_by_label_freqs: true
    class_weighting: 0.59744
    class_weighting: 3.06568
  }
  softmax_param {
    engine: CAFFE
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "conv_classifier"
  bottom: "label"
  top: "accuracy"
  top: "per_class_accuracy"
}
I0726 10:02:55.787140  7095 layer_factory.hpp:77] Creating layer data
I0726 10:02:55.787225  7095 net.cpp:100] Creating Layer data
I0726 10:02:55.787245  7095 net.cpp:408] data -> data
I0726 10:02:55.787295  7095 net.cpp:408] data -> label
I0726 10:02:55.787324  7095 dense_image_data_layer.cpp:49] Opening file data/mydata/train.txt
I0726 10:02:55.787403  7095 dense_image_data_layer.cpp:59] Shuffling data
I0726 10:02:55.787992  7095 dense_image_data_layer.cpp:64] A total of 4 examples.
I0726 10:02:55.818073  7095 dense_image_data_layer.cpp:117] output data size: 2,3,360,480
I0726 10:02:55.824671  7095 net.cpp:150] Setting up data
I0726 10:02:55.824717  7095 net.cpp:157] Top shape: 2 3 360 480 (1036800)
I0726 10:02:55.824731  7095 net.cpp:157] Top shape: 2 1 360 480 (345600)
I0726 10:02:55.824741  7095 net.cpp:165] Memory required for data: 5529600
I0726 10:02:55.824756  7095 layer_factory.hpp:77] Creating layer label_data_1_split
I0726 10:02:55.824800  7095 net.cpp:100] Creating Layer label_data_1_split
I0726 10:02:55.824812  7095 net.cpp:434] label_data_1_split <- label
I0726 10:02:55.824836  7095 net.cpp:408] label_data_1_split -> label_data_1_split_0
I0726 10:02:55.824856  7095 net.cpp:408] label_data_1_split -> label_data_1_split_1
I0726 10:02:55.824934  7095 net.cpp:150] Setting up label_data_1_split
I0726 10:02:55.824951  7095 net.cpp:157] Top shape: 2 1 360 480 (345600)
I0726 10:02:55.824962  7095 net.cpp:157] Top shape: 2 1 360 480 (345600)
I0726 10:02:55.824971  7095 net.cpp:165] Memory required for data: 8294400
I0726 10:02:55.824981  7095 layer_factory.hpp:77] Creating layer norm
I0726 10:02:55.825002  7095 net.cpp:100] Creating Layer norm
I0726 10:02:55.825011  7095 net.cpp:434] norm <- data
I0726 10:02:55.825024  7095 net.cpp:408] norm -> norm
I0726 10:02:55.825076  7095 net.cpp:150] Setting up norm
I0726 10:02:55.825091  7095 net.cpp:157] Top shape: 2 3 360 480 (1036800)
I0726 10:02:55.825100  7095 net.cpp:165] Memory required for data: 12441600
I0726 10:02:55.825109  7095 layer_factory.hpp:77] Creating layer conv1
I0726 10:02:55.825134  7095 net.cpp:100] Creating Layer conv1
I0726 10:02:55.825145  7095 net.cpp:434] conv1 <- norm
I0726 10:02:55.825158  7095 net.cpp:408] conv1 -> conv1
I0726 10:02:55.830148  7095 net.cpp:150] Setting up conv1
I0726 10:02:55.830181  7095 net.cpp:157] Top shape: 2 64 360 480 (22118400)
I0726 10:02:55.830191  7095 net.cpp:165] Memory required for data: 100915200
I0726 10:02:55.830219  7095 layer_factory.hpp:77] Creating layer conv1_bn
I0726 10:02:55.830247  7095 net.cpp:100] Creating Layer conv1_bn
I0726 10:02:55.830258  7095 net.cpp:434] conv1_bn <- conv1
I0726 10:02:55.830271  7095 net.cpp:395] conv1_bn -> conv1 (in-place)
I0726 10:02:55.833652  7095 net.cpp:150] Setting up conv1_bn
I0726 10:02:55.833686  7095 net.cpp:157] Top shape: 2 64 360 480 (22118400)
I0726 10:02:55.833696  7095 net.cpp:165] Memory required for data: 189388800
I0726 10:02:55.833715  7095 layer_factory.hpp:77] Creating layer relu1
I0726 10:02:55.833730  7095 net.cpp:100] Creating Layer relu1
I0726 10:02:55.833739  7095 net.cpp:434] relu1 <- conv1
I0726 10:02:55.833753  7095 net.cpp:395] relu1 -> conv1 (in-place)
I0726 10:02:55.833770  7095 net.cpp:150] Setting up relu1
I0726 10:02:55.833781  7095 net.cpp:157] Top shape: 2 64 360 480 (22118400)
I0726 10:02:55.833789  7095 net.cpp:165] Memory required for data: 277862400
I0726 10:02:55.833806  7095 layer_factory.hpp:77] Creating layer pool1
I0726 10:02:55.833822  7095 net.cpp:100] Creating Layer pool1
I0726 10:02:55.833832  7095 net.cpp:434] pool1 <- conv1
I0726 10:02:55.833842  7095 net.cpp:408] pool1 -> pool1
I0726 10:02:55.833858  7095 net.cpp:408] pool1 -> pool1_mask
I0726 10:02:55.833930  7095 net.cpp:150] Setting up pool1
I0726 10:02:55.833945  7095 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:02:55.833956  7095 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:02:55.833966  7095 net.cpp:165] Memory required for data: 322099200
I0726 10:02:55.833976  7095 layer_factory.hpp:77] Creating layer conv2
I0726 10:02:55.833997  7095 net.cpp:100] Creating Layer conv2
I0726 10:02:55.834031  7095 net.cpp:434] conv2 <- pool1
I0726 10:02:55.834046  7095 net.cpp:408] conv2 -> conv2
I0726 10:02:55.858533  7095 net.cpp:150] Setting up conv2
I0726 10:02:55.858628  7095 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:02:55.858641  7095 net.cpp:165] Memory required for data: 344217600
I0726 10:02:55.858675  7095 layer_factory.hpp:77] Creating layer conv2_bn
I0726 10:02:55.858708  7095 net.cpp:100] Creating Layer conv2_bn
I0726 10:02:55.858722  7095 net.cpp:434] conv2_bn <- conv2
I0726 10:02:55.858741  7095 net.cpp:395] conv2_bn -> conv2 (in-place)
I0726 10:02:55.859200  7095 net.cpp:150] Setting up conv2_bn
I0726 10:02:55.859225  7095 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:02:55.859239  7095 net.cpp:165] Memory required for data: 366336000
I0726 10:02:55.859257  7095 layer_factory.hpp:77] Creating layer relu2
I0726 10:02:55.859305  7095 net.cpp:100] Creating Layer relu2
I0726 10:02:55.859323  7095 net.cpp:434] relu2 <- conv2
I0726 10:02:55.859339  7095 net.cpp:395] relu2 -> conv2 (in-place)
I0726 10:02:55.859359  7095 net.cpp:150] Setting up relu2
I0726 10:02:55.859375  7095 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:02:55.859513  7095 net.cpp:165] Memory required for data: 388454400
I0726 10:02:55.859544  7095 layer_factory.hpp:77] Creating layer pool2
I0726 10:02:55.859576  7095 net.cpp:100] Creating Layer pool2
I0726 10:02:55.859601  7095 net.cpp:434] pool2 <- conv2
I0726 10:02:55.859630  7095 net.cpp:408] pool2 -> pool2
I0726 10:02:55.859663  7095 net.cpp:408] pool2 -> pool2_mask
I0726 10:02:55.859740  7095 net.cpp:150] Setting up pool2
I0726 10:02:55.859776  7095 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:02:55.859803  7095 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:02:55.859825  7095 net.cpp:165] Memory required for data: 399513600
I0726 10:02:55.859848  7095 layer_factory.hpp:77] Creating layer conv3
I0726 10:02:55.859886  7095 net.cpp:100] Creating Layer conv3
I0726 10:02:55.859911  7095 net.cpp:434] conv3 <- pool2
I0726 10:02:55.859941  7095 net.cpp:408] conv3 -> conv3
I0726 10:02:55.877419  7095 net.cpp:150] Setting up conv3
I0726 10:02:55.877641  7095 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:02:55.877696  7095 net.cpp:165] Memory required for data: 405043200
I0726 10:02:55.877775  7095 layer_factory.hpp:77] Creating layer conv3_bn
I0726 10:02:55.877841  7095 net.cpp:100] Creating Layer conv3_bn
I0726 10:02:55.877883  7095 net.cpp:434] conv3_bn <- conv3
I0726 10:02:55.877935  7095 net.cpp:395] conv3_bn -> conv3 (in-place)
I0726 10:02:55.878506  7095 net.cpp:150] Setting up conv3_bn
I0726 10:02:55.878561  7095 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:02:55.878604  7095 net.cpp:165] Memory required for data: 410572800
I0726 10:02:55.878654  7095 layer_factory.hpp:77] Creating layer relu3
I0726 10:02:55.878697  7095 net.cpp:100] Creating Layer relu3
I0726 10:02:55.878736  7095 net.cpp:434] relu3 <- conv3
I0726 10:02:55.878775  7095 net.cpp:395] relu3 -> conv3 (in-place)
I0726 10:02:55.878816  7095 net.cpp:150] Setting up relu3
I0726 10:02:55.878857  7095 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:02:55.878897  7095 net.cpp:165] Memory required for data: 416102400
I0726 10:02:55.878989  7095 layer_factory.hpp:77] Creating layer pool3
I0726 10:02:55.879045  7095 net.cpp:100] Creating Layer pool3
I0726 10:02:55.879083  7095 net.cpp:434] pool3 <- conv3
I0726 10:02:55.879130  7095 net.cpp:408] pool3 -> pool3
I0726 10:02:55.879184  7095 net.cpp:408] pool3 -> pool3_mask
I0726 10:02:55.879294  7095 net.cpp:150] Setting up pool3
I0726 10:02:55.879339  7095 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:02:55.879379  7095 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:02:55.879412  7095 net.cpp:165] Memory required for data: 418867200
I0726 10:02:55.879449  7095 layer_factory.hpp:77] Creating layer conv4
I0726 10:02:55.879554  7095 net.cpp:100] Creating Layer conv4
I0726 10:02:55.879598  7095 net.cpp:434] conv4 <- pool3
I0726 10:02:55.879639  7095 net.cpp:408] conv4 -> conv4
I0726 10:02:55.904891  7095 net.cpp:150] Setting up conv4
I0726 10:02:55.904961  7095 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:02:55.904973  7095 net.cpp:165] Memory required for data: 420249600
I0726 10:02:55.904991  7095 layer_factory.hpp:77] Creating layer conv4_bn
I0726 10:02:55.905019  7095 net.cpp:100] Creating Layer conv4_bn
I0726 10:02:55.905028  7095 net.cpp:434] conv4_bn <- conv4
I0726 10:02:55.905041  7095 net.cpp:395] conv4_bn -> conv4 (in-place)
I0726 10:02:55.905309  7095 net.cpp:150] Setting up conv4_bn
I0726 10:02:55.905324  7095 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:02:55.905333  7095 net.cpp:165] Memory required for data: 421632000
I0726 10:02:55.905346  7095 layer_factory.hpp:77] Creating layer relu4
I0726 10:02:55.905360  7095 net.cpp:100] Creating Layer relu4
I0726 10:02:55.905369  7095 net.cpp:434] relu4 <- conv4
I0726 10:02:55.905377  7095 net.cpp:395] relu4 -> conv4 (in-place)
I0726 10:02:55.905390  7095 net.cpp:150] Setting up relu4
I0726 10:02:55.905400  7095 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:02:55.905407  7095 net.cpp:165] Memory required for data: 423014400
I0726 10:02:55.905414  7095 layer_factory.hpp:77] Creating layer pool4
I0726 10:02:55.905438  7095 net.cpp:100] Creating Layer pool4
I0726 10:02:55.905447  7095 net.cpp:434] pool4 <- conv4
I0726 10:02:55.905457  7095 net.cpp:408] pool4 -> pool4
I0726 10:02:55.905472  7095 net.cpp:408] pool4 -> pool4_mask
I0726 10:02:55.905519  7095 net.cpp:150] Setting up pool4
I0726 10:02:55.905544  7095 net.cpp:157] Top shape: 2 64 23 30 (88320)
I0726 10:02:55.905555  7095 net.cpp:157] Top shape: 2 64 23 30 (88320)
I0726 10:02:55.905563  7095 net.cpp:165] Memory required for data: 423720960
I0726 10:02:55.905572  7095 layer_factory.hpp:77] Creating layer upsample4
I0726 10:02:55.905598  7095 net.cpp:100] Creating Layer upsample4
I0726 10:02:55.905607  7095 net.cpp:434] upsample4 <- pool4
I0726 10:02:55.905617  7095 net.cpp:434] upsample4 <- pool4_mask
I0726 10:02:55.905628  7095 net.cpp:408] upsample4 -> upsample4
I0726 10:02:55.905645  7095 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 10:02:55.905673  7095 net.cpp:150] Setting up upsample4
I0726 10:02:55.905684  7095 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:02:55.905692  7095 net.cpp:165] Memory required for data: 425103360
I0726 10:02:55.905700  7095 layer_factory.hpp:77] Creating layer conv_decode4
I0726 10:02:55.905717  7095 net.cpp:100] Creating Layer conv_decode4
I0726 10:02:55.905726  7095 net.cpp:434] conv_decode4 <- upsample4
I0726 10:02:55.905738  7095 net.cpp:408] conv_decode4 -> conv_decode4
I0726 10:02:55.917543  7095 net.cpp:150] Setting up conv_decode4
I0726 10:02:55.917615  7095 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:02:55.917623  7095 net.cpp:165] Memory required for data: 426485760
I0726 10:02:55.917645  7095 layer_factory.hpp:77] Creating layer conv_decode4_bn
I0726 10:02:55.917676  7095 net.cpp:100] Creating Layer conv_decode4_bn
I0726 10:02:55.917685  7095 net.cpp:434] conv_decode4_bn <- conv_decode4
I0726 10:02:55.917697  7095 net.cpp:395] conv_decode4_bn -> conv_decode4 (in-place)
I0726 10:02:55.917927  7095 net.cpp:150] Setting up conv_decode4_bn
I0726 10:02:55.917942  7095 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:02:55.917948  7095 net.cpp:165] Memory required for data: 427868160
I0726 10:02:55.917960  7095 layer_factory.hpp:77] Creating layer upsample3
I0726 10:02:55.917973  7095 net.cpp:100] Creating Layer upsample3
I0726 10:02:55.917982  7095 net.cpp:434] upsample3 <- conv_decode4
I0726 10:02:55.917990  7095 net.cpp:434] upsample3 <- pool3_mask
I0726 10:02:55.918001  7095 net.cpp:408] upsample3 -> upsample3
I0726 10:02:55.918015  7095 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 10:02:55.918042  7095 net.cpp:150] Setting up upsample3
I0726 10:02:55.918053  7095 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:02:55.918087  7095 net.cpp:165] Memory required for data: 433397760
I0726 10:02:55.918095  7095 layer_factory.hpp:77] Creating layer conv_decode3
I0726 10:02:55.918115  7095 net.cpp:100] Creating Layer conv_decode3
I0726 10:02:55.918124  7095 net.cpp:434] conv_decode3 <- upsample3
I0726 10:02:55.918136  7095 net.cpp:408] conv_decode3 -> conv_decode3
I0726 10:02:55.934053  7095 net.cpp:150] Setting up conv_decode3
I0726 10:02:55.934139  7095 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:02:55.934151  7095 net.cpp:165] Memory required for data: 438927360
I0726 10:02:55.934170  7095 layer_factory.hpp:77] Creating layer conv_decode3_bn
I0726 10:02:55.934195  7095 net.cpp:100] Creating Layer conv_decode3_bn
I0726 10:02:55.934206  7095 net.cpp:434] conv_decode3_bn <- conv_decode3
I0726 10:02:55.934223  7095 net.cpp:395] conv_decode3_bn -> conv_decode3 (in-place)
I0726 10:02:55.934561  7095 net.cpp:150] Setting up conv_decode3_bn
I0726 10:02:55.934581  7095 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:02:55.934592  7095 net.cpp:165] Memory required for data: 444456960
I0726 10:02:55.934608  7095 layer_factory.hpp:77] Creating layer upsample2
I0726 10:02:55.934640  7095 net.cpp:100] Creating Layer upsample2
I0726 10:02:55.934653  7095 net.cpp:434] upsample2 <- conv_decode3
I0726 10:02:55.934666  7095 net.cpp:434] upsample2 <- pool2_mask
I0726 10:02:55.934681  7095 net.cpp:408] upsample2 -> upsample2
I0726 10:02:55.934700  7095 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 10:02:55.934736  7095 net.cpp:150] Setting up upsample2
I0726 10:02:55.934751  7095 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:02:55.934762  7095 net.cpp:165] Memory required for data: 466575360
I0726 10:02:55.934772  7095 layer_factory.hpp:77] Creating layer conv_decode2
I0726 10:02:55.934794  7095 net.cpp:100] Creating Layer conv_decode2
I0726 10:02:55.934806  7095 net.cpp:434] conv_decode2 <- upsample2
I0726 10:02:55.934821  7095 net.cpp:408] conv_decode2 -> conv_decode2
I0726 10:02:55.952857  7095 net.cpp:150] Setting up conv_decode2
I0726 10:02:55.952927  7095 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:02:55.952939  7095 net.cpp:165] Memory required for data: 488693760
I0726 10:02:55.952955  7095 layer_factory.hpp:77] Creating layer conv_decode2_bn
I0726 10:02:55.952972  7095 net.cpp:100] Creating Layer conv_decode2_bn
I0726 10:02:55.952985  7095 net.cpp:434] conv_decode2_bn <- conv_decode2
I0726 10:02:55.952998  7095 net.cpp:395] conv_decode2_bn -> conv_decode2 (in-place)
I0726 10:02:55.953377  7095 net.cpp:150] Setting up conv_decode2_bn
I0726 10:02:55.953394  7095 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:02:55.953402  7095 net.cpp:165] Memory required for data: 510812160
I0726 10:02:55.953415  7095 layer_factory.hpp:77] Creating layer upsample1
I0726 10:02:55.953429  7095 net.cpp:100] Creating Layer upsample1
I0726 10:02:55.953441  7095 net.cpp:434] upsample1 <- conv_decode2
I0726 10:02:55.953452  7095 net.cpp:434] upsample1 <- pool1_mask
I0726 10:02:55.953465  7095 net.cpp:408] upsample1 -> upsample1
I0726 10:02:55.953481  7095 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 10:02:55.953512  7095 net.cpp:150] Setting up upsample1
I0726 10:02:55.953536  7095 net.cpp:157] Top shape: 2 64 360 480 (22118400)
I0726 10:02:55.953547  7095 net.cpp:165] Memory required for data: 599285760
I0726 10:02:55.953555  7095 layer_factory.hpp:77] Creating layer conv_decode1
I0726 10:02:55.953577  7095 net.cpp:100] Creating Layer conv_decode1
I0726 10:02:55.953593  7095 net.cpp:434] conv_decode1 <- upsample1
I0726 10:02:55.953606  7095 net.cpp:408] conv_decode1 -> conv_decode1
I0726 10:02:55.976977  7095 net.cpp:150] Setting up conv_decode1
I0726 10:02:55.977047  7095 net.cpp:157] Top shape: 2 64 360 480 (22118400)
I0726 10:02:55.977057  7095 net.cpp:165] Memory required for data: 687759360
I0726 10:02:55.977102  7095 layer_factory.hpp:77] Creating layer conv_decode1_bn
I0726 10:02:55.977123  7095 net.cpp:100] Creating Layer conv_decode1_bn
I0726 10:02:55.977131  7095 net.cpp:434] conv_decode1_bn <- conv_decode1
I0726 10:02:55.977144  7095 net.cpp:395] conv_decode1_bn -> conv_decode1 (in-place)
I0726 10:02:55.993024  7095 net.cpp:150] Setting up conv_decode1_bn
I0726 10:02:55.993095  7095 net.cpp:157] Top shape: 2 64 360 480 (22118400)
I0726 10:02:55.993105  7095 net.cpp:165] Memory required for data: 776232960
I0726 10:02:55.993125  7095 layer_factory.hpp:77] Creating layer conv_classifier
I0726 10:02:55.993154  7095 net.cpp:100] Creating Layer conv_classifier
I0726 10:02:55.993165  7095 net.cpp:434] conv_classifier <- conv_decode1
I0726 10:02:55.993180  7095 net.cpp:408] conv_classifier -> conv_classifier
I0726 10:02:55.993692  7095 net.cpp:150] Setting up conv_classifier
I0726 10:02:55.993715  7095 net.cpp:157] Top shape: 2 2 360 480 (691200)
I0726 10:02:55.993722  7095 net.cpp:165] Memory required for data: 778997760
I0726 10:02:55.993746  7095 layer_factory.hpp:77] Creating layer conv_classifier_conv_classifier_0_split
I0726 10:02:55.993767  7095 net.cpp:100] Creating Layer conv_classifier_conv_classifier_0_split
I0726 10:02:55.993788  7095 net.cpp:434] conv_classifier_conv_classifier_0_split <- conv_classifier
I0726 10:02:55.993808  7095 net.cpp:408] conv_classifier_conv_classifier_0_split -> conv_classifier_conv_classifier_0_split_0
I0726 10:02:55.993824  7095 net.cpp:408] conv_classifier_conv_classifier_0_split -> conv_classifier_conv_classifier_0_split_1
I0726 10:02:55.993870  7095 net.cpp:150] Setting up conv_classifier_conv_classifier_0_split
I0726 10:02:55.993883  7095 net.cpp:157] Top shape: 2 2 360 480 (691200)
I0726 10:02:55.993893  7095 net.cpp:157] Top shape: 2 2 360 480 (691200)
I0726 10:02:55.993901  7095 net.cpp:165] Memory required for data: 784527360
I0726 10:02:55.993911  7095 layer_factory.hpp:77] Creating layer loss
I0726 10:02:55.993926  7095 net.cpp:100] Creating Layer loss
I0726 10:02:55.993932  7095 net.cpp:434] loss <- conv_classifier_conv_classifier_0_split_0
I0726 10:02:55.993942  7095 net.cpp:434] loss <- label_data_1_split_0
I0726 10:02:55.993958  7095 net.cpp:408] loss -> loss
I0726 10:02:55.993976  7095 layer_factory.hpp:77] Creating layer loss
I0726 10:02:55.997053  7095 net.cpp:150] Setting up loss
I0726 10:02:55.997081  7095 net.cpp:157] Top shape: (1)
I0726 10:02:55.997088  7095 net.cpp:160]     with loss weight 1
I0726 10:02:55.997120  7095 net.cpp:165] Memory required for data: 784527364
I0726 10:02:55.997130  7095 layer_factory.hpp:77] Creating layer accuracy
I0726 10:02:55.997143  7095 net.cpp:100] Creating Layer accuracy
I0726 10:02:55.997153  7095 net.cpp:434] accuracy <- conv_classifier_conv_classifier_0_split_1
I0726 10:02:55.997161  7095 net.cpp:434] accuracy <- label_data_1_split_1
I0726 10:02:55.997172  7095 net.cpp:408] accuracy -> accuracy
I0726 10:02:55.997185  7095 net.cpp:408] accuracy -> per_class_accuracy
I0726 10:02:55.997231  7095 net.cpp:150] Setting up accuracy
I0726 10:02:55.997242  7095 net.cpp:157] Top shape: (1)
I0726 10:02:55.997251  7095 net.cpp:157] Top shape: 2 (2)
I0726 10:02:55.997259  7095 net.cpp:165] Memory required for data: 784527376
I0726 10:02:55.997267  7095 net.cpp:228] accuracy does not need backward computation.
I0726 10:02:55.997277  7095 net.cpp:226] loss needs backward computation.
I0726 10:02:55.997285  7095 net.cpp:226] conv_classifier_conv_classifier_0_split needs backward computation.
I0726 10:02:55.997293  7095 net.cpp:226] conv_classifier needs backward computation.
I0726 10:02:55.997303  7095 net.cpp:226] conv_decode1_bn needs backward computation.
I0726 10:02:55.997309  7095 net.cpp:226] conv_decode1 needs backward computation.
I0726 10:02:55.997319  7095 net.cpp:226] upsample1 needs backward computation.
I0726 10:02:55.997328  7095 net.cpp:226] conv_decode2_bn needs backward computation.
I0726 10:02:55.997336  7095 net.cpp:226] conv_decode2 needs backward computation.
I0726 10:02:55.997344  7095 net.cpp:226] upsample2 needs backward computation.
I0726 10:02:55.997370  7095 net.cpp:226] conv_decode3_bn needs backward computation.
I0726 10:02:55.997377  7095 net.cpp:226] conv_decode3 needs backward computation.
I0726 10:02:55.997386  7095 net.cpp:226] upsample3 needs backward computation.
I0726 10:02:55.997395  7095 net.cpp:226] conv_decode4_bn needs backward computation.
I0726 10:02:55.997403  7095 net.cpp:226] conv_decode4 needs backward computation.
I0726 10:02:55.997411  7095 net.cpp:226] upsample4 needs backward computation.
I0726 10:02:55.997419  7095 net.cpp:226] pool4 needs backward computation.
I0726 10:02:55.997426  7095 net.cpp:226] relu4 needs backward computation.
I0726 10:02:55.997434  7095 net.cpp:226] conv4_bn needs backward computation.
I0726 10:02:55.997442  7095 net.cpp:226] conv4 needs backward computation.
I0726 10:02:55.997452  7095 net.cpp:226] pool3 needs backward computation.
I0726 10:02:55.997459  7095 net.cpp:226] relu3 needs backward computation.
I0726 10:02:55.997465  7095 net.cpp:226] conv3_bn needs backward computation.
I0726 10:02:55.997473  7095 net.cpp:226] conv3 needs backward computation.
I0726 10:02:55.997480  7095 net.cpp:226] pool2 needs backward computation.
I0726 10:02:55.997491  7095 net.cpp:226] relu2 needs backward computation.
I0726 10:02:55.997499  7095 net.cpp:226] conv2_bn needs backward computation.
I0726 10:02:55.997506  7095 net.cpp:226] conv2 needs backward computation.
I0726 10:02:55.997515  7095 net.cpp:226] pool1 needs backward computation.
I0726 10:02:55.997536  7095 net.cpp:226] relu1 needs backward computation.
I0726 10:02:55.997545  7095 net.cpp:226] conv1_bn needs backward computation.
I0726 10:02:55.997551  7095 net.cpp:226] conv1 needs backward computation.
I0726 10:02:55.997560  7095 net.cpp:228] norm does not need backward computation.
I0726 10:02:55.997570  7095 net.cpp:228] label_data_1_split does not need backward computation.
I0726 10:02:55.997578  7095 net.cpp:228] data does not need backward computation.
I0726 10:02:55.997586  7095 net.cpp:270] This network produces output accuracy
I0726 10:02:55.997594  7095 net.cpp:270] This network produces output loss
I0726 10:02:55.997601  7095 net.cpp:270] This network produces output per_class_accuracy
I0726 10:02:55.997633  7095 net.cpp:283] Network initialization done.
I0726 10:02:56.001482  7095 solver.cpp:181] Creating test net (#0) specified by net file: examples/segnet/segnet_train.prototxt
I0726 10:02:56.002399  7095 net.cpp:58] Initializing net from parameters: 
name: "segnet"
state {
  phase: TEST
}
layer {
  name: "data"
  type: "DenseImageData"
  top: "data"
  top: "label"
  dense_image_data_param {
    source: "data/mydata/train.txt"
    batch_size: 2
    shuffle: true
  }
}
layer {
  name: "norm"
  type: "LRN"
  bottom: "data"
  top: "norm"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "norm"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv1_bn"
  type: "BN"
  bottom: "conv1"
  top: "conv1"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  top: "pool1_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv2_bn"
  type: "BN"
  bottom: "conv2"
  top: "conv2"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  top: "pool2_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv3_bn"
  type: "BN"
  bottom: "conv3"
  top: "conv3"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  top: "pool3_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv4_bn"
  type: "BN"
  bottom: "conv4"
  top: "conv4"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4"
  top: "pool4"
  top: "pool4_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "upsample4"
  type: "Upsample"
  bottom: "pool4"
  bottom: "pool4_mask"
  top: "upsample4"
  upsample_param {
    scale: 2
    pad_out_h: true
  }
}
layer {
  name: "conv_decode4"
  type: "Convolution"
  bottom: "upsample4"
  top: "conv_decode4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv_decode4_bn"
  type: "BN"
  bottom: "conv_decode4"
  top: "conv_decode4"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "upsample3"
  type: "Upsample"
  bottom: "conv_decode4"
  bottom: "pool3_mask"
  top: "upsample3"
  upsample_param {
    scale: 2
  }
}
layer {
  name: "conv_decode3"
  type: "Convolution"
  bottom: "upsample3"
  top: "conv_decode3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv_decode3_bn"
  type: "BN"
  bottom: "conv_decode3"
  top: "conv_decode3"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "upsample2"
  type: "Upsample"
  bottom: "conv_decode3"
  bottom: "pool2_mask"
  top: "upsample2"
  upsample_param {
    scale: 2
  }
}
layer {
  name: "conv_decode2"
  type: "Convolution"
  bottom: "upsample2"
  top: "conv_decode2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv_decode2_bn"
  type: "BN"
  bottom: "conv_decode2"
  top: "conv_decode2"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "upsample1"
  type: "Upsample"
  bottom: "conv_decode2"
  bottom: "pool1_mask"
  top: "upsample1"
  upsample_param {
    scale: 2
  }
}
layer {
  name: "conv_decode1"
  type: "Convolution"
  bottom: "upsample1"
  top: "conv_decode1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv_decode1_bn"
  type: "BN"
  bottom: "conv_decode1"
  top: "conv_decode1"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "conv_classifier"
  type: "Convolution"
  bottom: "conv_decode1"
  top: "conv_classifier"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 2
    kernel_size: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "conv_classifier"
  bottom: "label"
  top: "loss"
  loss_param {
    ignore_label: 2
    weight_by_label_freqs: true
    class_weighting: 0.59744
    class_weighting: 3.06568
  }
  softmax_param {
    engine: CAFFE
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "conv_classifier"
  bottom: "label"
  top: "accuracy"
  top: "per_class_accuracy"
}
I0726 10:02:56.002665  7095 layer_factory.hpp:77] Creating layer data
I0726 10:02:56.002688  7095 net.cpp:100] Creating Layer data
I0726 10:02:56.002698  7095 net.cpp:408] data -> data
I0726 10:02:56.002717  7095 net.cpp:408] data -> label
I0726 10:02:56.002730  7095 dense_image_data_layer.cpp:49] Opening file data/mydata/train.txt
I0726 10:02:56.002774  7095 dense_image_data_layer.cpp:59] Shuffling data
I0726 10:02:56.002789  7095 dense_image_data_layer.cpp:64] A total of 4 examples.
I0726 10:02:56.015784  7095 dense_image_data_layer.cpp:117] output data size: 2,3,360,480
I0726 10:02:56.024479  7095 net.cpp:150] Setting up data
I0726 10:02:56.024523  7095 net.cpp:157] Top shape: 2 3 360 480 (1036800)
I0726 10:02:56.024533  7095 net.cpp:157] Top shape: 2 1 360 480 (345600)
I0726 10:02:56.024540  7095 net.cpp:165] Memory required for data: 5529600
I0726 10:02:56.024551  7095 layer_factory.hpp:77] Creating layer label_data_1_split
I0726 10:02:56.024574  7095 net.cpp:100] Creating Layer label_data_1_split
I0726 10:02:56.024583  7095 net.cpp:434] label_data_1_split <- label
I0726 10:02:56.024596  7095 net.cpp:408] label_data_1_split -> label_data_1_split_0
I0726 10:02:56.024613  7095 net.cpp:408] label_data_1_split -> label_data_1_split_1
I0726 10:02:56.024668  7095 net.cpp:150] Setting up label_data_1_split
I0726 10:02:56.024682  7095 net.cpp:157] Top shape: 2 1 360 480 (345600)
I0726 10:02:56.024691  7095 net.cpp:157] Top shape: 2 1 360 480 (345600)
I0726 10:02:56.024698  7095 net.cpp:165] Memory required for data: 8294400
I0726 10:02:56.024705  7095 layer_factory.hpp:77] Creating layer norm
I0726 10:02:56.024721  7095 net.cpp:100] Creating Layer norm
I0726 10:02:56.024730  7095 net.cpp:434] norm <- data
I0726 10:02:56.024741  7095 net.cpp:408] norm -> norm
I0726 10:02:56.024785  7095 net.cpp:150] Setting up norm
I0726 10:02:56.024798  7095 net.cpp:157] Top shape: 2 3 360 480 (1036800)
I0726 10:02:56.024806  7095 net.cpp:165] Memory required for data: 12441600
I0726 10:02:56.024816  7095 layer_factory.hpp:77] Creating layer conv1
I0726 10:02:56.024833  7095 net.cpp:100] Creating Layer conv1
I0726 10:02:56.024842  7095 net.cpp:434] conv1 <- norm
I0726 10:02:56.024855  7095 net.cpp:408] conv1 -> conv1
I0726 10:02:56.025614  7095 net.cpp:150] Setting up conv1
I0726 10:02:56.025633  7095 net.cpp:157] Top shape: 2 64 360 480 (22118400)
I0726 10:02:56.025665  7095 net.cpp:165] Memory required for data: 100915200
I0726 10:02:56.025683  7095 layer_factory.hpp:77] Creating layer conv1_bn
I0726 10:02:56.025699  7095 net.cpp:100] Creating Layer conv1_bn
I0726 10:02:56.025707  7095 net.cpp:434] conv1_bn <- conv1
I0726 10:02:56.025718  7095 net.cpp:395] conv1_bn -> conv1 (in-place)
I0726 10:02:56.030035  7095 net.cpp:150] Setting up conv1_bn
I0726 10:02:56.030063  7095 net.cpp:157] Top shape: 2 64 360 480 (22118400)
I0726 10:02:56.030072  7095 net.cpp:165] Memory required for data: 189388800
I0726 10:02:56.030087  7095 layer_factory.hpp:77] Creating layer relu1
I0726 10:02:56.030102  7095 net.cpp:100] Creating Layer relu1
I0726 10:02:56.030112  7095 net.cpp:434] relu1 <- conv1
I0726 10:02:56.030122  7095 net.cpp:395] relu1 -> conv1 (in-place)
I0726 10:02:56.030133  7095 net.cpp:150] Setting up relu1
I0726 10:02:56.030143  7095 net.cpp:157] Top shape: 2 64 360 480 (22118400)
I0726 10:02:56.030151  7095 net.cpp:165] Memory required for data: 277862400
I0726 10:02:56.030158  7095 layer_factory.hpp:77] Creating layer pool1
I0726 10:02:56.030171  7095 net.cpp:100] Creating Layer pool1
I0726 10:02:56.030179  7095 net.cpp:434] pool1 <- conv1
I0726 10:02:56.030200  7095 net.cpp:408] pool1 -> pool1
I0726 10:02:56.030212  7095 net.cpp:408] pool1 -> pool1_mask
I0726 10:02:56.030261  7095 net.cpp:150] Setting up pool1
I0726 10:02:56.030273  7095 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:02:56.030283  7095 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:02:56.030290  7095 net.cpp:165] Memory required for data: 322099200
I0726 10:02:56.030297  7095 layer_factory.hpp:77] Creating layer conv2
I0726 10:02:56.030313  7095 net.cpp:100] Creating Layer conv2
I0726 10:02:56.030323  7095 net.cpp:434] conv2 <- pool1
I0726 10:02:56.030333  7095 net.cpp:408] conv2 -> conv2
I0726 10:02:56.037206  7095 net.cpp:150] Setting up conv2
I0726 10:02:56.037225  7095 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:02:56.037232  7095 net.cpp:165] Memory required for data: 344217600
I0726 10:02:56.037245  7095 layer_factory.hpp:77] Creating layer conv2_bn
I0726 10:02:56.037258  7095 net.cpp:100] Creating Layer conv2_bn
I0726 10:02:56.037266  7095 net.cpp:434] conv2_bn <- conv2
I0726 10:02:56.037274  7095 net.cpp:395] conv2_bn -> conv2 (in-place)
I0726 10:02:56.037597  7095 net.cpp:150] Setting up conv2_bn
I0726 10:02:56.037621  7095 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:02:56.037629  7095 net.cpp:165] Memory required for data: 366336000
I0726 10:02:56.037644  7095 layer_factory.hpp:77] Creating layer relu2
I0726 10:02:56.037658  7095 net.cpp:100] Creating Layer relu2
I0726 10:02:56.037668  7095 net.cpp:434] relu2 <- conv2
I0726 10:02:56.037686  7095 net.cpp:395] relu2 -> conv2 (in-place)
I0726 10:02:56.037701  7095 net.cpp:150] Setting up relu2
I0726 10:02:56.037715  7095 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:02:56.037726  7095 net.cpp:165] Memory required for data: 388454400
I0726 10:02:56.037739  7095 layer_factory.hpp:77] Creating layer pool2
I0726 10:02:56.037755  7095 net.cpp:100] Creating Layer pool2
I0726 10:02:56.037765  7095 net.cpp:434] pool2 <- conv2
I0726 10:02:56.037781  7095 net.cpp:408] pool2 -> pool2
I0726 10:02:56.037797  7095 net.cpp:408] pool2 -> pool2_mask
I0726 10:02:56.037853  7095 net.cpp:150] Setting up pool2
I0726 10:02:56.037870  7095 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:02:56.037885  7095 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:02:56.037894  7095 net.cpp:165] Memory required for data: 399513600
I0726 10:02:56.037905  7095 layer_factory.hpp:77] Creating layer conv3
I0726 10:02:56.037925  7095 net.cpp:100] Creating Layer conv3
I0726 10:02:56.037937  7095 net.cpp:434] conv3 <- pool2
I0726 10:02:56.037953  7095 net.cpp:408] conv3 -> conv3
I0726 10:02:56.058590  7095 net.cpp:150] Setting up conv3
I0726 10:02:56.058660  7095 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:02:56.058670  7095 net.cpp:165] Memory required for data: 405043200
I0726 10:02:56.058692  7095 layer_factory.hpp:77] Creating layer conv3_bn
I0726 10:02:56.058742  7095 net.cpp:100] Creating Layer conv3_bn
I0726 10:02:56.058751  7095 net.cpp:434] conv3_bn <- conv3
I0726 10:02:56.058763  7095 net.cpp:395] conv3_bn -> conv3 (in-place)
I0726 10:02:56.059021  7095 net.cpp:150] Setting up conv3_bn
I0726 10:02:56.059036  7095 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:02:56.059047  7095 net.cpp:165] Memory required for data: 410572800
I0726 10:02:56.059059  7095 layer_factory.hpp:77] Creating layer relu3
I0726 10:02:56.059072  7095 net.cpp:100] Creating Layer relu3
I0726 10:02:56.059080  7095 net.cpp:434] relu3 <- conv3
I0726 10:02:56.059089  7095 net.cpp:395] relu3 -> conv3 (in-place)
I0726 10:02:56.059101  7095 net.cpp:150] Setting up relu3
I0726 10:02:56.059111  7095 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:02:56.059118  7095 net.cpp:165] Memory required for data: 416102400
I0726 10:02:56.059125  7095 layer_factory.hpp:77] Creating layer pool3
I0726 10:02:56.059139  7095 net.cpp:100] Creating Layer pool3
I0726 10:02:56.059146  7095 net.cpp:434] pool3 <- conv3
I0726 10:02:56.059155  7095 net.cpp:408] pool3 -> pool3
I0726 10:02:56.059168  7095 net.cpp:408] pool3 -> pool3_mask
I0726 10:02:56.059221  7095 net.cpp:150] Setting up pool3
I0726 10:02:56.059233  7095 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:02:56.059243  7095 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:02:56.059252  7095 net.cpp:165] Memory required for data: 418867200
I0726 10:02:56.059257  7095 layer_factory.hpp:77] Creating layer conv4
I0726 10:02:56.059274  7095 net.cpp:100] Creating Layer conv4
I0726 10:02:56.059283  7095 net.cpp:434] conv4 <- pool3
I0726 10:02:56.059295  7095 net.cpp:408] conv4 -> conv4
I0726 10:02:56.069360  7095 net.cpp:150] Setting up conv4
I0726 10:02:56.069458  7095 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:02:56.069475  7095 net.cpp:165] Memory required for data: 420249600
I0726 10:02:56.069495  7095 layer_factory.hpp:77] Creating layer conv4_bn
I0726 10:02:56.069526  7095 net.cpp:100] Creating Layer conv4_bn
I0726 10:02:56.069540  7095 net.cpp:434] conv4_bn <- conv4
I0726 10:02:56.069552  7095 net.cpp:395] conv4_bn -> conv4 (in-place)
I0726 10:02:56.069821  7095 net.cpp:150] Setting up conv4_bn
I0726 10:02:56.069839  7095 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:02:56.069846  7095 net.cpp:165] Memory required for data: 421632000
I0726 10:02:56.069859  7095 layer_factory.hpp:77] Creating layer relu4
I0726 10:02:56.069875  7095 net.cpp:100] Creating Layer relu4
I0726 10:02:56.069883  7095 net.cpp:434] relu4 <- conv4
I0726 10:02:56.069892  7095 net.cpp:395] relu4 -> conv4 (in-place)
I0726 10:02:56.069905  7095 net.cpp:150] Setting up relu4
I0726 10:02:56.069914  7095 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:02:56.069936  7095 net.cpp:165] Memory required for data: 423014400
I0726 10:02:56.069949  7095 layer_factory.hpp:77] Creating layer pool4
I0726 10:02:56.069968  7095 net.cpp:100] Creating Layer pool4
I0726 10:02:56.069977  7095 net.cpp:434] pool4 <- conv4
I0726 10:02:56.069995  7095 net.cpp:408] pool4 -> pool4
I0726 10:02:56.070010  7095 net.cpp:408] pool4 -> pool4_mask
I0726 10:02:56.070065  7095 net.cpp:150] Setting up pool4
I0726 10:02:56.070080  7095 net.cpp:157] Top shape: 2 64 23 30 (88320)
I0726 10:02:56.070091  7095 net.cpp:157] Top shape: 2 64 23 30 (88320)
I0726 10:02:56.070101  7095 net.cpp:165] Memory required for data: 423720960
I0726 10:02:56.070108  7095 layer_factory.hpp:77] Creating layer upsample4
I0726 10:02:56.070122  7095 net.cpp:100] Creating Layer upsample4
I0726 10:02:56.070132  7095 net.cpp:434] upsample4 <- pool4
I0726 10:02:56.070142  7095 net.cpp:434] upsample4 <- pool4_mask
I0726 10:02:56.070154  7095 net.cpp:408] upsample4 -> upsample4
I0726 10:02:56.070168  7095 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 10:02:56.070196  7095 net.cpp:150] Setting up upsample4
I0726 10:02:56.070209  7095 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:02:56.070247  7095 net.cpp:165] Memory required for data: 425103360
I0726 10:02:56.070256  7095 layer_factory.hpp:77] Creating layer conv_decode4
I0726 10:02:56.070276  7095 net.cpp:100] Creating Layer conv_decode4
I0726 10:02:56.070284  7095 net.cpp:434] conv_decode4 <- upsample4
I0726 10:02:56.070296  7095 net.cpp:408] conv_decode4 -> conv_decode4
I0726 10:02:56.090471  7095 net.cpp:150] Setting up conv_decode4
I0726 10:02:56.090543  7095 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:02:56.090553  7095 net.cpp:165] Memory required for data: 426485760
I0726 10:02:56.090575  7095 layer_factory.hpp:77] Creating layer conv_decode4_bn
I0726 10:02:56.090595  7095 net.cpp:100] Creating Layer conv_decode4_bn
I0726 10:02:56.090603  7095 net.cpp:434] conv_decode4_bn <- conv_decode4
I0726 10:02:56.090615  7095 net.cpp:395] conv_decode4_bn -> conv_decode4 (in-place)
I0726 10:02:56.090859  7095 net.cpp:150] Setting up conv_decode4_bn
I0726 10:02:56.090874  7095 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:02:56.090883  7095 net.cpp:165] Memory required for data: 427868160
I0726 10:02:56.090894  7095 layer_factory.hpp:77] Creating layer upsample3
I0726 10:02:56.090920  7095 net.cpp:100] Creating Layer upsample3
I0726 10:02:56.090930  7095 net.cpp:434] upsample3 <- conv_decode4
I0726 10:02:56.090940  7095 net.cpp:434] upsample3 <- pool3_mask
I0726 10:02:56.090952  7095 net.cpp:408] upsample3 -> upsample3
I0726 10:02:56.090965  7095 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 10:02:56.090994  7095 net.cpp:150] Setting up upsample3
I0726 10:02:56.091006  7095 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:02:56.091014  7095 net.cpp:165] Memory required for data: 433397760
I0726 10:02:56.091022  7095 layer_factory.hpp:77] Creating layer conv_decode3
I0726 10:02:56.091040  7095 net.cpp:100] Creating Layer conv_decode3
I0726 10:02:56.091049  7095 net.cpp:434] conv_decode3 <- upsample3
I0726 10:02:56.091061  7095 net.cpp:408] conv_decode3 -> conv_decode3
I0726 10:02:56.102797  7095 net.cpp:150] Setting up conv_decode3
I0726 10:02:56.102849  7095 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:02:56.102856  7095 net.cpp:165] Memory required for data: 438927360
I0726 10:02:56.102869  7095 layer_factory.hpp:77] Creating layer conv_decode3_bn
I0726 10:02:56.102885  7095 net.cpp:100] Creating Layer conv_decode3_bn
I0726 10:02:56.102895  7095 net.cpp:434] conv_decode3_bn <- conv_decode3
I0726 10:02:56.102905  7095 net.cpp:395] conv_decode3_bn -> conv_decode3 (in-place)
I0726 10:02:56.103147  7095 net.cpp:150] Setting up conv_decode3_bn
I0726 10:02:56.103159  7095 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:02:56.103168  7095 net.cpp:165] Memory required for data: 444456960
I0726 10:02:56.103178  7095 layer_factory.hpp:77] Creating layer upsample2
I0726 10:02:56.103191  7095 net.cpp:100] Creating Layer upsample2
I0726 10:02:56.103199  7095 net.cpp:434] upsample2 <- conv_decode3
I0726 10:02:56.103207  7095 net.cpp:434] upsample2 <- pool2_mask
I0726 10:02:56.103219  7095 net.cpp:408] upsample2 -> upsample2
I0726 10:02:56.103230  7095 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 10:02:56.103257  7095 net.cpp:150] Setting up upsample2
I0726 10:02:56.103269  7095 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:02:56.103277  7095 net.cpp:165] Memory required for data: 466575360
I0726 10:02:56.103286  7095 layer_factory.hpp:77] Creating layer conv_decode2
I0726 10:02:56.103302  7095 net.cpp:100] Creating Layer conv_decode2
I0726 10:02:56.103310  7095 net.cpp:434] conv_decode2 <- upsample2
I0726 10:02:56.103322  7095 net.cpp:408] conv_decode2 -> conv_decode2
I0726 10:02:56.123329  7095 net.cpp:150] Setting up conv_decode2
I0726 10:02:56.123399  7095 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:02:56.123409  7095 net.cpp:165] Memory required for data: 488693760
I0726 10:02:56.123450  7095 layer_factory.hpp:77] Creating layer conv_decode2_bn
I0726 10:02:56.123468  7095 net.cpp:100] Creating Layer conv_decode2_bn
I0726 10:02:56.123477  7095 net.cpp:434] conv_decode2_bn <- conv_decode2
I0726 10:02:56.123489  7095 net.cpp:395] conv_decode2_bn -> conv_decode2 (in-place)
I0726 10:02:56.123802  7095 net.cpp:150] Setting up conv_decode2_bn
I0726 10:02:56.123817  7095 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:02:56.123824  7095 net.cpp:165] Memory required for data: 510812160
I0726 10:02:56.123834  7095 layer_factory.hpp:77] Creating layer upsample1
I0726 10:02:56.123857  7095 net.cpp:100] Creating Layer upsample1
I0726 10:02:56.123867  7095 net.cpp:434] upsample1 <- conv_decode2
I0726 10:02:56.123883  7095 net.cpp:434] upsample1 <- pool1_mask
I0726 10:02:56.123898  7095 net.cpp:408] upsample1 -> upsample1
I0726 10:02:56.123913  7095 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 10:02:56.123939  7095 net.cpp:150] Setting up upsample1
I0726 10:02:56.123950  7095 net.cpp:157] Top shape: 2 64 360 480 (22118400)
I0726 10:02:56.123965  7095 net.cpp:165] Memory required for data: 599285760
I0726 10:02:56.123972  7095 layer_factory.hpp:77] Creating layer conv_decode1
I0726 10:02:56.123991  7095 net.cpp:100] Creating Layer conv_decode1
I0726 10:02:56.123998  7095 net.cpp:434] conv_decode1 <- upsample1
I0726 10:02:56.124011  7095 net.cpp:408] conv_decode1 -> conv_decode1
I0726 10:02:56.148838  7095 net.cpp:150] Setting up conv_decode1
I0726 10:02:56.148916  7095 net.cpp:157] Top shape: 2 64 360 480 (22118400)
I0726 10:02:56.148926  7095 net.cpp:165] Memory required for data: 687759360
I0726 10:02:56.148946  7095 layer_factory.hpp:77] Creating layer conv_decode1_bn
I0726 10:02:56.148967  7095 net.cpp:100] Creating Layer conv_decode1_bn
I0726 10:02:56.148977  7095 net.cpp:434] conv_decode1_bn <- conv_decode1
I0726 10:02:56.148989  7095 net.cpp:395] conv_decode1_bn -> conv_decode1 (in-place)
I0726 10:02:56.149641  7095 net.cpp:150] Setting up conv_decode1_bn
I0726 10:02:56.149658  7095 net.cpp:157] Top shape: 2 64 360 480 (22118400)
I0726 10:02:56.149664  7095 net.cpp:165] Memory required for data: 776232960
I0726 10:02:56.149675  7095 layer_factory.hpp:77] Creating layer conv_classifier
I0726 10:02:56.149693  7095 net.cpp:100] Creating Layer conv_classifier
I0726 10:02:56.149699  7095 net.cpp:434] conv_classifier <- conv_decode1
I0726 10:02:56.149709  7095 net.cpp:408] conv_classifier -> conv_classifier
I0726 10:02:56.152384  7095 net.cpp:150] Setting up conv_classifier
I0726 10:02:56.152410  7095 net.cpp:157] Top shape: 2 2 360 480 (691200)
I0726 10:02:56.152417  7095 net.cpp:165] Memory required for data: 778997760
I0726 10:02:56.152438  7095 layer_factory.hpp:77] Creating layer conv_classifier_conv_classifier_0_split
I0726 10:02:56.152457  7095 net.cpp:100] Creating Layer conv_classifier_conv_classifier_0_split
I0726 10:02:56.152465  7095 net.cpp:434] conv_classifier_conv_classifier_0_split <- conv_classifier
I0726 10:02:56.152478  7095 net.cpp:408] conv_classifier_conv_classifier_0_split -> conv_classifier_conv_classifier_0_split_0
I0726 10:02:56.152493  7095 net.cpp:408] conv_classifier_conv_classifier_0_split -> conv_classifier_conv_classifier_0_split_1
I0726 10:02:56.152546  7095 net.cpp:150] Setting up conv_classifier_conv_classifier_0_split
I0726 10:02:56.152559  7095 net.cpp:157] Top shape: 2 2 360 480 (691200)
I0726 10:02:56.152570  7095 net.cpp:157] Top shape: 2 2 360 480 (691200)
I0726 10:02:56.152576  7095 net.cpp:165] Memory required for data: 784527360
I0726 10:02:56.152585  7095 layer_factory.hpp:77] Creating layer loss
I0726 10:02:56.152598  7095 net.cpp:100] Creating Layer loss
I0726 10:02:56.152607  7095 net.cpp:434] loss <- conv_classifier_conv_classifier_0_split_0
I0726 10:02:56.152616  7095 net.cpp:434] loss <- label_data_1_split_0
I0726 10:02:56.152627  7095 net.cpp:408] loss -> loss
I0726 10:02:56.152642  7095 layer_factory.hpp:77] Creating layer loss
I0726 10:02:56.159791  7095 net.cpp:150] Setting up loss
I0726 10:02:56.159857  7095 net.cpp:157] Top shape: (1)
I0726 10:02:56.159865  7095 net.cpp:160]     with loss weight 1
I0726 10:02:56.159885  7095 net.cpp:165] Memory required for data: 784527364
I0726 10:02:56.159894  7095 layer_factory.hpp:77] Creating layer accuracy
I0726 10:02:56.159914  7095 net.cpp:100] Creating Layer accuracy
I0726 10:02:56.159924  7095 net.cpp:434] accuracy <- conv_classifier_conv_classifier_0_split_1
I0726 10:02:56.159936  7095 net.cpp:434] accuracy <- label_data_1_split_1
I0726 10:02:56.159948  7095 net.cpp:408] accuracy -> accuracy
I0726 10:02:56.159962  7095 net.cpp:408] accuracy -> per_class_accuracy
I0726 10:02:56.160010  7095 net.cpp:150] Setting up accuracy
I0726 10:02:56.160022  7095 net.cpp:157] Top shape: (1)
I0726 10:02:56.160032  7095 net.cpp:157] Top shape: 2 (2)
I0726 10:02:56.160038  7095 net.cpp:165] Memory required for data: 784527376
I0726 10:02:56.160046  7095 net.cpp:228] accuracy does not need backward computation.
I0726 10:02:56.160054  7095 net.cpp:226] loss needs backward computation.
I0726 10:02:56.160063  7095 net.cpp:226] conv_classifier_conv_classifier_0_split needs backward computation.
I0726 10:02:56.160082  7095 net.cpp:226] conv_classifier needs backward computation.
I0726 10:02:56.160092  7095 net.cpp:226] conv_decode1_bn needs backward computation.
I0726 10:02:56.160100  7095 net.cpp:226] conv_decode1 needs backward computation.
I0726 10:02:56.160109  7095 net.cpp:226] upsample1 needs backward computation.
I0726 10:02:56.160117  7095 net.cpp:226] conv_decode2_bn needs backward computation.
I0726 10:02:56.160125  7095 net.cpp:226] conv_decode2 needs backward computation.
I0726 10:02:56.160133  7095 net.cpp:226] upsample2 needs backward computation.
I0726 10:02:56.160142  7095 net.cpp:226] conv_decode3_bn needs backward computation.
I0726 10:02:56.160149  7095 net.cpp:226] conv_decode3 needs backward computation.
I0726 10:02:56.160158  7095 net.cpp:226] upsample3 needs backward computation.
I0726 10:02:56.160181  7095 net.cpp:226] conv_decode4_bn needs backward computation.
I0726 10:02:56.160192  7095 net.cpp:226] conv_decode4 needs backward computation.
I0726 10:02:56.160200  7095 net.cpp:226] upsample4 needs backward computation.
I0726 10:02:56.160209  7095 net.cpp:226] pool4 needs backward computation.
I0726 10:02:56.160218  7095 net.cpp:226] relu4 needs backward computation.
I0726 10:02:56.160225  7095 net.cpp:226] conv4_bn needs backward computation.
I0726 10:02:56.160233  7095 net.cpp:226] conv4 needs backward computation.
I0726 10:02:56.160241  7095 net.cpp:226] pool3 needs backward computation.
I0726 10:02:56.160249  7095 net.cpp:226] relu3 needs backward computation.
I0726 10:02:56.160257  7095 net.cpp:226] conv3_bn needs backward computation.
I0726 10:02:56.160264  7095 net.cpp:226] conv3 needs backward computation.
I0726 10:02:56.160274  7095 net.cpp:226] pool2 needs backward computation.
I0726 10:02:56.160281  7095 net.cpp:226] relu2 needs backward computation.
I0726 10:02:56.160289  7095 net.cpp:226] conv2_bn needs backward computation.
I0726 10:02:56.160296  7095 net.cpp:226] conv2 needs backward computation.
I0726 10:02:56.160305  7095 net.cpp:226] pool1 needs backward computation.
I0726 10:02:56.160312  7095 net.cpp:226] relu1 needs backward computation.
I0726 10:02:56.160320  7095 net.cpp:226] conv1_bn needs backward computation.
I0726 10:02:56.160327  7095 net.cpp:226] conv1 needs backward computation.
I0726 10:02:56.160336  7095 net.cpp:228] norm does not need backward computation.
I0726 10:02:56.160343  7095 net.cpp:228] label_data_1_split does not need backward computation.
I0726 10:02:56.160352  7095 net.cpp:228] data does not need backward computation.
I0726 10:02:56.160359  7095 net.cpp:270] This network produces output accuracy
I0726 10:02:56.160368  7095 net.cpp:270] This network produces output loss
I0726 10:02:56.160377  7095 net.cpp:270] This network produces output per_class_accuracy
I0726 10:02:56.160408  7095 net.cpp:283] Network initialization done.
I0726 10:02:56.160583  7095 solver.cpp:60] Solver scaffolding done.
I0726 10:02:56.164505  7095 caffe.cpp:155] Finetuning from examples/segnet/segnet_train/premodel/segnet_basic_camvid.caffemodel
I0726 10:02:56.185220  7095 net.cpp:761] Ignoring source layer dense_softmax_inner_prod
I0726 10:02:56.200603  7095 net.cpp:761] Ignoring source layer dense_softmax_inner_prod
I0726 10:02:56.226191  7095 parallel.cpp:392] GPUs pairs 2:3
I0726 10:02:59.569372  7095 dense_image_data_layer.cpp:49] Opening file data/mydata/train.txt
I0726 10:02:59.569448  7095 dense_image_data_layer.cpp:59] Shuffling data
I0726 10:02:59.569464  7095 dense_image_data_layer.cpp:64] A total of 4 examples.
I0726 10:02:59.628685  7095 dense_image_data_layer.cpp:117] output data size: 2,3,360,480
I0726 10:02:59.810797  7095 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 10:02:59.821377  7095 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 10:02:59.832394  7095 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 10:02:59.840471  7095 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 10:02:59.864751  7095 parallel.cpp:425] Starting Optimization
I0726 10:02:59.864867  7095 solver.cpp:279] Solving segnet
I0726 10:02:59.864881  7095 solver.cpp:280] Learning Rate Policy: step
I0726 10:03:00.596987  7095 solver.cpp:228] Iteration 0, loss = 5.45363
I0726 10:03:00.597064  7095 solver.cpp:244]     Train net output #0: accuracy = 0.456059
I0726 10:03:00.597090  7095 solver.cpp:244]     Train net output #1: loss = 5.45363 (* 1 = 5.45363 loss)
I0726 10:03:00.597098  7095 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.469627
I0726 10:03:00.597106  7095 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.386439
I0726 10:03:00.894776  7095 sgd_solver.cpp:106] Iteration 0, lr = 0.01
I0726 10:03:09.009678  7095 solver.cpp:454] Snapshotting to binary proto file examples/segnet/segnet_train/segnet_basic/seg_iter_13.caffemodel
I0726 10:03:09.300122  7095 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/segnet/segnet_train/segnet_basic/seg_iter_13.solverstate
I0726 10:03:09.309164  7095 solver.cpp:301] Optimization stopped early.
I0726 10:03:09.379047  7095 caffe.cpp:254] Optimization Done.
I0726 10:07:42.254470 20213 caffe.cpp:217] Using GPUs 2, 3
I0726 10:07:42.460163 20213 caffe.cpp:222] GPU 2: Graphics Device
I0726 10:07:42.468139 20213 caffe.cpp:222] GPU 3: Graphics Device
I0726 10:07:46.547133 20213 solver.cpp:48] Initializing solver from parameters: 
test_iter: 1
test_interval: 10000000
base_lr: 0.01
display: 20
max_iter: 200000
lr_policy: "step"
gamma: 1
momentum: 0.9
weight_decay: 0.0005
stepsize: 15000
snapshot: 1000
snapshot_prefix: "examples/segnet/segnet_train/segnet_basic/seg"
solver_mode: GPU
device_id: 2
net: "examples/segnet/segnet_train.prototxt"
train_state {
  level: 0
  stage: ""
}
test_initialization: false
I0726 10:07:46.547384 20213 solver.cpp:91] Creating training net from net file: examples/segnet/segnet_train.prototxt
I0726 10:07:46.548837 20213 net.cpp:58] Initializing net from parameters: 
name: "segnet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "data"
  type: "DenseImageData"
  top: "data"
  top: "label"
  dense_image_data_param {
    source: "/data/dengtingqiang/caffe-segnet-cudnn/caffe-segnet-cudnn5/data/mydata/train.txt"
    batch_size: 2
    shuffle: true
  }
}
layer {
  name: "norm"
  type: "LRN"
  bottom: "data"
  top: "norm"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "norm"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv1_bn"
  type: "BN"
  bottom: "conv1"
  top: "conv1"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  top: "pool1_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv2_bn"
  type: "BN"
  bottom: "conv2"
  top: "conv2"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  top: "pool2_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv3_bn"
  type: "BN"
  bottom: "conv3"
  top: "conv3"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  top: "pool3_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv4_bn"
  type: "BN"
  bottom: "conv4"
  top: "conv4"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4"
  top: "pool4"
  top: "pool4_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "upsample4"
  type: "Upsample"
  bottom: "pool4"
  bottom: "pool4_mask"
  top: "upsample4"
  upsample_param {
    scale: 2
    pad_out_h: true
  }
}
layer {
  name: "conv_decode4"
  type: "Convolution"
  bottom: "upsample4"
  top: "conv_decode4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv_decode4_bn"
  type: "BN"
  bottom: "conv_decode4"
  top: "conv_decode4"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "upsample3"
  type: "Upsample"
  bottom: "conv_decode4"
  bottom: "pool3_mask"
  top: "upsample3"
  upsample_param {
    scale: 2
  }
}
layer {
  name: "conv_decode3"
  type: "Convolution"
  bottom: "upsample3"
  top: "conv_decode3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv_decode3_bn"
  type: "BN"
  bottom: "conv_decode3"
  top: "conv_decode3"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "upsample2"
  type: "Upsample"
  bottom: "conv_decode3"
  bottom: "pool2_mask"
  top: "upsample2"
  upsample_param {
    scale: 2
  }
}
layer {
  name: "conv_decode2"
  type: "Convolution"
  bottom: "upsample2"
  top: "conv_decode2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv_decode2_bn"
  type: "BN"
  bottom: "conv_decode2"
  top: "conv_decode2"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "upsample1"
  type: "Upsample"
  bottom: "conv_decode2"
  bottom: "pool1_mask"
  top: "upsample1"
  upsample_param {
    scale: 2
  }
}
layer {
  name: "conv_decode1"
  type: "Convolution"
  bottom: "upsample1"
  top: "conv_decode1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv_decode1_bn"
  type: "BN"
  bottom: "conv_decode1"
  top: "conv_decode1"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "conv_classifier"
  type: "Convolution"
  bottom: "conv_decode1"
  top: "conv_classifier"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 2
    kernel_size: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "conv_classifier"
  bottom: "label"
  top: "loss"
  loss_param {
    ignore_label: 2
    weight_by_label_freqs: true
    class_weighting: 0.59744
    class_weighting: 3.06568
  }
  softmax_param {
    engine: CAFFE
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "conv_classifier"
  bottom: "label"
  top: "accuracy"
  top: "per_class_accuracy"
}
I0726 10:07:46.549119 20213 layer_factory.hpp:77] Creating layer data
I0726 10:07:46.549185 20213 net.cpp:100] Creating Layer data
I0726 10:07:46.549199 20213 net.cpp:408] data -> data
I0726 10:07:46.549229 20213 net.cpp:408] data -> label
I0726 10:07:46.549257 20213 dense_image_data_layer.cpp:49] Opening file /data/dengtingqiang/caffe-segnet-cudnn/caffe-segnet-cudnn5/data/mydata/train.txt
I0726 10:07:46.549330 20213 dense_image_data_layer.cpp:59] Shuffling data
I0726 10:07:46.549741 20213 dense_image_data_layer.cpp:64] A total of 4 examples.
I0726 10:07:46.717383 20213 dense_image_data_layer.cpp:117] output data size: 2,3,360,480
I0726 10:07:46.722506 20213 net.cpp:150] Setting up data
I0726 10:07:46.722548 20213 net.cpp:157] Top shape: 2 3 360 480 (1036800)
I0726 10:07:46.722560 20213 net.cpp:157] Top shape: 2 1 360 480 (345600)
I0726 10:07:46.722568 20213 net.cpp:165] Memory required for data: 5529600
I0726 10:07:46.722581 20213 layer_factory.hpp:77] Creating layer label_data_1_split
I0726 10:07:46.722612 20213 net.cpp:100] Creating Layer label_data_1_split
I0726 10:07:46.722622 20213 net.cpp:434] label_data_1_split <- label
I0726 10:07:46.722641 20213 net.cpp:408] label_data_1_split -> label_data_1_split_0
I0726 10:07:46.722659 20213 net.cpp:408] label_data_1_split -> label_data_1_split_1
I0726 10:07:46.722718 20213 net.cpp:150] Setting up label_data_1_split
I0726 10:07:46.722731 20213 net.cpp:157] Top shape: 2 1 360 480 (345600)
I0726 10:07:46.722740 20213 net.cpp:157] Top shape: 2 1 360 480 (345600)
I0726 10:07:46.722748 20213 net.cpp:165] Memory required for data: 8294400
I0726 10:07:46.722755 20213 layer_factory.hpp:77] Creating layer norm
I0726 10:07:46.722772 20213 net.cpp:100] Creating Layer norm
I0726 10:07:46.722781 20213 net.cpp:434] norm <- data
I0726 10:07:46.722791 20213 net.cpp:408] norm -> norm
I0726 10:07:46.722837 20213 net.cpp:150] Setting up norm
I0726 10:07:46.722851 20213 net.cpp:157] Top shape: 2 3 360 480 (1036800)
I0726 10:07:46.722856 20213 net.cpp:165] Memory required for data: 12441600
I0726 10:07:46.722867 20213 layer_factory.hpp:77] Creating layer conv1
I0726 10:07:46.722887 20213 net.cpp:100] Creating Layer conv1
I0726 10:07:46.722895 20213 net.cpp:434] conv1 <- norm
I0726 10:07:46.722908 20213 net.cpp:408] conv1 -> conv1
I0726 10:07:46.727541 20213 net.cpp:150] Setting up conv1
I0726 10:07:46.727603 20213 net.cpp:157] Top shape: 2 64 360 480 (22118400)
I0726 10:07:46.727613 20213 net.cpp:165] Memory required for data: 100915200
I0726 10:07:46.727640 20213 layer_factory.hpp:77] Creating layer conv1_bn
I0726 10:07:46.727672 20213 net.cpp:100] Creating Layer conv1_bn
I0726 10:07:46.727681 20213 net.cpp:434] conv1_bn <- conv1
I0726 10:07:46.727692 20213 net.cpp:395] conv1_bn -> conv1 (in-place)
I0726 10:07:46.731621 20213 net.cpp:150] Setting up conv1_bn
I0726 10:07:46.731681 20213 net.cpp:157] Top shape: 2 64 360 480 (22118400)
I0726 10:07:46.731690 20213 net.cpp:165] Memory required for data: 189388800
I0726 10:07:46.731714 20213 layer_factory.hpp:77] Creating layer relu1
I0726 10:07:46.731730 20213 net.cpp:100] Creating Layer relu1
I0726 10:07:46.731739 20213 net.cpp:434] relu1 <- conv1
I0726 10:07:46.731750 20213 net.cpp:395] relu1 -> conv1 (in-place)
I0726 10:07:46.731765 20213 net.cpp:150] Setting up relu1
I0726 10:07:46.731778 20213 net.cpp:157] Top shape: 2 64 360 480 (22118400)
I0726 10:07:46.731786 20213 net.cpp:165] Memory required for data: 277862400
I0726 10:07:46.731792 20213 layer_factory.hpp:77] Creating layer pool1
I0726 10:07:46.731806 20213 net.cpp:100] Creating Layer pool1
I0726 10:07:46.731815 20213 net.cpp:434] pool1 <- conv1
I0726 10:07:46.731825 20213 net.cpp:408] pool1 -> pool1
I0726 10:07:46.731840 20213 net.cpp:408] pool1 -> pool1_mask
I0726 10:07:46.731899 20213 net.cpp:150] Setting up pool1
I0726 10:07:46.731912 20213 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:07:46.731920 20213 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:07:46.731930 20213 net.cpp:165] Memory required for data: 322099200
I0726 10:07:46.731961 20213 layer_factory.hpp:77] Creating layer conv2
I0726 10:07:46.731979 20213 net.cpp:100] Creating Layer conv2
I0726 10:07:46.731989 20213 net.cpp:434] conv2 <- pool1
I0726 10:07:46.732000 20213 net.cpp:408] conv2 -> conv2
I0726 10:07:46.759486 20213 net.cpp:150] Setting up conv2
I0726 10:07:46.759558 20213 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:07:46.759568 20213 net.cpp:165] Memory required for data: 344217600
I0726 10:07:46.759593 20213 layer_factory.hpp:77] Creating layer conv2_bn
I0726 10:07:46.759616 20213 net.cpp:100] Creating Layer conv2_bn
I0726 10:07:46.759626 20213 net.cpp:434] conv2_bn <- conv2
I0726 10:07:46.759639 20213 net.cpp:395] conv2_bn -> conv2 (in-place)
I0726 10:07:46.759994 20213 net.cpp:150] Setting up conv2_bn
I0726 10:07:46.760010 20213 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:07:46.760018 20213 net.cpp:165] Memory required for data: 366336000
I0726 10:07:46.760030 20213 layer_factory.hpp:77] Creating layer relu2
I0726 10:07:46.760041 20213 net.cpp:100] Creating Layer relu2
I0726 10:07:46.760048 20213 net.cpp:434] relu2 <- conv2
I0726 10:07:46.760057 20213 net.cpp:395] relu2 -> conv2 (in-place)
I0726 10:07:46.760067 20213 net.cpp:150] Setting up relu2
I0726 10:07:46.760076 20213 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:07:46.760083 20213 net.cpp:165] Memory required for data: 388454400
I0726 10:07:46.760090 20213 layer_factory.hpp:77] Creating layer pool2
I0726 10:07:46.760100 20213 net.cpp:100] Creating Layer pool2
I0726 10:07:46.760109 20213 net.cpp:434] pool2 <- conv2
I0726 10:07:46.760119 20213 net.cpp:408] pool2 -> pool2
I0726 10:07:46.760133 20213 net.cpp:408] pool2 -> pool2_mask
I0726 10:07:46.760174 20213 net.cpp:150] Setting up pool2
I0726 10:07:46.760185 20213 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:07:46.760193 20213 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:07:46.760201 20213 net.cpp:165] Memory required for data: 399513600
I0726 10:07:46.760210 20213 layer_factory.hpp:77] Creating layer conv3
I0726 10:07:46.760224 20213 net.cpp:100] Creating Layer conv3
I0726 10:07:46.760233 20213 net.cpp:434] conv3 <- pool2
I0726 10:07:46.760246 20213 net.cpp:408] conv3 -> conv3
I0726 10:07:46.769623 20213 net.cpp:150] Setting up conv3
I0726 10:07:46.769681 20213 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:07:46.769690 20213 net.cpp:165] Memory required for data: 405043200
I0726 10:07:46.769711 20213 layer_factory.hpp:77] Creating layer conv3_bn
I0726 10:07:46.769727 20213 net.cpp:100] Creating Layer conv3_bn
I0726 10:07:46.769748 20213 net.cpp:434] conv3_bn <- conv3
I0726 10:07:46.769762 20213 net.cpp:395] conv3_bn -> conv3 (in-place)
I0726 10:07:46.770000 20213 net.cpp:150] Setting up conv3_bn
I0726 10:07:46.770015 20213 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:07:46.770022 20213 net.cpp:165] Memory required for data: 410572800
I0726 10:07:46.770036 20213 layer_factory.hpp:77] Creating layer relu3
I0726 10:07:46.770050 20213 net.cpp:100] Creating Layer relu3
I0726 10:07:46.770057 20213 net.cpp:434] relu3 <- conv3
I0726 10:07:46.770066 20213 net.cpp:395] relu3 -> conv3 (in-place)
I0726 10:07:46.770078 20213 net.cpp:150] Setting up relu3
I0726 10:07:46.770089 20213 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:07:46.770095 20213 net.cpp:165] Memory required for data: 416102400
I0726 10:07:46.770103 20213 layer_factory.hpp:77] Creating layer pool3
I0726 10:07:46.770114 20213 net.cpp:100] Creating Layer pool3
I0726 10:07:46.770123 20213 net.cpp:434] pool3 <- conv3
I0726 10:07:46.770133 20213 net.cpp:408] pool3 -> pool3
I0726 10:07:46.770145 20213 net.cpp:408] pool3 -> pool3_mask
I0726 10:07:46.770190 20213 net.cpp:150] Setting up pool3
I0726 10:07:46.770201 20213 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:07:46.770210 20213 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:07:46.770217 20213 net.cpp:165] Memory required for data: 418867200
I0726 10:07:46.770226 20213 layer_factory.hpp:77] Creating layer conv4
I0726 10:07:46.770241 20213 net.cpp:100] Creating Layer conv4
I0726 10:07:46.770265 20213 net.cpp:434] conv4 <- pool3
I0726 10:07:46.770277 20213 net.cpp:408] conv4 -> conv4
I0726 10:07:46.804708 20213 net.cpp:150] Setting up conv4
I0726 10:07:46.804777 20213 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:07:46.804787 20213 net.cpp:165] Memory required for data: 420249600
I0726 10:07:46.804806 20213 layer_factory.hpp:77] Creating layer conv4_bn
I0726 10:07:46.804831 20213 net.cpp:100] Creating Layer conv4_bn
I0726 10:07:46.804841 20213 net.cpp:434] conv4_bn <- conv4
I0726 10:07:46.804853 20213 net.cpp:395] conv4_bn -> conv4 (in-place)
I0726 10:07:46.805116 20213 net.cpp:150] Setting up conv4_bn
I0726 10:07:46.805131 20213 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:07:46.805138 20213 net.cpp:165] Memory required for data: 421632000
I0726 10:07:46.805153 20213 layer_factory.hpp:77] Creating layer relu4
I0726 10:07:46.805167 20213 net.cpp:100] Creating Layer relu4
I0726 10:07:46.805176 20213 net.cpp:434] relu4 <- conv4
I0726 10:07:46.805186 20213 net.cpp:395] relu4 -> conv4 (in-place)
I0726 10:07:46.805197 20213 net.cpp:150] Setting up relu4
I0726 10:07:46.805207 20213 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:07:46.805214 20213 net.cpp:165] Memory required for data: 423014400
I0726 10:07:46.805223 20213 layer_factory.hpp:77] Creating layer pool4
I0726 10:07:46.805234 20213 net.cpp:100] Creating Layer pool4
I0726 10:07:46.805243 20213 net.cpp:434] pool4 <- conv4
I0726 10:07:46.805253 20213 net.cpp:408] pool4 -> pool4
I0726 10:07:46.805265 20213 net.cpp:408] pool4 -> pool4_mask
I0726 10:07:46.805312 20213 net.cpp:150] Setting up pool4
I0726 10:07:46.805325 20213 net.cpp:157] Top shape: 2 64 23 30 (88320)
I0726 10:07:46.805335 20213 net.cpp:157] Top shape: 2 64 23 30 (88320)
I0726 10:07:46.805342 20213 net.cpp:165] Memory required for data: 423720960
I0726 10:07:46.805349 20213 layer_factory.hpp:77] Creating layer upsample4
I0726 10:07:46.805373 20213 net.cpp:100] Creating Layer upsample4
I0726 10:07:46.805382 20213 net.cpp:434] upsample4 <- pool4
I0726 10:07:46.805390 20213 net.cpp:434] upsample4 <- pool4_mask
I0726 10:07:46.805402 20213 net.cpp:408] upsample4 -> upsample4
I0726 10:07:46.805416 20213 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 10:07:46.805444 20213 net.cpp:150] Setting up upsample4
I0726 10:07:46.805455 20213 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:07:46.805462 20213 net.cpp:165] Memory required for data: 425103360
I0726 10:07:46.805471 20213 layer_factory.hpp:77] Creating layer conv_decode4
I0726 10:07:46.805498 20213 net.cpp:100] Creating Layer conv_decode4
I0726 10:07:46.805507 20213 net.cpp:434] conv_decode4 <- upsample4
I0726 10:07:46.805519 20213 net.cpp:408] conv_decode4 -> conv_decode4
I0726 10:07:46.814929 20213 net.cpp:150] Setting up conv_decode4
I0726 10:07:46.814981 20213 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:07:46.814990 20213 net.cpp:165] Memory required for data: 426485760
I0726 10:07:46.815011 20213 layer_factory.hpp:77] Creating layer conv_decode4_bn
I0726 10:07:46.815026 20213 net.cpp:100] Creating Layer conv_decode4_bn
I0726 10:07:46.815034 20213 net.cpp:434] conv_decode4_bn <- conv_decode4
I0726 10:07:46.815047 20213 net.cpp:395] conv_decode4_bn -> conv_decode4 (in-place)
I0726 10:07:46.815261 20213 net.cpp:150] Setting up conv_decode4_bn
I0726 10:07:46.815275 20213 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:07:46.815282 20213 net.cpp:165] Memory required for data: 427868160
I0726 10:07:46.815297 20213 layer_factory.hpp:77] Creating layer upsample3
I0726 10:07:46.815310 20213 net.cpp:100] Creating Layer upsample3
I0726 10:07:46.815318 20213 net.cpp:434] upsample3 <- conv_decode4
I0726 10:07:46.815327 20213 net.cpp:434] upsample3 <- pool3_mask
I0726 10:07:46.815338 20213 net.cpp:408] upsample3 -> upsample3
I0726 10:07:46.815351 20213 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 10:07:46.815399 20213 net.cpp:150] Setting up upsample3
I0726 10:07:46.815412 20213 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:07:46.815418 20213 net.cpp:165] Memory required for data: 433397760
I0726 10:07:46.815428 20213 layer_factory.hpp:77] Creating layer conv_decode3
I0726 10:07:46.815443 20213 net.cpp:100] Creating Layer conv_decode3
I0726 10:07:46.815452 20213 net.cpp:434] conv_decode3 <- upsample3
I0726 10:07:46.815464 20213 net.cpp:408] conv_decode3 -> conv_decode3
I0726 10:07:46.836120 20213 net.cpp:150] Setting up conv_decode3
I0726 10:07:46.836195 20213 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:07:46.836208 20213 net.cpp:165] Memory required for data: 438927360
I0726 10:07:46.836236 20213 layer_factory.hpp:77] Creating layer conv_decode3_bn
I0726 10:07:46.836252 20213 net.cpp:100] Creating Layer conv_decode3_bn
I0726 10:07:46.836261 20213 net.cpp:434] conv_decode3_bn <- conv_decode3
I0726 10:07:46.836273 20213 net.cpp:395] conv_decode3_bn -> conv_decode3 (in-place)
I0726 10:07:46.838834 20213 net.cpp:150] Setting up conv_decode3_bn
I0726 10:07:46.838881 20213 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:07:46.838891 20213 net.cpp:165] Memory required for data: 444456960
I0726 10:07:46.838907 20213 layer_factory.hpp:77] Creating layer upsample2
I0726 10:07:46.838923 20213 net.cpp:100] Creating Layer upsample2
I0726 10:07:46.838937 20213 net.cpp:434] upsample2 <- conv_decode3
I0726 10:07:46.838953 20213 net.cpp:434] upsample2 <- pool2_mask
I0726 10:07:46.838973 20213 net.cpp:408] upsample2 -> upsample2
I0726 10:07:46.838996 20213 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 10:07:46.839071 20213 net.cpp:150] Setting up upsample2
I0726 10:07:46.839108 20213 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:07:46.839121 20213 net.cpp:165] Memory required for data: 466575360
I0726 10:07:46.839134 20213 layer_factory.hpp:77] Creating layer conv_decode2
I0726 10:07:46.839166 20213 net.cpp:100] Creating Layer conv_decode2
I0726 10:07:46.839195 20213 net.cpp:434] conv_decode2 <- upsample2
I0726 10:07:46.839226 20213 net.cpp:408] conv_decode2 -> conv_decode2
I0726 10:07:46.847864 20213 net.cpp:150] Setting up conv_decode2
I0726 10:07:46.847919 20213 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:07:46.847926 20213 net.cpp:165] Memory required for data: 488693760
I0726 10:07:46.847939 20213 layer_factory.hpp:77] Creating layer conv_decode2_bn
I0726 10:07:46.847952 20213 net.cpp:100] Creating Layer conv_decode2_bn
I0726 10:07:46.847975 20213 net.cpp:434] conv_decode2_bn <- conv_decode2
I0726 10:07:46.847986 20213 net.cpp:395] conv_decode2_bn -> conv_decode2 (in-place)
I0726 10:07:46.848263 20213 net.cpp:150] Setting up conv_decode2_bn
I0726 10:07:46.848275 20213 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:07:46.848282 20213 net.cpp:165] Memory required for data: 510812160
I0726 10:07:46.848292 20213 layer_factory.hpp:77] Creating layer upsample1
I0726 10:07:46.848304 20213 net.cpp:100] Creating Layer upsample1
I0726 10:07:46.848310 20213 net.cpp:434] upsample1 <- conv_decode2
I0726 10:07:46.848322 20213 net.cpp:434] upsample1 <- pool1_mask
I0726 10:07:46.848330 20213 net.cpp:408] upsample1 -> upsample1
I0726 10:07:46.848345 20213 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 10:07:46.848367 20213 net.cpp:150] Setting up upsample1
I0726 10:07:46.848377 20213 net.cpp:157] Top shape: 2 64 360 480 (22118400)
I0726 10:07:46.848383 20213 net.cpp:165] Memory required for data: 599285760
I0726 10:07:46.848389 20213 layer_factory.hpp:77] Creating layer conv_decode1
I0726 10:07:46.848404 20213 net.cpp:100] Creating Layer conv_decode1
I0726 10:07:46.848412 20213 net.cpp:434] conv_decode1 <- upsample1
I0726 10:07:46.848423 20213 net.cpp:408] conv_decode1 -> conv_decode1
I0726 10:07:46.865005 20213 net.cpp:150] Setting up conv_decode1
I0726 10:07:46.865100 20213 net.cpp:157] Top shape: 2 64 360 480 (22118400)
I0726 10:07:46.865109 20213 net.cpp:165] Memory required for data: 687759360
I0726 10:07:46.865123 20213 layer_factory.hpp:77] Creating layer conv_decode1_bn
I0726 10:07:46.865139 20213 net.cpp:100] Creating Layer conv_decode1_bn
I0726 10:07:46.865149 20213 net.cpp:434] conv_decode1_bn <- conv_decode1
I0726 10:07:46.865160 20213 net.cpp:395] conv_decode1_bn -> conv_decode1 (in-place)
I0726 10:07:46.880504 20213 net.cpp:150] Setting up conv_decode1_bn
I0726 10:07:46.880570 20213 net.cpp:157] Top shape: 2 64 360 480 (22118400)
I0726 10:07:46.880579 20213 net.cpp:165] Memory required for data: 776232960
I0726 10:07:46.880596 20213 layer_factory.hpp:77] Creating layer conv_classifier
I0726 10:07:46.880620 20213 net.cpp:100] Creating Layer conv_classifier
I0726 10:07:46.880630 20213 net.cpp:434] conv_classifier <- conv_decode1
I0726 10:07:46.880643 20213 net.cpp:408] conv_classifier -> conv_classifier
I0726 10:07:46.881049 20213 net.cpp:150] Setting up conv_classifier
I0726 10:07:46.881065 20213 net.cpp:157] Top shape: 2 2 360 480 (691200)
I0726 10:07:46.881072 20213 net.cpp:165] Memory required for data: 778997760
I0726 10:07:46.881091 20213 layer_factory.hpp:77] Creating layer conv_classifier_conv_classifier_0_split
I0726 10:07:46.881106 20213 net.cpp:100] Creating Layer conv_classifier_conv_classifier_0_split
I0726 10:07:46.881114 20213 net.cpp:434] conv_classifier_conv_classifier_0_split <- conv_classifier
I0726 10:07:46.881122 20213 net.cpp:408] conv_classifier_conv_classifier_0_split -> conv_classifier_conv_classifier_0_split_0
I0726 10:07:46.881132 20213 net.cpp:408] conv_classifier_conv_classifier_0_split -> conv_classifier_conv_classifier_0_split_1
I0726 10:07:46.881172 20213 net.cpp:150] Setting up conv_classifier_conv_classifier_0_split
I0726 10:07:46.881183 20213 net.cpp:157] Top shape: 2 2 360 480 (691200)
I0726 10:07:46.881191 20213 net.cpp:157] Top shape: 2 2 360 480 (691200)
I0726 10:07:46.881197 20213 net.cpp:165] Memory required for data: 784527360
I0726 10:07:46.881206 20213 layer_factory.hpp:77] Creating layer loss
I0726 10:07:46.881219 20213 net.cpp:100] Creating Layer loss
I0726 10:07:46.881227 20213 net.cpp:434] loss <- conv_classifier_conv_classifier_0_split_0
I0726 10:07:46.881235 20213 net.cpp:434] loss <- label_data_1_split_0
I0726 10:07:46.881244 20213 net.cpp:408] loss -> loss
I0726 10:07:46.881263 20213 layer_factory.hpp:77] Creating layer loss
I0726 10:07:46.884246 20213 net.cpp:150] Setting up loss
I0726 10:07:46.884272 20213 net.cpp:157] Top shape: (1)
I0726 10:07:46.884291 20213 net.cpp:160]     with loss weight 1
I0726 10:07:46.884322 20213 net.cpp:165] Memory required for data: 784527364
I0726 10:07:46.884330 20213 layer_factory.hpp:77] Creating layer accuracy
I0726 10:07:46.884341 20213 net.cpp:100] Creating Layer accuracy
I0726 10:07:46.884348 20213 net.cpp:434] accuracy <- conv_classifier_conv_classifier_0_split_1
I0726 10:07:46.884356 20213 net.cpp:434] accuracy <- label_data_1_split_1
I0726 10:07:46.884364 20213 net.cpp:408] accuracy -> accuracy
I0726 10:07:46.884374 20213 net.cpp:408] accuracy -> per_class_accuracy
I0726 10:07:46.884418 20213 net.cpp:150] Setting up accuracy
I0726 10:07:46.884429 20213 net.cpp:157] Top shape: (1)
I0726 10:07:46.884436 20213 net.cpp:157] Top shape: 2 (2)
I0726 10:07:46.884444 20213 net.cpp:165] Memory required for data: 784527376
I0726 10:07:46.884451 20213 net.cpp:228] accuracy does not need backward computation.
I0726 10:07:46.884457 20213 net.cpp:226] loss needs backward computation.
I0726 10:07:46.884466 20213 net.cpp:226] conv_classifier_conv_classifier_0_split needs backward computation.
I0726 10:07:46.884472 20213 net.cpp:226] conv_classifier needs backward computation.
I0726 10:07:46.884480 20213 net.cpp:226] conv_decode1_bn needs backward computation.
I0726 10:07:46.884487 20213 net.cpp:226] conv_decode1 needs backward computation.
I0726 10:07:46.884493 20213 net.cpp:226] upsample1 needs backward computation.
I0726 10:07:46.884502 20213 net.cpp:226] conv_decode2_bn needs backward computation.
I0726 10:07:46.884526 20213 net.cpp:226] conv_decode2 needs backward computation.
I0726 10:07:46.884532 20213 net.cpp:226] upsample2 needs backward computation.
I0726 10:07:46.884541 20213 net.cpp:226] conv_decode3_bn needs backward computation.
I0726 10:07:46.884547 20213 net.cpp:226] conv_decode3 needs backward computation.
I0726 10:07:46.884554 20213 net.cpp:226] upsample3 needs backward computation.
I0726 10:07:46.884562 20213 net.cpp:226] conv_decode4_bn needs backward computation.
I0726 10:07:46.884568 20213 net.cpp:226] conv_decode4 needs backward computation.
I0726 10:07:46.884575 20213 net.cpp:226] upsample4 needs backward computation.
I0726 10:07:46.884582 20213 net.cpp:226] pool4 needs backward computation.
I0726 10:07:46.884589 20213 net.cpp:226] relu4 needs backward computation.
I0726 10:07:46.884595 20213 net.cpp:226] conv4_bn needs backward computation.
I0726 10:07:46.884604 20213 net.cpp:226] conv4 needs backward computation.
I0726 10:07:46.884610 20213 net.cpp:226] pool3 needs backward computation.
I0726 10:07:46.884618 20213 net.cpp:226] relu3 needs backward computation.
I0726 10:07:46.884624 20213 net.cpp:226] conv3_bn needs backward computation.
I0726 10:07:46.884630 20213 net.cpp:226] conv3 needs backward computation.
I0726 10:07:46.884637 20213 net.cpp:226] pool2 needs backward computation.
I0726 10:07:46.884645 20213 net.cpp:226] relu2 needs backward computation.
I0726 10:07:46.884651 20213 net.cpp:226] conv2_bn needs backward computation.
I0726 10:07:46.884658 20213 net.cpp:226] conv2 needs backward computation.
I0726 10:07:46.884665 20213 net.cpp:226] pool1 needs backward computation.
I0726 10:07:46.884672 20213 net.cpp:226] relu1 needs backward computation.
I0726 10:07:46.884680 20213 net.cpp:226] conv1_bn needs backward computation.
I0726 10:07:46.884685 20213 net.cpp:226] conv1 needs backward computation.
I0726 10:07:46.884691 20213 net.cpp:228] norm does not need backward computation.
I0726 10:07:46.884701 20213 net.cpp:228] label_data_1_split does not need backward computation.
I0726 10:07:46.884707 20213 net.cpp:228] data does not need backward computation.
I0726 10:07:46.884714 20213 net.cpp:270] This network produces output accuracy
I0726 10:07:46.884721 20213 net.cpp:270] This network produces output loss
I0726 10:07:46.884729 20213 net.cpp:270] This network produces output per_class_accuracy
I0726 10:07:46.884762 20213 net.cpp:283] Network initialization done.
I0726 10:07:46.888165 20213 solver.cpp:181] Creating test net (#0) specified by net file: examples/segnet/segnet_train.prototxt
I0726 10:07:46.888655 20213 net.cpp:58] Initializing net from parameters: 
name: "segnet"
state {
  phase: TEST
}
layer {
  name: "data"
  type: "DenseImageData"
  top: "data"
  top: "label"
  dense_image_data_param {
    source: "/data/dengtingqiang/caffe-segnet-cudnn/caffe-segnet-cudnn5/data/mydata/train.txt"
    batch_size: 2
    shuffle: true
  }
}
layer {
  name: "norm"
  type: "LRN"
  bottom: "data"
  top: "norm"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "norm"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv1_bn"
  type: "BN"
  bottom: "conv1"
  top: "conv1"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  top: "pool1_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv2_bn"
  type: "BN"
  bottom: "conv2"
  top: "conv2"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  top: "pool2_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv3_bn"
  type: "BN"
  bottom: "conv3"
  top: "conv3"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  top: "pool3_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv4_bn"
  type: "BN"
  bottom: "conv4"
  top: "conv4"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4"
  top: "pool4"
  top: "pool4_mask"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "upsample4"
  type: "Upsample"
  bottom: "pool4"
  bottom: "pool4_mask"
  top: "upsample4"
  upsample_param {
    scale: 2
    pad_out_h: true
  }
}
layer {
  name: "conv_decode4"
  type: "Convolution"
  bottom: "upsample4"
  top: "conv_decode4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv_decode4_bn"
  type: "BN"
  bottom: "conv_decode4"
  top: "conv_decode4"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "upsample3"
  type: "Upsample"
  bottom: "conv_decode4"
  bottom: "pool3_mask"
  top: "upsample3"
  upsample_param {
    scale: 2
  }
}
layer {
  name: "conv_decode3"
  type: "Convolution"
  bottom: "upsample3"
  top: "conv_decode3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv_decode3_bn"
  type: "BN"
  bottom: "conv_decode3"
  top: "conv_decode3"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "upsample2"
  type: "Upsample"
  bottom: "conv_decode3"
  bottom: "pool2_mask"
  top: "upsample2"
  upsample_param {
    scale: 2
  }
}
layer {
  name: "conv_decode2"
  type: "Convolution"
  bottom: "upsample2"
  top: "conv_decode2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv_decode2_bn"
  type: "BN"
  bottom: "conv_decode2"
  top: "conv_decode2"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "upsample1"
  type: "Upsample"
  bottom: "conv_decode2"
  bottom: "pool1_mask"
  top: "upsample1"
  upsample_param {
    scale: 2
  }
}
layer {
  name: "conv_decode1"
  type: "Convolution"
  bottom: "upsample1"
  top: "conv_decode1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 3
    kernel_size: 7
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "conv_decode1_bn"
  type: "BN"
  bottom: "conv_decode1"
  top: "conv_decode1"
  bn_param {
    scale_filler {
      type: "constant"
      value: 1
    }
    shift_filler {
      type: "constant"
      value: 0.001
    }
  }
}
layer {
  name: "conv_classifier"
  type: "Convolution"
  bottom: "conv_decode1"
  top: "conv_classifier"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 2
    kernel_size: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "conv_classifier"
  bottom: "label"
  top: "loss"
  loss_param {
    ignore_label: 2
    weight_by_label_freqs: true
    class_weighting: 0.59744
    class_weighting: 3.06568
  }
  softmax_param {
    engine: CAFFE
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "conv_classifier"
  bottom: "label"
  top: "accuracy"
  top: "per_class_accuracy"
}
I0726 10:07:46.888885 20213 layer_factory.hpp:77] Creating layer data
I0726 10:07:46.888906 20213 net.cpp:100] Creating Layer data
I0726 10:07:46.888916 20213 net.cpp:408] data -> data
I0726 10:07:46.888929 20213 net.cpp:408] data -> label
I0726 10:07:46.888943 20213 dense_image_data_layer.cpp:49] Opening file /data/dengtingqiang/caffe-segnet-cudnn/caffe-segnet-cudnn5/data/mydata/train.txt
I0726 10:07:46.888988 20213 dense_image_data_layer.cpp:59] Shuffling data
I0726 10:07:46.889003 20213 dense_image_data_layer.cpp:64] A total of 4 examples.
I0726 10:07:46.894770 20213 dense_image_data_layer.cpp:117] output data size: 2,3,360,480
I0726 10:07:46.909838 20213 net.cpp:150] Setting up data
I0726 10:07:46.909919 20213 net.cpp:157] Top shape: 2 3 360 480 (1036800)
I0726 10:07:46.909934 20213 net.cpp:157] Top shape: 2 1 360 480 (345600)
I0726 10:07:46.909940 20213 net.cpp:165] Memory required for data: 5529600
I0726 10:07:46.909951 20213 layer_factory.hpp:77] Creating layer label_data_1_split
I0726 10:07:46.909970 20213 net.cpp:100] Creating Layer label_data_1_split
I0726 10:07:46.909979 20213 net.cpp:434] label_data_1_split <- label
I0726 10:07:46.909991 20213 net.cpp:408] label_data_1_split -> label_data_1_split_0
I0726 10:07:46.910007 20213 net.cpp:408] label_data_1_split -> label_data_1_split_1
I0726 10:07:46.910082 20213 net.cpp:150] Setting up label_data_1_split
I0726 10:07:46.910096 20213 net.cpp:157] Top shape: 2 1 360 480 (345600)
I0726 10:07:46.910104 20213 net.cpp:157] Top shape: 2 1 360 480 (345600)
I0726 10:07:46.910111 20213 net.cpp:165] Memory required for data: 8294400
I0726 10:07:46.910122 20213 layer_factory.hpp:77] Creating layer norm
I0726 10:07:46.910136 20213 net.cpp:100] Creating Layer norm
I0726 10:07:46.910147 20213 net.cpp:434] norm <- data
I0726 10:07:46.910156 20213 net.cpp:408] norm -> norm
I0726 10:07:46.910207 20213 net.cpp:150] Setting up norm
I0726 10:07:46.910219 20213 net.cpp:157] Top shape: 2 3 360 480 (1036800)
I0726 10:07:46.910226 20213 net.cpp:165] Memory required for data: 12441600
I0726 10:07:46.910243 20213 layer_factory.hpp:77] Creating layer conv1
I0726 10:07:46.910260 20213 net.cpp:100] Creating Layer conv1
I0726 10:07:46.910290 20213 net.cpp:434] conv1 <- norm
I0726 10:07:46.910302 20213 net.cpp:408] conv1 -> conv1
I0726 10:07:46.911046 20213 net.cpp:150] Setting up conv1
I0726 10:07:46.911062 20213 net.cpp:157] Top shape: 2 64 360 480 (22118400)
I0726 10:07:46.911070 20213 net.cpp:165] Memory required for data: 100915200
I0726 10:07:46.911087 20213 layer_factory.hpp:77] Creating layer conv1_bn
I0726 10:07:46.911103 20213 net.cpp:100] Creating Layer conv1_bn
I0726 10:07:46.911113 20213 net.cpp:434] conv1_bn <- conv1
I0726 10:07:46.911123 20213 net.cpp:395] conv1_bn -> conv1 (in-place)
I0726 10:07:46.921943 20213 net.cpp:150] Setting up conv1_bn
I0726 10:07:46.922019 20213 net.cpp:157] Top shape: 2 64 360 480 (22118400)
I0726 10:07:46.922029 20213 net.cpp:165] Memory required for data: 189388800
I0726 10:07:46.922055 20213 layer_factory.hpp:77] Creating layer relu1
I0726 10:07:46.922073 20213 net.cpp:100] Creating Layer relu1
I0726 10:07:46.922087 20213 net.cpp:434] relu1 <- conv1
I0726 10:07:46.922099 20213 net.cpp:395] relu1 -> conv1 (in-place)
I0726 10:07:46.922114 20213 net.cpp:150] Setting up relu1
I0726 10:07:46.922123 20213 net.cpp:157] Top shape: 2 64 360 480 (22118400)
I0726 10:07:46.922130 20213 net.cpp:165] Memory required for data: 277862400
I0726 10:07:46.922137 20213 layer_factory.hpp:77] Creating layer pool1
I0726 10:07:46.922148 20213 net.cpp:100] Creating Layer pool1
I0726 10:07:46.922155 20213 net.cpp:434] pool1 <- conv1
I0726 10:07:46.922164 20213 net.cpp:408] pool1 -> pool1
I0726 10:07:46.922175 20213 net.cpp:408] pool1 -> pool1_mask
I0726 10:07:46.922245 20213 net.cpp:150] Setting up pool1
I0726 10:07:46.922257 20213 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:07:46.922266 20213 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:07:46.922281 20213 net.cpp:165] Memory required for data: 322099200
I0726 10:07:46.922288 20213 layer_factory.hpp:77] Creating layer conv2
I0726 10:07:46.922313 20213 net.cpp:100] Creating Layer conv2
I0726 10:07:46.922322 20213 net.cpp:434] conv2 <- pool1
I0726 10:07:46.922333 20213 net.cpp:408] conv2 -> conv2
I0726 10:07:46.934270 20213 net.cpp:150] Setting up conv2
I0726 10:07:46.934350 20213 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:07:46.934363 20213 net.cpp:165] Memory required for data: 344217600
I0726 10:07:46.934397 20213 layer_factory.hpp:77] Creating layer conv2_bn
I0726 10:07:46.934425 20213 net.cpp:100] Creating Layer conv2_bn
I0726 10:07:46.934439 20213 net.cpp:434] conv2_bn <- conv2
I0726 10:07:46.934458 20213 net.cpp:395] conv2_bn -> conv2 (in-place)
I0726 10:07:46.934888 20213 net.cpp:150] Setting up conv2_bn
I0726 10:07:46.934927 20213 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:07:46.934939 20213 net.cpp:165] Memory required for data: 366336000
I0726 10:07:46.934957 20213 layer_factory.hpp:77] Creating layer relu2
I0726 10:07:46.934973 20213 net.cpp:100] Creating Layer relu2
I0726 10:07:46.934985 20213 net.cpp:434] relu2 <- conv2
I0726 10:07:46.935006 20213 net.cpp:395] relu2 -> conv2 (in-place)
I0726 10:07:46.935024 20213 net.cpp:150] Setting up relu2
I0726 10:07:46.935039 20213 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:07:46.935050 20213 net.cpp:165] Memory required for data: 388454400
I0726 10:07:46.935061 20213 layer_factory.hpp:77] Creating layer pool2
I0726 10:07:46.935079 20213 net.cpp:100] Creating Layer pool2
I0726 10:07:46.935092 20213 net.cpp:434] pool2 <- conv2
I0726 10:07:46.935107 20213 net.cpp:408] pool2 -> pool2
I0726 10:07:46.935127 20213 net.cpp:408] pool2 -> pool2_mask
I0726 10:07:46.935194 20213 net.cpp:150] Setting up pool2
I0726 10:07:46.935214 20213 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:07:46.935227 20213 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:07:46.935237 20213 net.cpp:165] Memory required for data: 399513600
I0726 10:07:46.935254 20213 layer_factory.hpp:77] Creating layer conv3
I0726 10:07:46.935277 20213 net.cpp:100] Creating Layer conv3
I0726 10:07:46.935290 20213 net.cpp:434] conv3 <- pool2
I0726 10:07:46.935308 20213 net.cpp:408] conv3 -> conv3
I0726 10:07:46.948369 20213 net.cpp:150] Setting up conv3
I0726 10:07:46.948438 20213 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:07:46.948447 20213 net.cpp:165] Memory required for data: 405043200
I0726 10:07:46.948469 20213 layer_factory.hpp:77] Creating layer conv3_bn
I0726 10:07:46.948488 20213 net.cpp:100] Creating Layer conv3_bn
I0726 10:07:46.948498 20213 net.cpp:434] conv3_bn <- conv3
I0726 10:07:46.948510 20213 net.cpp:395] conv3_bn -> conv3 (in-place)
I0726 10:07:46.948777 20213 net.cpp:150] Setting up conv3_bn
I0726 10:07:46.948793 20213 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:07:46.948801 20213 net.cpp:165] Memory required for data: 410572800
I0726 10:07:46.948812 20213 layer_factory.hpp:77] Creating layer relu3
I0726 10:07:46.948824 20213 net.cpp:100] Creating Layer relu3
I0726 10:07:46.948848 20213 net.cpp:434] relu3 <- conv3
I0726 10:07:46.948859 20213 net.cpp:395] relu3 -> conv3 (in-place)
I0726 10:07:46.948871 20213 net.cpp:150] Setting up relu3
I0726 10:07:46.948880 20213 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:07:46.948889 20213 net.cpp:165] Memory required for data: 416102400
I0726 10:07:46.948896 20213 layer_factory.hpp:77] Creating layer pool3
I0726 10:07:46.948907 20213 net.cpp:100] Creating Layer pool3
I0726 10:07:46.948920 20213 net.cpp:434] pool3 <- conv3
I0726 10:07:46.948930 20213 net.cpp:408] pool3 -> pool3
I0726 10:07:46.948948 20213 net.cpp:408] pool3 -> pool3_mask
I0726 10:07:46.949000 20213 net.cpp:150] Setting up pool3
I0726 10:07:46.949015 20213 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:07:46.949024 20213 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:07:46.949031 20213 net.cpp:165] Memory required for data: 418867200
I0726 10:07:46.949039 20213 layer_factory.hpp:77] Creating layer conv4
I0726 10:07:46.949055 20213 net.cpp:100] Creating Layer conv4
I0726 10:07:46.949064 20213 net.cpp:434] conv4 <- pool3
I0726 10:07:46.949075 20213 net.cpp:408] conv4 -> conv4
I0726 10:07:46.956539 20213 net.cpp:150] Setting up conv4
I0726 10:07:46.956563 20213 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:07:46.956570 20213 net.cpp:165] Memory required for data: 420249600
I0726 10:07:46.956581 20213 layer_factory.hpp:77] Creating layer conv4_bn
I0726 10:07:46.956598 20213 net.cpp:100] Creating Layer conv4_bn
I0726 10:07:46.956605 20213 net.cpp:434] conv4_bn <- conv4
I0726 10:07:46.956617 20213 net.cpp:395] conv4_bn -> conv4 (in-place)
I0726 10:07:46.956846 20213 net.cpp:150] Setting up conv4_bn
I0726 10:07:46.956861 20213 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:07:46.956883 20213 net.cpp:165] Memory required for data: 421632000
I0726 10:07:46.956895 20213 layer_factory.hpp:77] Creating layer relu4
I0726 10:07:46.956908 20213 net.cpp:100] Creating Layer relu4
I0726 10:07:46.956915 20213 net.cpp:434] relu4 <- conv4
I0726 10:07:46.956925 20213 net.cpp:395] relu4 -> conv4 (in-place)
I0726 10:07:46.956935 20213 net.cpp:150] Setting up relu4
I0726 10:07:46.956945 20213 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:07:46.956954 20213 net.cpp:165] Memory required for data: 423014400
I0726 10:07:46.956962 20213 layer_factory.hpp:77] Creating layer pool4
I0726 10:07:46.956972 20213 net.cpp:100] Creating Layer pool4
I0726 10:07:46.956981 20213 net.cpp:434] pool4 <- conv4
I0726 10:07:46.956990 20213 net.cpp:408] pool4 -> pool4
I0726 10:07:46.957002 20213 net.cpp:408] pool4 -> pool4_mask
I0726 10:07:46.957052 20213 net.cpp:150] Setting up pool4
I0726 10:07:46.957067 20213 net.cpp:157] Top shape: 2 64 23 30 (88320)
I0726 10:07:46.957077 20213 net.cpp:157] Top shape: 2 64 23 30 (88320)
I0726 10:07:46.957084 20213 net.cpp:165] Memory required for data: 423720960
I0726 10:07:46.957092 20213 layer_factory.hpp:77] Creating layer upsample4
I0726 10:07:46.957104 20213 net.cpp:100] Creating Layer upsample4
I0726 10:07:46.957114 20213 net.cpp:434] upsample4 <- pool4
I0726 10:07:46.957123 20213 net.cpp:434] upsample4 <- pool4_mask
I0726 10:07:46.957134 20213 net.cpp:408] upsample4 -> upsample4
I0726 10:07:46.957147 20213 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 10:07:46.957193 20213 net.cpp:150] Setting up upsample4
I0726 10:07:46.957206 20213 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:07:46.957212 20213 net.cpp:165] Memory required for data: 425103360
I0726 10:07:46.957221 20213 layer_factory.hpp:77] Creating layer conv_decode4
I0726 10:07:46.957237 20213 net.cpp:100] Creating Layer conv_decode4
I0726 10:07:46.957245 20213 net.cpp:434] conv_decode4 <- upsample4
I0726 10:07:46.957255 20213 net.cpp:408] conv_decode4 -> conv_decode4
I0726 10:07:46.969100 20213 net.cpp:150] Setting up conv_decode4
I0726 10:07:46.969174 20213 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:07:46.969185 20213 net.cpp:165] Memory required for data: 426485760
I0726 10:07:46.969208 20213 layer_factory.hpp:77] Creating layer conv_decode4_bn
I0726 10:07:46.969226 20213 net.cpp:100] Creating Layer conv_decode4_bn
I0726 10:07:46.969235 20213 net.cpp:434] conv_decode4_bn <- conv_decode4
I0726 10:07:46.969249 20213 net.cpp:395] conv_decode4_bn -> conv_decode4 (in-place)
I0726 10:07:46.969503 20213 net.cpp:150] Setting up conv_decode4_bn
I0726 10:07:46.969517 20213 net.cpp:157] Top shape: 2 64 45 60 (345600)
I0726 10:07:46.969535 20213 net.cpp:165] Memory required for data: 427868160
I0726 10:07:46.969547 20213 layer_factory.hpp:77] Creating layer upsample3
I0726 10:07:46.969561 20213 net.cpp:100] Creating Layer upsample3
I0726 10:07:46.969573 20213 net.cpp:434] upsample3 <- conv_decode4
I0726 10:07:46.969583 20213 net.cpp:434] upsample3 <- pool3_mask
I0726 10:07:46.969596 20213 net.cpp:408] upsample3 -> upsample3
I0726 10:07:46.969611 20213 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 10:07:46.969641 20213 net.cpp:150] Setting up upsample3
I0726 10:07:46.969655 20213 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:07:46.969662 20213 net.cpp:165] Memory required for data: 433397760
I0726 10:07:46.969671 20213 layer_factory.hpp:77] Creating layer conv_decode3
I0726 10:07:46.969687 20213 net.cpp:100] Creating Layer conv_decode3
I0726 10:07:46.969698 20213 net.cpp:434] conv_decode3 <- upsample3
I0726 10:07:46.969712 20213 net.cpp:408] conv_decode3 -> conv_decode3
I0726 10:07:46.982239 20213 net.cpp:150] Setting up conv_decode3
I0726 10:07:46.982316 20213 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:07:46.982331 20213 net.cpp:165] Memory required for data: 438927360
I0726 10:07:46.982362 20213 layer_factory.hpp:77] Creating layer conv_decode3_bn
I0726 10:07:46.982383 20213 net.cpp:100] Creating Layer conv_decode3_bn
I0726 10:07:46.982393 20213 net.cpp:434] conv_decode3_bn <- conv_decode3
I0726 10:07:46.982406 20213 net.cpp:395] conv_decode3_bn -> conv_decode3 (in-place)
I0726 10:07:46.982717 20213 net.cpp:150] Setting up conv_decode3_bn
I0726 10:07:46.982734 20213 net.cpp:157] Top shape: 2 64 90 120 (1382400)
I0726 10:07:46.982741 20213 net.cpp:165] Memory required for data: 444456960
I0726 10:07:46.982753 20213 layer_factory.hpp:77] Creating layer upsample2
I0726 10:07:46.982764 20213 net.cpp:100] Creating Layer upsample2
I0726 10:07:46.982771 20213 net.cpp:434] upsample2 <- conv_decode3
I0726 10:07:46.982780 20213 net.cpp:434] upsample2 <- pool2_mask
I0726 10:07:46.982789 20213 net.cpp:408] upsample2 -> upsample2
I0726 10:07:46.982801 20213 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 10:07:46.982827 20213 net.cpp:150] Setting up upsample2
I0726 10:07:46.982837 20213 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:07:46.982844 20213 net.cpp:165] Memory required for data: 466575360
I0726 10:07:46.982851 20213 layer_factory.hpp:77] Creating layer conv_decode2
I0726 10:07:46.982867 20213 net.cpp:100] Creating Layer conv_decode2
I0726 10:07:46.982874 20213 net.cpp:434] conv_decode2 <- upsample2
I0726 10:07:46.982885 20213 net.cpp:408] conv_decode2 -> conv_decode2
I0726 10:07:46.996824 20213 net.cpp:150] Setting up conv_decode2
I0726 10:07:46.996894 20213 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:07:46.996906 20213 net.cpp:165] Memory required for data: 488693760
I0726 10:07:46.996922 20213 layer_factory.hpp:77] Creating layer conv_decode2_bn
I0726 10:07:46.996942 20213 net.cpp:100] Creating Layer conv_decode2_bn
I0726 10:07:46.996951 20213 net.cpp:434] conv_decode2_bn <- conv_decode2
I0726 10:07:46.996966 20213 net.cpp:395] conv_decode2_bn -> conv_decode2 (in-place)
I0726 10:07:46.997370 20213 net.cpp:150] Setting up conv_decode2_bn
I0726 10:07:46.997388 20213 net.cpp:157] Top shape: 2 64 180 240 (5529600)
I0726 10:07:46.997396 20213 net.cpp:165] Memory required for data: 510812160
I0726 10:07:46.997409 20213 layer_factory.hpp:77] Creating layer upsample1
I0726 10:07:46.997423 20213 net.cpp:100] Creating Layer upsample1
I0726 10:07:46.997433 20213 net.cpp:434] upsample1 <- conv_decode2
I0726 10:07:46.997442 20213 net.cpp:434] upsample1 <- pool1_mask
I0726 10:07:46.997453 20213 net.cpp:408] upsample1 -> upsample1
I0726 10:07:46.997485 20213 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 10:07:46.997537 20213 net.cpp:150] Setting up upsample1
I0726 10:07:46.997558 20213 net.cpp:157] Top shape: 2 64 360 480 (22118400)
I0726 10:07:46.997567 20213 net.cpp:165] Memory required for data: 599285760
I0726 10:07:46.997575 20213 layer_factory.hpp:77] Creating layer conv_decode1
I0726 10:07:46.997592 20213 net.cpp:100] Creating Layer conv_decode1
I0726 10:07:46.997603 20213 net.cpp:434] conv_decode1 <- upsample1
I0726 10:07:46.997617 20213 net.cpp:408] conv_decode1 -> conv_decode1
I0726 10:07:47.012888 20213 net.cpp:150] Setting up conv_decode1
I0726 10:07:47.012948 20213 net.cpp:157] Top shape: 2 64 360 480 (22118400)
I0726 10:07:47.012958 20213 net.cpp:165] Memory required for data: 687759360
I0726 10:07:47.012972 20213 layer_factory.hpp:77] Creating layer conv_decode1_bn
I0726 10:07:47.012991 20213 net.cpp:100] Creating Layer conv_decode1_bn
I0726 10:07:47.013000 20213 net.cpp:434] conv_decode1_bn <- conv_decode1
I0726 10:07:47.013013 20213 net.cpp:395] conv_decode1_bn -> conv_decode1 (in-place)
I0726 10:07:47.013496 20213 net.cpp:150] Setting up conv_decode1_bn
I0726 10:07:47.013512 20213 net.cpp:157] Top shape: 2 64 360 480 (22118400)
I0726 10:07:47.013520 20213 net.cpp:165] Memory required for data: 776232960
I0726 10:07:47.013552 20213 layer_factory.hpp:77] Creating layer conv_classifier
I0726 10:07:47.013586 20213 net.cpp:100] Creating Layer conv_classifier
I0726 10:07:47.013602 20213 net.cpp:434] conv_classifier <- conv_decode1
I0726 10:07:47.013614 20213 net.cpp:408] conv_classifier -> conv_classifier
I0726 10:07:47.020902 20213 net.cpp:150] Setting up conv_classifier
I0726 10:07:47.020977 20213 net.cpp:157] Top shape: 2 2 360 480 (691200)
I0726 10:07:47.020987 20213 net.cpp:165] Memory required for data: 778997760
I0726 10:07:47.021016 20213 layer_factory.hpp:77] Creating layer conv_classifier_conv_classifier_0_split
I0726 10:07:47.021039 20213 net.cpp:100] Creating Layer conv_classifier_conv_classifier_0_split
I0726 10:07:47.021049 20213 net.cpp:434] conv_classifier_conv_classifier_0_split <- conv_classifier
I0726 10:07:47.021060 20213 net.cpp:408] conv_classifier_conv_classifier_0_split -> conv_classifier_conv_classifier_0_split_0
I0726 10:07:47.021077 20213 net.cpp:408] conv_classifier_conv_classifier_0_split -> conv_classifier_conv_classifier_0_split_1
I0726 10:07:47.021168 20213 net.cpp:150] Setting up conv_classifier_conv_classifier_0_split
I0726 10:07:47.021181 20213 net.cpp:157] Top shape: 2 2 360 480 (691200)
I0726 10:07:47.021190 20213 net.cpp:157] Top shape: 2 2 360 480 (691200)
I0726 10:07:47.021198 20213 net.cpp:165] Memory required for data: 784527360
I0726 10:07:47.021205 20213 layer_factory.hpp:77] Creating layer loss
I0726 10:07:47.021220 20213 net.cpp:100] Creating Layer loss
I0726 10:07:47.021229 20213 net.cpp:434] loss <- conv_classifier_conv_classifier_0_split_0
I0726 10:07:47.021261 20213 net.cpp:434] loss <- label_data_1_split_0
I0726 10:07:47.021275 20213 net.cpp:408] loss -> loss
I0726 10:07:47.021292 20213 layer_factory.hpp:77] Creating layer loss
I0726 10:07:47.037358 20213 net.cpp:150] Setting up loss
I0726 10:07:47.037425 20213 net.cpp:157] Top shape: (1)
I0726 10:07:47.037436 20213 net.cpp:160]     with loss weight 1
I0726 10:07:47.037453 20213 net.cpp:165] Memory required for data: 784527364
I0726 10:07:47.037462 20213 layer_factory.hpp:77] Creating layer accuracy
I0726 10:07:47.037478 20213 net.cpp:100] Creating Layer accuracy
I0726 10:07:47.037489 20213 net.cpp:434] accuracy <- conv_classifier_conv_classifier_0_split_1
I0726 10:07:47.037500 20213 net.cpp:434] accuracy <- label_data_1_split_1
I0726 10:07:47.037511 20213 net.cpp:408] accuracy -> accuracy
I0726 10:07:47.037542 20213 net.cpp:408] accuracy -> per_class_accuracy
I0726 10:07:47.037606 20213 net.cpp:150] Setting up accuracy
I0726 10:07:47.037618 20213 net.cpp:157] Top shape: (1)
I0726 10:07:47.037627 20213 net.cpp:157] Top shape: 2 (2)
I0726 10:07:47.037636 20213 net.cpp:165] Memory required for data: 784527376
I0726 10:07:47.037644 20213 net.cpp:228] accuracy does not need backward computation.
I0726 10:07:47.037652 20213 net.cpp:226] loss needs backward computation.
I0726 10:07:47.037662 20213 net.cpp:226] conv_classifier_conv_classifier_0_split needs backward computation.
I0726 10:07:47.037672 20213 net.cpp:226] conv_classifier needs backward computation.
I0726 10:07:47.037678 20213 net.cpp:226] conv_decode1_bn needs backward computation.
I0726 10:07:47.037686 20213 net.cpp:226] conv_decode1 needs backward computation.
I0726 10:07:47.037694 20213 net.cpp:226] upsample1 needs backward computation.
I0726 10:07:47.037703 20213 net.cpp:226] conv_decode2_bn needs backward computation.
I0726 10:07:47.037710 20213 net.cpp:226] conv_decode2 needs backward computation.
I0726 10:07:47.037719 20213 net.cpp:226] upsample2 needs backward computation.
I0726 10:07:47.037729 20213 net.cpp:226] conv_decode3_bn needs backward computation.
I0726 10:07:47.037739 20213 net.cpp:226] conv_decode3 needs backward computation.
I0726 10:07:47.037746 20213 net.cpp:226] upsample3 needs backward computation.
I0726 10:07:47.037755 20213 net.cpp:226] conv_decode4_bn needs backward computation.
I0726 10:07:47.037762 20213 net.cpp:226] conv_decode4 needs backward computation.
I0726 10:07:47.037770 20213 net.cpp:226] upsample4 needs backward computation.
I0726 10:07:47.037780 20213 net.cpp:226] pool4 needs backward computation.
I0726 10:07:47.037799 20213 net.cpp:226] relu4 needs backward computation.
I0726 10:07:47.037806 20213 net.cpp:226] conv4_bn needs backward computation.
I0726 10:07:47.037814 20213 net.cpp:226] conv4 needs backward computation.
I0726 10:07:47.037823 20213 net.cpp:226] pool3 needs backward computation.
I0726 10:07:47.037830 20213 net.cpp:226] relu3 needs backward computation.
I0726 10:07:47.037837 20213 net.cpp:226] conv3_bn needs backward computation.
I0726 10:07:47.037844 20213 net.cpp:226] conv3 needs backward computation.
I0726 10:07:47.037854 20213 net.cpp:226] pool2 needs backward computation.
I0726 10:07:47.037863 20213 net.cpp:226] relu2 needs backward computation.
I0726 10:07:47.037871 20213 net.cpp:226] conv2_bn needs backward computation.
I0726 10:07:47.037878 20213 net.cpp:226] conv2 needs backward computation.
I0726 10:07:47.037886 20213 net.cpp:226] pool1 needs backward computation.
I0726 10:07:47.037894 20213 net.cpp:226] relu1 needs backward computation.
I0726 10:07:47.037902 20213 net.cpp:226] conv1_bn needs backward computation.
I0726 10:07:47.037910 20213 net.cpp:226] conv1 needs backward computation.
I0726 10:07:47.037919 20213 net.cpp:228] norm does not need backward computation.
I0726 10:07:47.037927 20213 net.cpp:228] label_data_1_split does not need backward computation.
I0726 10:07:47.037935 20213 net.cpp:228] data does not need backward computation.
I0726 10:07:47.037943 20213 net.cpp:270] This network produces output accuracy
I0726 10:07:47.037950 20213 net.cpp:270] This network produces output loss
I0726 10:07:47.037976 20213 net.cpp:270] This network produces output per_class_accuracy
I0726 10:07:47.038009 20213 net.cpp:283] Network initialization done.
I0726 10:07:47.038162 20213 solver.cpp:60] Solver scaffolding done.
I0726 10:07:47.041972 20213 caffe.cpp:155] Finetuning from examples/segnet/segnet_train/premodel/segnet_basic_camvid.caffemodel
I0726 10:07:47.071341 20213 net.cpp:761] Ignoring source layer dense_softmax_inner_prod
I0726 10:07:47.094951 20213 net.cpp:761] Ignoring source layer dense_softmax_inner_prod
I0726 10:07:47.146168 20213 parallel.cpp:392] GPUs pairs 2:3
I0726 10:07:50.397627 20213 dense_image_data_layer.cpp:49] Opening file /data/dengtingqiang/caffe-segnet-cudnn/caffe-segnet-cudnn5/data/mydata/train.txt
I0726 10:07:50.397727 20213 dense_image_data_layer.cpp:59] Shuffling data
I0726 10:07:50.397753 20213 dense_image_data_layer.cpp:64] A total of 4 examples.
I0726 10:07:50.462637 20213 dense_image_data_layer.cpp:117] output data size: 2,3,360,480
I0726 10:07:50.584714 20213 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 10:07:50.595230 20213 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 10:07:50.608140 20213 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 10:07:50.617897 20213 upsample_layer.cpp:27] Params 'pad_out_{}_' are deprecated. Please declare upsample height and width useing the upsample_h, upsample_w parameters.
I0726 10:07:50.644816 20213 parallel.cpp:425] Starting Optimization
I0726 10:07:50.644891 20213 solver.cpp:279] Solving segnet
I0726 10:07:50.644902 20213 solver.cpp:280] Learning Rate Policy: step
I0726 10:07:51.351807 20213 solver.cpp:228] Iteration 0, loss = 3.43187
I0726 10:07:51.351904 20213 solver.cpp:244]     Train net output #0: accuracy = 0.496817
I0726 10:07:51.351938 20213 solver.cpp:244]     Train net output #1: loss = 3.43187 (* 1 = 3.43187 loss)
I0726 10:07:51.351953 20213 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.516893
I0726 10:07:51.351966 20213 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.393801
I0726 10:07:51.694638 20213 sgd_solver.cpp:106] Iteration 0, lr = 0.01
I0726 10:08:05.373497 20213 solver.cpp:228] Iteration 20, loss = 1.59756
I0726 10:08:05.373598 20213 solver.cpp:244]     Train net output #0: accuracy = 0.599404
I0726 10:08:05.373633 20213 solver.cpp:244]     Train net output #1: loss = 1.59756 (* 1 = 1.59756 loss)
I0726 10:08:05.373643 20213 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.521937
I0726 10:08:05.373652 20213 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.996913
I0726 10:08:05.373690 20213 sgd_solver.cpp:106] Iteration 20, lr = 0.01
I0726 10:08:18.914572 20213 solver.cpp:228] Iteration 40, loss = 0.442346
I0726 10:08:18.914705 20213 solver.cpp:244]     Train net output #0: accuracy = 0.811858
I0726 10:08:18.914728 20213 solver.cpp:244]     Train net output #1: loss = 0.442346 (* 1 = 0.442346 loss)
I0726 10:08:18.914738 20213 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.790758
I0726 10:08:18.914746 20213 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.920129
I0726 10:08:18.914779 20213 sgd_solver.cpp:106] Iteration 40, lr = 0.01
I0726 10:08:31.934589 20213 solver.cpp:228] Iteration 60, loss = 0.243243
I0726 10:08:31.934659 20213 solver.cpp:244]     Train net output #0: accuracy = 0.849193
I0726 10:08:31.934679 20213 solver.cpp:244]     Train net output #1: loss = 0.243243 (* 1 = 0.243243 loss)
I0726 10:08:31.934689 20213 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.831933
I0726 10:08:31.934697 20213 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.968071
I0726 10:08:32.188803 20213 sgd_solver.cpp:106] Iteration 60, lr = 0.01
I0726 10:08:46.004669 20213 solver.cpp:228] Iteration 80, loss = 0.187601
I0726 10:08:46.004779 20213 solver.cpp:244]     Train net output #0: accuracy = 0.903999
I0726 10:08:46.004817 20213 solver.cpp:244]     Train net output #1: loss = 0.187601 (* 1 = 0.187601 loss)
I0726 10:08:46.004834 20213 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.890587
I0726 10:08:46.004849 20213 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.972821
I0726 10:08:46.004896 20213 sgd_solver.cpp:106] Iteration 80, lr = 0.01
I0726 10:08:59.971663 20213 solver.cpp:228] Iteration 100, loss = 0.174102
I0726 10:08:59.971937 20213 solver.cpp:244]     Train net output #0: accuracy = 0.913854
I0726 10:08:59.971987 20213 solver.cpp:244]     Train net output #1: loss = 0.174102 (* 1 = 0.174102 loss)
I0726 10:08:59.971997 20213 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.901357
I0726 10:08:59.972007 20213 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.977983
I0726 10:08:59.972085 20213 sgd_solver.cpp:106] Iteration 100, lr = 0.01
I0726 10:09:13.771916 20213 solver.cpp:228] Iteration 120, loss = 0.171519
I0726 10:09:13.771996 20213 solver.cpp:244]     Train net output #0: accuracy = 0.894219
I0726 10:09:13.772016 20213 solver.cpp:244]     Train net output #1: loss = 0.171519 (* 1 = 0.171519 loss)
I0726 10:09:13.772025 20213 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.882287
I0726 10:09:13.772034 20213 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.976401
I0726 10:09:13.772073 20213 sgd_solver.cpp:106] Iteration 120, lr = 0.01
I0726 10:09:27.358644 20213 solver.cpp:228] Iteration 140, loss = 0.165225
I0726 10:09:27.358729 20213 solver.cpp:244]     Train net output #0: accuracy = 0.915937
I0726 10:09:27.358749 20213 solver.cpp:244]     Train net output #1: loss = 0.165225 (* 1 = 0.165225 loss)
I0726 10:09:27.358758 20213 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.903421
I0726 10:09:27.358767 20213 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.980165
I0726 10:09:27.358798 20213 sgd_solver.cpp:106] Iteration 140, lr = 0.01
I0726 10:09:40.958084 20213 solver.cpp:228] Iteration 160, loss = 0.154413
I0726 10:09:40.959064 20213 solver.cpp:244]     Train net output #0: accuracy = 0.923614
I0726 10:09:40.959134 20213 solver.cpp:244]     Train net output #1: loss = 0.154413 (* 1 = 0.154413 loss)
I0726 10:09:40.959154 20213 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.912158
I0726 10:09:40.959173 20213 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.982401
I0726 10:09:41.211351 20213 sgd_solver.cpp:106] Iteration 160, lr = 0.01
I0726 10:09:55.368616 20213 solver.cpp:228] Iteration 180, loss = 0.170496
I0726 10:09:55.368701 20213 solver.cpp:244]     Train net output #0: accuracy = 0.892135
I0726 10:09:55.368721 20213 solver.cpp:244]     Train net output #1: loss = 0.170496 (* 1 = 0.170496 loss)
I0726 10:09:55.368729 20213 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.878618
I0726 10:09:55.368743 20213 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.985234
I0726 10:09:55.368777 20213 sgd_solver.cpp:106] Iteration 180, lr = 0.01
I0726 10:10:08.705015 20213 solver.cpp:228] Iteration 200, loss = 0.158177
I0726 10:10:08.705098 20213 solver.cpp:244]     Train net output #0: accuracy = 0.893927
I0726 10:10:08.705118 20213 solver.cpp:244]     Train net output #1: loss = 0.158177 (* 1 = 0.158177 loss)
I0726 10:10:08.705127 20213 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.880139
I0726 10:10:08.705134 20213 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.988885
I0726 10:10:08.705166 20213 sgd_solver.cpp:106] Iteration 200, lr = 0.01
I0726 10:10:22.717576 20213 solver.cpp:228] Iteration 220, loss = 0.131242
I0726 10:10:22.717841 20213 solver.cpp:244]     Train net output #0: accuracy = 0.931244
I0726 10:10:22.717914 20213 solver.cpp:244]     Train net output #1: loss = 0.131242 (* 1 = 0.131242 loss)
I0726 10:10:22.717936 20213 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.921005
I0726 10:10:22.717962 20213 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.983785
I0726 10:10:22.718080 20213 sgd_solver.cpp:106] Iteration 220, lr = 0.01
I0726 10:10:36.726857 20213 solver.cpp:228] Iteration 240, loss = 0.145676
I0726 10:10:36.726944 20213 solver.cpp:244]     Train net output #0: accuracy = 0.928365
I0726 10:10:36.726969 20213 solver.cpp:244]     Train net output #1: loss = 0.145676 (* 1 = 0.145676 loss)
I0726 10:10:36.726980 20213 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.917375
I0726 10:10:36.726991 20213 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.98476
I0726 10:10:36.727026 20213 sgd_solver.cpp:106] Iteration 240, lr = 0.01
I0726 10:10:50.350105 20213 solver.cpp:228] Iteration 260, loss = 0.0998197
I0726 10:10:50.350183 20213 solver.cpp:244]     Train net output #0: accuracy = 0.964184
I0726 10:10:50.350203 20213 solver.cpp:244]     Train net output #1: loss = 0.0998197 (* 1 = 0.0998197 loss)
I0726 10:10:50.350214 20213 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.956853
I0726 10:10:50.350224 20213 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.993615
I0726 10:10:50.350265 20213 sgd_solver.cpp:106] Iteration 260, lr = 0.01
I0726 10:11:04.507803 20213 solver.cpp:228] Iteration 280, loss = 0.117321
I0726 10:11:04.508111 20213 solver.cpp:244]     Train net output #0: accuracy = 0.964253
I0726 10:11:04.508185 20213 solver.cpp:244]     Train net output #1: loss = 0.117321 (* 1 = 0.117321 loss)
I0726 10:11:04.508196 20213 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.957674
I0726 10:11:04.508205 20213 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.99067
I0726 10:11:04.508277 20213 sgd_solver.cpp:106] Iteration 280, lr = 0.01
I0726 10:11:18.513808 20213 solver.cpp:228] Iteration 300, loss = 0.131071
I0726 10:11:18.513880 20213 solver.cpp:244]     Train net output #0: accuracy = 0.929329
I0726 10:11:18.513897 20213 solver.cpp:244]     Train net output #1: loss = 0.131071 (* 1 = 0.131071 loss)
I0726 10:11:18.513906 20213 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.917046
I0726 10:11:18.513914 20213 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.992354
I0726 10:11:18.513944 20213 sgd_solver.cpp:106] Iteration 300, lr = 0.01
I0726 10:11:31.778563 20213 solver.cpp:228] Iteration 320, loss = 0.130769
I0726 10:11:31.778640 20213 solver.cpp:244]     Train net output #0: accuracy = 0.930911
I0726 10:11:31.778658 20213 solver.cpp:244]     Train net output #1: loss = 0.130769 (* 1 = 0.130769 loss)
I0726 10:11:31.778682 20213 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.919335
I0726 10:11:31.778690 20213 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.990313
I0726 10:11:31.778719 20213 sgd_solver.cpp:106] Iteration 320, lr = 0.01
I0726 10:11:45.511940 20213 solver.cpp:228] Iteration 340, loss = 0.140808
I0726 10:11:45.512097 20213 solver.cpp:244]     Train net output #0: accuracy = 0.929748
I0726 10:11:45.512121 20213 solver.cpp:244]     Train net output #1: loss = 0.140808 (* 1 = 0.140808 loss)
I0726 10:11:45.512132 20213 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.918962
I0726 10:11:45.512140 20213 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.985097
I0726 10:11:45.512192 20213 sgd_solver.cpp:106] Iteration 340, lr = 0.01
I0726 10:11:59.310567 20213 solver.cpp:228] Iteration 360, loss = 0.14325
I0726 10:11:59.310674 20213 solver.cpp:244]     Train net output #0: accuracy = 0.92989
I0726 10:11:59.310703 20213 solver.cpp:244]     Train net output #1: loss = 0.14325 (* 1 = 0.14325 loss)
I0726 10:11:59.310717 20213 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.91965
I0726 10:11:59.310729 20213 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.982436
I0726 10:11:59.310780 20213 sgd_solver.cpp:106] Iteration 360, lr = 0.01
I0726 10:12:13.483978 20213 solver.cpp:228] Iteration 380, loss = 0.134959
I0726 10:12:13.484076 20213 solver.cpp:244]     Train net output #0: accuracy = 0.929462
I0726 10:12:13.484103 20213 solver.cpp:244]     Train net output #1: loss = 0.134959 (* 1 = 0.134959 loss)
I0726 10:12:13.484117 20213 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.917672
I0726 10:12:13.484129 20213 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.989958
I0726 10:12:13.484170 20213 sgd_solver.cpp:106] Iteration 380, lr = 0.01
I0726 10:12:27.501477 20213 solver.cpp:228] Iteration 400, loss = 0.153679
I0726 10:12:27.501750 20213 solver.cpp:244]     Train net output #0: accuracy = 0.921412
I0726 10:12:27.501798 20213 solver.cpp:244]     Train net output #1: loss = 0.153679 (* 1 = 0.153679 loss)
I0726 10:12:27.501817 20213 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.909329
I0726 10:12:27.501832 20213 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.983412
I0726 10:12:27.501901 20213 sgd_solver.cpp:106] Iteration 400, lr = 0.01
I0726 10:12:41.357250 20213 solver.cpp:228] Iteration 420, loss = 0.106525
I0726 10:12:41.357350 20213 solver.cpp:244]     Train net output #0: accuracy = 0.966649
I0726 10:12:41.357375 20213 solver.cpp:244]     Train net output #1: loss = 0.106525 (* 1 = 0.106525 loss)
I0726 10:12:41.357385 20213 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.960847
I0726 10:12:41.357399 20213 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.989944
I0726 10:12:41.357450 20213 sgd_solver.cpp:106] Iteration 420, lr = 0.01
I0726 10:12:55.016451 20213 solver.cpp:228] Iteration 440, loss = 0.133564
I0726 10:12:55.016549 20213 solver.cpp:244]     Train net output #0: accuracy = 0.931377
I0726 10:12:55.016577 20213 solver.cpp:244]     Train net output #1: loss = 0.133564 (* 1 = 0.133564 loss)
I0726 10:12:55.016593 20213 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.920594
I0726 10:12:55.016613 20213 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.986712
I0726 10:12:55.016670 20213 sgd_solver.cpp:106] Iteration 440, lr = 0.01
I0726 10:13:09.068150 20213 solver.cpp:228] Iteration 460, loss = 0.12681
I0726 10:13:09.070065 20213 solver.cpp:244]     Train net output #0: accuracy = 0.934783
I0726 10:13:09.070094 20213 solver.cpp:244]     Train net output #1: loss = 0.12681 (* 1 = 0.12681 loss)
I0726 10:13:09.070104 20213 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.926724
I0726 10:13:09.070112 20213 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.976138
I0726 10:13:09.070152 20213 sgd_solver.cpp:106] Iteration 460, lr = 0.01
I0726 10:13:23.288586 20213 solver.cpp:228] Iteration 480, loss = 0.131707
I0726 10:13:23.288678 20213 solver.cpp:244]     Train net output #0: accuracy = 0.931146
I0726 10:13:23.288698 20213 solver.cpp:244]     Train net output #1: loss = 0.131707 (* 1 = 0.131707 loss)
I0726 10:13:23.288707 20213 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.919525
I0726 10:13:23.288714 20213 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.990775
I0726 10:13:23.288751 20213 sgd_solver.cpp:106] Iteration 480, lr = 0.01
I0726 10:13:37.258203 20213 solver.cpp:228] Iteration 500, loss = 0.148985
I0726 10:13:37.258280 20213 solver.cpp:244]     Train net output #0: accuracy = 0.930541
I0726 10:13:37.258303 20213 solver.cpp:244]     Train net output #1: loss = 0.148985 (* 1 = 0.148985 loss)
I0726 10:13:37.258313 20213 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.92207
I0726 10:13:37.258322 20213 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.974009
I0726 10:13:37.258359 20213 sgd_solver.cpp:106] Iteration 500, lr = 0.01
I0726 10:13:51.255827 20213 solver.cpp:228] Iteration 520, loss = 0.158362
I0726 10:13:51.256049 20213 solver.cpp:244]     Train net output #0: accuracy = 0.894575
I0726 10:13:51.256093 20213 solver.cpp:244]     Train net output #1: loss = 0.158362 (* 1 = 0.158362 loss)
I0726 10:13:51.256103 20213 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.88118
I0726 10:13:51.256110 20213 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.986831
I0726 10:13:51.256165 20213 sgd_solver.cpp:106] Iteration 520, lr = 0.01
I0726 10:14:05.370045 20213 solver.cpp:228] Iteration 540, loss = 0.131552
I0726 10:14:05.370137 20213 solver.cpp:244]     Train net output #0: accuracy = 0.932185
I0726 10:14:05.370162 20213 solver.cpp:244]     Train net output #1: loss = 0.131552 (* 1 = 0.131552 loss)
I0726 10:14:05.370172 20213 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.92151
I0726 10:14:05.370183 20213 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.98696
I0726 10:14:05.370226 20213 sgd_solver.cpp:106] Iteration 540, lr = 0.01
I0726 10:14:19.317683 20213 solver.cpp:228] Iteration 560, loss = 0.124104
I0726 10:14:19.317780 20213 solver.cpp:244]     Train net output #0: accuracy = 0.932043
I0726 10:14:19.317802 20213 solver.cpp:244]     Train net output #1: loss = 0.124104 (* 1 = 0.124104 loss)
I0726 10:14:19.317812 20213 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.920352
I0726 10:14:19.317822 20213 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.992034
I0726 10:14:19.317863 20213 sgd_solver.cpp:106] Iteration 560, lr = 0.01
I0726 10:14:33.112396 20213 solver.cpp:228] Iteration 580, loss = 0.108141
I0726 10:14:33.112715 20213 solver.cpp:244]     Train net output #0: accuracy = 0.96781
I0726 10:14:33.112782 20213 solver.cpp:244]     Train net output #1: loss = 0.108141 (* 1 = 0.108141 loss)
I0726 10:14:33.112807 20213 solver.cpp:244]     Train net output #2: per_class_accuracy = 0.961996
I0726 10:14:33.112825 20213 solver.cpp:244]     Train net output #3: per_class_accuracy = 0.991149
I0726 10:14:33.112954 20213 sgd_solver.cpp:106] Iteration 580, lr = 0.01
I0726 10:14:37.294569 20213 solver.cpp:454] Snapshotting to binary proto file examples/segnet/segnet_train/segnet_basic/seg_iter_587.caffemodel
I0726 10:14:37.586233 20213 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/segnet/segnet_train/segnet_basic/seg_iter_587.solverstate
I0726 10:14:37.595239 20213 solver.cpp:301] Optimization stopped early.
I0726 10:14:37.673976 20213 caffe.cpp:254] Optimization Done.
